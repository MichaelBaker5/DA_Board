   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"SPI001.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SPI001_Baud_Parameter_Values0
  18              		.section	.rodata
  19              		.align	2
  22              	SPI001_Baud_Parameter_Values0:
  23 0000 C001     		.short	448
  24 0002 0600     		.short	6
  25              		.section	.text.SPI001_lInit,"ax",%progbits
  26              		.align	2
  27              		.global	SPI001_lInit
  28              		.code	16
  29              		.thumb_func
  31              	SPI001_lInit:
  32              	.LFB33:
  33              		.file 1 "../Dave/Generated/src/SPI001/SPI001.c"
   1:../Dave/Generated/src/SPI001/SPI001.c **** /*******************************************************************************
   2:../Dave/Generated/src/SPI001/SPI001.c **** **  DAVE App Name : SPI001       App Version: 1.0.24               
   3:../Dave/Generated/src/SPI001/SPI001.c **** **  This file is generated by DAVE, User modification to this file will be    **
   4:../Dave/Generated/src/SPI001/SPI001.c **** **  overwritten at the next code generation.                                  **
   5:../Dave/Generated/src/SPI001/SPI001.c **** *******************************************************************************/
   6:../Dave/Generated/src/SPI001/SPI001.c **** 
   7:../Dave/Generated/src/SPI001/SPI001.c **** 
   8:../Dave/Generated/src/SPI001/SPI001.c **** /*CODE_BLOCK_BEGIN[SPI001.c]*/
   9:../Dave/Generated/src/SPI001/SPI001.c **** /******************************************************************************
  10:../Dave/Generated/src/SPI001/SPI001.c ****  Copyright (c) 2013, Infineon Technologies AG                                **
  11:../Dave/Generated/src/SPI001/SPI001.c ****  All rights reserved.                                                        **
  12:../Dave/Generated/src/SPI001/SPI001.c ****                                                                              **
  13:../Dave/Generated/src/SPI001/SPI001.c ****  Redistribution and use in source and binary forms, with or without          **
  14:../Dave/Generated/src/SPI001/SPI001.c ****  modification,are permitted provided that the following conditions are met:  **
  15:../Dave/Generated/src/SPI001/SPI001.c ****                                                                              **
  16:../Dave/Generated/src/SPI001/SPI001.c ****  *Redistributions of source code must retain the above copyright notice,     **
  17:../Dave/Generated/src/SPI001/SPI001.c ****  this list of conditions and the following disclaimer.                       **
  18:../Dave/Generated/src/SPI001/SPI001.c ****  *Redistributions in binary form must reproduce the above copyright notice,  **
  19:../Dave/Generated/src/SPI001/SPI001.c ****  this list of conditions and the following disclaimer in the documentation   **
  20:../Dave/Generated/src/SPI001/SPI001.c ****  and/or other materials provided with the distribution.                      **
  21:../Dave/Generated/src/SPI001/SPI001.c ****  *Neither the name of the copyright holders nor the names of its contributors**
  22:../Dave/Generated/src/SPI001/SPI001.c ****  may be used to endorse or promote products derived from this software       **
  23:../Dave/Generated/src/SPI001/SPI001.c ****  without specific prior written permission.                                  **
  24:../Dave/Generated/src/SPI001/SPI001.c ****                                                                              **
  25:../Dave/Generated/src/SPI001/SPI001.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" **
  26:../Dave/Generated/src/SPI001/SPI001.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE   **
  27:../Dave/Generated/src/SPI001/SPI001.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  **
  28:../Dave/Generated/src/SPI001/SPI001.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE  **
  29:../Dave/Generated/src/SPI001/SPI001.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR        **
  30:../Dave/Generated/src/SPI001/SPI001.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF        **
  31:../Dave/Generated/src/SPI001/SPI001.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS   **
  32:../Dave/Generated/src/SPI001/SPI001.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN     **
  33:../Dave/Generated/src/SPI001/SPI001.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)      **
  34:../Dave/Generated/src/SPI001/SPI001.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE  **
  35:../Dave/Generated/src/SPI001/SPI001.c ****  POSSIBILITY OF SUCH DAMAGE.                                                 **
  36:../Dave/Generated/src/SPI001/SPI001.c ****                                                                              **
  37:../Dave/Generated/src/SPI001/SPI001.c ****  To improve the quality of the software, users are encouraged to share       **
  38:../Dave/Generated/src/SPI001/SPI001.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG      **
  39:../Dave/Generated/src/SPI001/SPI001.c ****  dave@infineon.com).                                                         **
  40:../Dave/Generated/src/SPI001/SPI001.c ****                                                                              **
  41:../Dave/Generated/src/SPI001/SPI001.c **** *******************************************************************************
  42:../Dave/Generated/src/SPI001/SPI001.c **** **                                                                           **
  43:../Dave/Generated/src/SPI001/SPI001.c **** **                                                                           **
  44:../Dave/Generated/src/SPI001/SPI001.c **** ** PLATFORM : Infineon XMC4000/ XMC1000 Series                               **
  45:../Dave/Generated/src/SPI001/SPI001.c **** **                                                                           **
  46:../Dave/Generated/src/SPI001/SPI001.c **** ** COMPILER : Compiler Independent                                           **
  47:../Dave/Generated/src/SPI001/SPI001.c **** **                                                                           **
  48:../Dave/Generated/src/SPI001/SPI001.c **** ** AUTHOR   : App Developer                                                  **
  49:../Dave/Generated/src/SPI001/SPI001.c **** **                                                                           **
  50:../Dave/Generated/src/SPI001/SPI001.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                      **
  51:../Dave/Generated/src/SPI001/SPI001.c **** **                                                                           **
  52:../Dave/Generated/src/SPI001/SPI001.c **** ** MODIFICATION DATE : Dec 16, 2013                                          **
  53:../Dave/Generated/src/SPI001/SPI001.c **** **                                                                           **
  54:../Dave/Generated/src/SPI001/SPI001.c **** ******************************************************************************/
  55:../Dave/Generated/src/SPI001/SPI001.c **** /******************************************************************************
  56:../Dave/Generated/src/SPI001/SPI001.c **** **                      Author(s) Identity                                   **
  57:../Dave/Generated/src/SPI001/SPI001.c **** *******************************************************************************
  58:../Dave/Generated/src/SPI001/SPI001.c **** **                                                                           **
  59:../Dave/Generated/src/SPI001/SPI001.c **** ** Initials    Name                                                          **
  60:../Dave/Generated/src/SPI001/SPI001.c **** ** --------------------------------------------------------------------------**
  61:../Dave/Generated/src/SPI001/SPI001.c **** ** AEP         App Developer                                                 **
  62:../Dave/Generated/src/SPI001/SPI001.c **** **                                                                           **
  63:../Dave/Generated/src/SPI001/SPI001.c **** ******************************************************************************/
  64:../Dave/Generated/src/SPI001/SPI001.c **** 
  65:../Dave/Generated/src/SPI001/SPI001.c **** /**
  66:../Dave/Generated/src/SPI001/SPI001.c ****  *
  67:../Dave/Generated/src/SPI001/SPI001.c ****  * @file SPI001.c
  68:../Dave/Generated/src/SPI001/SPI001.c ****  *
  69:../Dave/Generated/src/SPI001/SPI001.c ****  * @App Version SPI001 <1.0.24>
  70:../Dave/Generated/src/SPI001/SPI001.c ****  * 
  71:../Dave/Generated/src/SPI001/SPI001.c ****  * @brief  SPI001 App provides non reentrant APIs for higher level Apps 
  72:../Dave/Generated/src/SPI001/SPI001.c ****  *         which can be used in a Non -RTOS environment. 
  73:../Dave/Generated/src/SPI001/SPI001.c ****  *         Limitations of Simple SPI App
  74:../Dave/Generated/src/SPI001/SPI001.c ****  *         a) Read/Write functions are non reentrant.
  75:../Dave/Generated/src/SPI001/SPI001.c ****  *         b) No support for DMA mode.
  76:../Dave/Generated/src/SPI001/SPI001.c ****  */
  77:../Dave/Generated/src/SPI001/SPI001.c **** /*
  78:../Dave/Generated/src/SPI001/SPI001.c ****  * Revision History
  79:../Dave/Generated/src/SPI001/SPI001.c ****  * 01 Jun 2012 v1.0.0   Initial version
  80:../Dave/Generated/src/SPI001/SPI001.c ****  * 26 Jul 2012 v1.0.2   Modified to support Quad mode functionalities
  81:../Dave/Generated/src/SPI001/SPI001.c ****  * 17 Aug 2012 v1.0.4   Macro correction in USIC.h,Fix for OutputEnable for 
  82:../Dave/Generated/src/SPI001/SPI001.c ****  *                      HW controlled pins 
  83:../Dave/Generated/src/SPI001/SPI001.c ****  * 04 Feb 2013 v1.0.12  1. Modified as per coding guidelines and MISRA checks
  84:../Dave/Generated/src/SPI001/SPI001.c ****  *                      2. Modified for baud calculation during initialization.
  85:../Dave/Generated/src/SPI001/SPI001.c ****  *                      3. Modified the macros FUNCTION_ENTRY, FUNCTION_EXIT  
  86:../Dave/Generated/src/SPI001/SPI001.c ****  *                      and ERROR
  87:../Dave/Generated/src/SPI001/SPI001.c ****  *                      4. The hardcoded values are replaced with macros in 
  88:../Dave/Generated/src/SPI001/SPI001.c ****  *                      SPI001_lConfigureBaudRate() function.
  89:../Dave/Generated/src/SPI001/SPI001.c ****  *                      5. The PCTQ value updation in BRG register is removed  
  90:../Dave/Generated/src/SPI001/SPI001.c ****  *                      as the value is taken as zero.
  91:../Dave/Generated/src/SPI001/SPI001.c ****  *                      6. Updatd for revision history alignments.
  92:../Dave/Generated/src/SPI001/SPI001.c ****  *                      7. Updated function SPI001_Init() for XMC1000 devices.
  93:../Dave/Generated/src/SPI001/SPI001.c ****  * 26 Mar 2013 v1.0.16  1. Corrected the revision history.
  94:../Dave/Generated/src/SPI001/SPI001.c ****  * 30 May 2013 v1.0.18  1. HW1 control path configuration added for XMC1000 
  95:../Dave/Generated/src/SPI001/SPI001.c ****  *                      devices in SPI001_lInit() & SPI001_Configure().
  96:../Dave/Generated/src/SPI001/SPI001.c ****  *                      2. HW0 control path configuration added for XMC4000 
  97:../Dave/Generated/src/SPI001/SPI001.c ****  *                      in SPI001_lInit() for MRST & MTSR pins, if operation 
  98:../Dave/Generated/src/SPI001/SPI001.c ****  *                      mode is Half Duplex/Dual/Quad mode.
  99:../Dave/Generated/src/SPI001/SPI001.c ****  *                      3. Added CCR.MODE configurations in SPI001_lInit() 
 100:../Dave/Generated/src/SPI001/SPI001.c ****  *                      & SPI001_Configure() to disable the SPI mode before 
 101:../Dave/Generated/src/SPI001/SPI001.c ****  *                      configuring USIC registers & to enable the SPI mode 
 102:../Dave/Generated/src/SPI001/SPI001.c ****  *                      after configurations to avoid unintended edges. 
 103:../Dave/Generated/src/SPI001/SPI001.c ****  * 16 Dec 2013 v1.0.22  1. DAVEApp_SUCCESS status return added in the 
 104:../Dave/Generated/src/SPI001/SPI001.c ****  *                      SPI001_Configure() Api on successful configuration 
 105:../Dave/Generated/src/SPI001/SPI001.c ****  *                      change.
 106:../Dave/Generated/src/SPI001/SPI001.c ****  *                      2. UTP AI00212595 fixes - CCR.HPCEN configured as per 
 107:../Dave/Generated/src/SPI001/SPI001.c ****  *                      the selected transmission mode in the 
 108:../Dave/Generated/src/SPI001/SPI001.c ****  *                      SPI001_WriteData() Api to avoid the floating lines. 
 109:../Dave/Generated/src/SPI001/SPI001.c ****  *                      3. Error codes are added in various functions, that can
 110:../Dave/Generated/src/SPI001/SPI001.c ****  *                      be logged with DBG002 App.
 111:../Dave/Generated/src/SPI001/SPI001.c ****  *                      4. Removed DBG002_FUNCTION_ENTRY & DBG002_FUNCTION_EXIT
 112:../Dave/Generated/src/SPI001/SPI001.c ****  *                      calling from APIs as using these macros is highly 
 113:../Dave/Generated/src/SPI001/SPI001.c ****  *                      discouraged.    
 114:../Dave/Generated/src/SPI001/SPI001.c ****  *                                                             
 115:../Dave/Generated/src/SPI001/SPI001.c ****  */
 116:../Dave/Generated/src/SPI001/SPI001.c **** 
 117:../Dave/Generated/src/SPI001/SPI001.c **** /******************************************************************************
 118:../Dave/Generated/src/SPI001/SPI001.c ****  ** INCLUDE FILES                                                            **
 119:../Dave/Generated/src/SPI001/SPI001.c ****  *****************************************************************************/
 120:../Dave/Generated/src/SPI001/SPI001.c **** 
 121:../Dave/Generated/src/SPI001/SPI001.c **** #include <DAVE3.h>
 122:../Dave/Generated/src/SPI001/SPI001.c **** #include "../../inc/SPI001/Usic.h"
 123:../Dave/Generated/src/SPI001/SPI001.c ****   
 124:../Dave/Generated/src/SPI001/SPI001.c **** /*****************************************************************************
 125:../Dave/Generated/src/SPI001/SPI001.c ****               DUMMY DEFINTIONS OF DEBUG LOG MACROS
 126:../Dave/Generated/src/SPI001/SPI001.c **** *****************************************************************************/
 127:../Dave/Generated/src/SPI001/SPI001.c **** /*These definitions are included here to avoid compilation errors,
 128:../Dave/Generated/src/SPI001/SPI001.c ****  since the DBG002 app is not part of the project. All the macros are defined
 129:../Dave/Generated/src/SPI001/SPI001.c ****  as empty*/ 
 130:../Dave/Generated/src/SPI001/SPI001.c **** #ifndef _DBG002_H_
 131:../Dave/Generated/src/SPI001/SPI001.c **** 
 132:../Dave/Generated/src/SPI001/SPI001.c **** #define DBG002_MESSAGEID_LITERAL
 133:../Dave/Generated/src/SPI001/SPI001.c **** #define DBG002_ERROR(groupid,messageid,length,value)
 134:../Dave/Generated/src/SPI001/SPI001.c **** 
 135:../Dave/Generated/src/SPI001/SPI001.c **** #endif/* End of definitions of dummy Debug Log macros*/                  
 136:../Dave/Generated/src/SPI001/SPI001.c **** 
 137:../Dave/Generated/src/SPI001/SPI001.c **** /******************************************************************************
 138:../Dave/Generated/src/SPI001/SPI001.c **** **                      Private Macro Definitions                            **
 139:../Dave/Generated/src/SPI001/SPI001.c **** ******************************************************************************/       
 140:../Dave/Generated/src/SPI001/SPI001.c ****   /* System Core clock frequency in MHz */
 141:../Dave/Generated/src/SPI001/SPI001.c **** #define SPI001_CLOCK                    32.0F
 142:../Dave/Generated/src/SPI001/SPI001.c ****      
 143:../Dave/Generated/src/SPI001/SPI001.c **** #define APP_GID                         DBG002_GID_SPI001
 144:../Dave/Generated/src/SPI001/SPI001.c **** #define SPI001_TRMODE_Msk               (0x18U)
 145:../Dave/Generated/src/SPI001/SPI001.c **** #define SPI001_TBUFINDEX_Msk            (0x07U)
 146:../Dave/Generated/src/SPI001/SPI001.c **** #define SPI001_FLAG_REG_Msk             (0x000000E0U)
 147:../Dave/Generated/src/SPI001/SPI001.c **** #define SPI001_FLAG_STATUS_Msk          (0x0000001FU)
 148:../Dave/Generated/src/SPI001/SPI001.c **** 
 149:../Dave/Generated/src/SPI001/SPI001.c **** #define SPI001_MAX_VALUE                1023
 150:../Dave/Generated/src/SPI001/SPI001.c **** /* (DCTQ + 1) DCTQ value is 1 */
 151:../Dave/Generated/src/SPI001/SPI001.c **** #define SPI001_DCTQ_VALUE               0x02 
 152:../Dave/Generated/src/SPI001/SPI001.c **** #define SPI001_MAX_STEPVALUE            1024
 153:../Dave/Generated/src/SPI001/SPI001.c **** /* Intermediate step value to calculate Pdiv */
 154:../Dave/Generated/src/SPI001/SPI001.c **** #define SPI001_IM_STEPVALUE             500 
 155:../Dave/Generated/src/SPI001/SPI001.c **** 
 156:../Dave/Generated/src/SPI001/SPI001.c **** /******************************************************************************
 157:../Dave/Generated/src/SPI001/SPI001.c **** **                      Private Type Definitions                             **
 158:../Dave/Generated/src/SPI001/SPI001.c **** ******************************************************************************/
 159:../Dave/Generated/src/SPI001/SPI001.c **** 
 160:../Dave/Generated/src/SPI001/SPI001.c **** 
 161:../Dave/Generated/src/SPI001/SPI001.c **** /******************************************************************************
 162:../Dave/Generated/src/SPI001/SPI001.c **** **                 Private Function Declarations:
 163:../Dave/Generated/src/SPI001/SPI001.c **** ******************************************************************************/
 164:../Dave/Generated/src/SPI001/SPI001.c **** void SPI001_lInit (const SPI001_HandleType* Handle, \
 165:../Dave/Generated/src/SPI001/SPI001.c ****                                         const uint16_t* SPI001_Baud_Values);
 166:../Dave/Generated/src/SPI001/SPI001.c **** void SPI001_lConfigureBaudRate\
 167:../Dave/Generated/src/SPI001/SPI001.c ****                             (uint32_t BaudRate,uint32_t* Pdiv,uint32_t* Step);
 168:../Dave/Generated/src/SPI001/SPI001.c **** /* Clears the IOCR.PCR value of the Port Register  */
 169:../Dave/Generated/src/SPI001/SPI001.c **** void SPI001_lClearPortRegs(const SPI001_HandleType* Handle);
 170:../Dave/Generated/src/SPI001/SPI001.c **** /* Modify the MTSR2HW_PortRegs for full duplex operation */
 171:../Dave/Generated/src/SPI001/SPI001.c **** void SPI001_lMTSR2_Modfn(const SPI001_HandleType* Handle);
 172:../Dave/Generated/src/SPI001/SPI001.c **** /* Modify the MTSR3HW_PortRegs for full duplex operation */
 173:../Dave/Generated/src/SPI001/SPI001.c **** void SPI001_lMTSR3_Modfn(const SPI001_HandleType* Handle);
 174:../Dave/Generated/src/SPI001/SPI001.c **** /* Modify the MTSR/MRST Pin PortRegs for full duplex operation */
 175:../Dave/Generated/src/SPI001/SPI001.c **** void SPI001_lPinModfn_Fullduplex(const SPI001_HandleType* Handle);
 176:../Dave/Generated/src/SPI001/SPI001.c **** /******************************************************************************
 177:../Dave/Generated/src/SPI001/SPI001.c **** **                      Global Constant Definitions                          **
 178:../Dave/Generated/src/SPI001/SPI001.c **** ******************************************************************************/
 179:../Dave/Generated/src/SPI001/SPI001.c **** 
 180:../Dave/Generated/src/SPI001/SPI001.c **** /******************************************************************************
 181:../Dave/Generated/src/SPI001/SPI001.c **** **                      Global Variable Definitions                          **
 182:../Dave/Generated/src/SPI001/SPI001.c **** ******************************************************************************/
 183:../Dave/Generated/src/SPI001/SPI001.c **** 
 184:../Dave/Generated/src/SPI001/SPI001.c **** /******************************************************************************
 185:../Dave/Generated/src/SPI001/SPI001.c **** **                      Private Constant Definitions                         **
 186:../Dave/Generated/src/SPI001/SPI001.c **** ******************************************************************************/
 187:../Dave/Generated/src/SPI001/SPI001.c **** /* Array to hold SPI baud parameter values as per the configuration */
 188:../Dave/Generated/src/SPI001/SPI001.c **** /* Array[0] = step, Array[1] = pdiv */
 189:../Dave/Generated/src/SPI001/SPI001.c **** const uint16_t SPI001_Baud_Parameter_Values0[] = {0x1c0U, 0x6U};
 190:../Dave/Generated/src/SPI001/SPI001.c **** 
 191:../Dave/Generated/src/SPI001/SPI001.c **** /******************************************************************************
 192:../Dave/Generated/src/SPI001/SPI001.c **** **                 Function like macro definitions                           **
 193:../Dave/Generated/src/SPI001/SPI001.c **** ******************************************************************************/
 194:../Dave/Generated/src/SPI001/SPI001.c **** /******************************************************************************
 195:../Dave/Generated/src/SPI001/SPI001.c **** **                      Private Function Definitions                         **
 196:../Dave/Generated/src/SPI001/SPI001.c **** ******************************************************************************/
 197:../Dave/Generated/src/SPI001/SPI001.c ****  /* Initializes the App based on User provide configuration. */
 198:../Dave/Generated/src/SPI001/SPI001.c ****  void SPI001_lInit (const SPI001_HandleType* Handle, \
 199:../Dave/Generated/src/SPI001/SPI001.c ****                                         const uint16_t* SPI001_Baud_Values)
 200:../Dave/Generated/src/SPI001/SPI001.c **** {
  34              		.loc 1 200 0
  35              		.cfi_startproc
  36 0000 90B5     		push	{r4, r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 12
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 87B0     		sub	sp, sp, #28
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 40
  45 0004 00AF     		add	r7, sp, #0
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 7
  48 0006 7860     		str	r0, [r7, #4]
  49 0008 3960     		str	r1, [r7]
 201:../Dave/Generated/src/SPI001/SPI001.c ****   USIC_CH_TypeDef* USICRegs = Handle->USICRegs;
  50              		.loc 1 201 0
  51 000a 7B68     		ldr	r3, [r7, #4]
  52 000c 1B68     		ldr	r3, [r3]
  53 000e 7B61     		str	r3, [r7, #20]
 202:../Dave/Generated/src/SPI001/SPI001.c ****   SPI001_PORTS_TypeDef* MTSR_PortRegs = Handle->PinHandle->PinPortRegs[0];
  54              		.loc 1 202 0
  55 0010 7B68     		ldr	r3, [r7, #4]
  56 0012 DB69     		ldr	r3, [r3, #28]
  57 0014 9B68     		ldr	r3, [r3, #8]
  58 0016 3B61     		str	r3, [r7, #16]
 203:../Dave/Generated/src/SPI001/SPI001.c ****   SPI001_PORTS_TypeDef* MRST_PortRegs = Handle->PinHandle->PinPortRegs[1];
  59              		.loc 1 203 0
  60 0018 7B68     		ldr	r3, [r7, #4]
  61 001a DB69     		ldr	r3, [r3, #28]
  62 001c DB68     		ldr	r3, [r3, #12]
  63 001e FB60     		str	r3, [r7, #12]
 204:../Dave/Generated/src/SPI001/SPI001.c ****   uint8_t MTSRPin = Handle->PinHandle->Pin_Num[0];
  64              		.loc 1 204 0
  65 0020 7B68     		ldr	r3, [r7, #4]
  66 0022 DA69     		ldr	r2, [r3, #28]
  67 0024 3B1C     		mov	r3, r7
  68 0026 0B33     		add	r3, r3, #11
  69 0028 1279     		ldrb	r2, [r2, #4]
  70 002a 1A70     		strb	r2, [r3]
 205:../Dave/Generated/src/SPI001/SPI001.c ****   uint8_t MRSTPin = Handle->PinHandle->Pin_Num[1];
  71              		.loc 1 205 0
  72 002c 7B68     		ldr	r3, [r7, #4]
  73 002e DA69     		ldr	r2, [r3, #28]
  74 0030 3B1C     		mov	r3, r7
  75 0032 0A33     		add	r3, r3, #10
  76 0034 5279     		ldrb	r2, [r2, #5]
  77 0036 1A70     		strb	r2, [r3]
 206:../Dave/Generated/src/SPI001/SPI001.c ****   
 207:../Dave/Generated/src/SPI001/SPI001.c ****   /* <<<DD_SPI_API_1>>>*/
 208:../Dave/Generated/src/SPI001/SPI001.c ****  
 209:../Dave/Generated/src/SPI001/SPI001.c ****   /** SPI initialization  */
 210:../Dave/Generated/src/SPI001/SPI001.c ****   
 211:../Dave/Generated/src/SPI001/SPI001.c ****   /* Disable SPI mode before configuring all USIC registers to avoid unintended edges */ 
 212:../Dave/Generated/src/SPI001/SPI001.c ****   USICRegs->CCR &= ~(((uint32_t)(USIC_SPI_MODE  & USIC_CH_CCR_MODE_Msk)));
  78              		.loc 1 212 0
  79 0038 7B69     		ldr	r3, [r7, #20]
  80 003a 1B6C     		ldr	r3, [r3, #64]
  81 003c 0122     		mov	r2, #1
  82 003e 181C     		mov	r0, r3
  83 0040 9043     		bic	r0, r2
  84 0042 021C     		mov	r2, r0
  85 0044 7B69     		ldr	r3, [r7, #20]
  86 0046 1A64     		str	r2, [r3, #64]
 213:../Dave/Generated/src/SPI001/SPI001.c ****   
 214:../Dave/Generated/src/SPI001/SPI001.c ****   /* Enable the USIC Channel */
 215:../Dave/Generated/src/SPI001/SPI001.c ****   USICRegs->KSCFG |= ((((uint32_t) 0x01 & USIC_CH_KSCFG_MODEN_Msk)) | \
  87              		.loc 1 215 0
  88 0048 7B69     		ldr	r3, [r7, #20]
  89 004a DB68     		ldr	r3, [r3, #12]
  90 004c 0322     		mov	r2, #3
  91 004e 1A43     		orr	r2, r3
  92 0050 7B69     		ldr	r3, [r7, #20]
  93 0052 DA60     		str	r2, [r3, #12]
 216:../Dave/Generated/src/SPI001/SPI001.c ****                       (((uint32_t)0x01 << USIC_CH_KSCFG_BPMODEN_Pos) & \
 217:../Dave/Generated/src/SPI001/SPI001.c ****                         USIC_CH_KSCFG_BPMODEN_Msk)); 
 218:../Dave/Generated/src/SPI001/SPI001.c ****  /* Configuration of USIC Channel Fractional Divider */
 219:../Dave/Generated/src/SPI001/SPI001.c ****   /* Fractional divider mode selected */
 220:../Dave/Generated/src/SPI001/SPI001.c ****   USICRegs->FDR |= (((uint32_t)0x02 << USIC_CH_FDR_DM_Pos) \
  94              		.loc 1 220 0
  95 0054 7B69     		ldr	r3, [r7, #20]
  96 0056 1B69     		ldr	r3, [r3, #16]
  97 0058 8022     		mov	r2, #128
  98 005a 1202     		lsl	r2, r2, #8
  99 005c 1A43     		orr	r2, r3
 100 005e 7B69     		ldr	r3, [r7, #20]
 101 0060 1A61     		str	r2, [r3, #16]
 221:../Dave/Generated/src/SPI001/SPI001.c ****                     & USIC_CH_FDR_DM_Msk);
 222:../Dave/Generated/src/SPI001/SPI001.c ****   
 223:../Dave/Generated/src/SPI001/SPI001.c ****   /* Step value loaded */
 224:../Dave/Generated/src/SPI001/SPI001.c ****   USICRegs->FDR |= ( *SPI001_Baud_Values & USIC_CH_FDR_STEP_Msk);
 102              		.loc 1 224 0
 103 0062 7B69     		ldr	r3, [r7, #20]
 104 0064 1A69     		ldr	r2, [r3, #16]
 105 0066 3B68     		ldr	r3, [r7]
 106 0068 1B88     		ldrh	r3, [r3]
 107 006a 9B05     		lsl	r3, r3, #22
 108 006c 9B0D     		lsr	r3, r3, #22
 109 006e 1A43     		orr	r2, r3
 110 0070 7B69     		ldr	r3, [r7, #20]
 111 0072 1A61     		str	r2, [r3, #16]
 225:../Dave/Generated/src/SPI001/SPI001.c ****  
 226:../Dave/Generated/src/SPI001/SPI001.c ****   /* Clock phase & Clock polarity configuration */
 227:../Dave/Generated/src/SPI001/SPI001.c ****   /* PCTQ value is zero */
 228:../Dave/Generated/src/SPI001/SPI001.c ****   USICRegs->BRG |= ((((uint32_t)Handle->Config->LeadTrailDelay << \
 112              		.loc 1 228 0
 113 0074 7B69     		ldr	r3, [r7, #20]
 114 0076 5A69     		ldr	r2, [r3, #20]
 115 0078 7B68     		ldr	r3, [r7, #4]
 116 007a 9B68     		ldr	r3, [r3, #8]
 117 007c 1B7A     		ldrb	r3, [r3, #8]
 118 007e 9902     		lsl	r1, r3, #10
 229:../Dave/Generated/src/SPI001/SPI001.c ****                      USIC_CH_BRG_DCTQ_Pos) & USIC_CH_BRG_DCTQ_Msk) | \
 119              		.loc 1 229 0
 120 0080 F823     		mov	r3, #248
 121 0082 DB01     		lsl	r3, r3, #7
 122 0084 1940     		and	r1, r3
 230:../Dave/Generated/src/SPI001/SPI001.c ****                    (((uint32_t)(*(1 + SPI001_Baud_Values)) << \
 123              		.loc 1 230 0
 124 0086 3B68     		ldr	r3, [r7]
 125 0088 0233     		add	r3, r3, #2
 126 008a 1B88     		ldrh	r3, [r3]
 127 008c 1804     		lsl	r0, r3, #16
 231:../Dave/Generated/src/SPI001/SPI001.c ****                      USIC_CH_BRG_PDIV_Pos) & USIC_CH_BRG_PDIV_Msk) | \
 128              		.loc 1 231 0
 129 008e 9D4B     		ldr	r3, .L8
 130 0090 0340     		and	r3, r0
 229:../Dave/Generated/src/SPI001/SPI001.c ****                      USIC_CH_BRG_DCTQ_Pos) & USIC_CH_BRG_DCTQ_Msk) | \
 131              		.loc 1 229 0
 132 0092 1943     		orr	r1, r3
 232:../Dave/Generated/src/SPI001/SPI001.c ****                    (((uint32_t)0x02 << USIC_CH_BRG_CTQSEL_Pos) &  \
 233:../Dave/Generated/src/SPI001/SPI001.c ****                       USIC_CH_BRG_CTQSEL_Msk) | \
 234:../Dave/Generated/src/SPI001/SPI001.c ****                    (((((uint32_t)(Handle->Config->ClkPol) | \
 133              		.loc 1 234 0
 134 0094 7B68     		ldr	r3, [r7, #4]
 135 0096 9B68     		ldr	r3, [r3, #8]
 136 0098 9B78     		ldrb	r3, [r3, #2]
 137 009a 181C     		mov	r0, r3
 235:../Dave/Generated/src/SPI001/SPI001.c ****                     ((uint32_t)Handle->Config->ClkPh << (uint32_t) 0x01)) \
 138              		.loc 1 235 0
 139 009c 7B68     		ldr	r3, [r7, #4]
 140 009e 9B68     		ldr	r3, [r3, #8]
 141 00a0 DB78     		ldrb	r3, [r3, #3]
 142 00a2 5B00     		lsl	r3, r3, #1
 234:../Dave/Generated/src/SPI001/SPI001.c ****                    (((((uint32_t)(Handle->Config->ClkPol) | \
 143              		.loc 1 234 0
 144 00a4 0343     		orr	r3, r0
 236:../Dave/Generated/src/SPI001/SPI001.c ****                      << USIC_CH_BRG_SCLKCFG_Pos) & USIC_CH_BRG_SCLKCFG_Msk))); 
 145              		.loc 1 236 0
 146 00a6 9B07     		lsl	r3, r3, #30
 233:../Dave/Generated/src/SPI001/SPI001.c ****                       USIC_CH_BRG_CTQSEL_Msk) | \
 147              		.loc 1 233 0
 148 00a8 0B43     		orr	r3, r1
 228:../Dave/Generated/src/SPI001/SPI001.c ****   USICRegs->BRG |= ((((uint32_t)Handle->Config->LeadTrailDelay << \
 149              		.loc 1 228 0
 150 00aa 1343     		orr	r3, r2
 151 00ac 8022     		mov	r2, #128
 152 00ae 1A43     		orr	r2, r3
 153 00b0 7B69     		ldr	r3, [r7, #20]
 154 00b2 5A61     		str	r2, [r3, #20]
 237:../Dave/Generated/src/SPI001/SPI001.c ****  
 238:../Dave/Generated/src/SPI001/SPI001.c ****   /* Configuration of USIC Shift Control */
 239:../Dave/Generated/src/SPI001/SPI001.c ****   /* Transmission Mode (TRM) = 1  */
 240:../Dave/Generated/src/SPI001/SPI001.c ****   /* Passive Data Level (PDL) = 1 */
 241:../Dave/Generated/src/SPI001/SPI001.c ****   USICRegs->SCTR |= \
 155              		.loc 1 241 0
 156 00b4 7B69     		ldr	r3, [r7, #20]
 157 00b6 5A6B     		ldr	r2, [r3, #52]
 242:../Dave/Generated/src/SPI001/SPI001.c ****           ((((uint32_t)Handle->Config->HBMode & USIC_CH_SCTR_SDIR_Msk)) | \
 158              		.loc 1 242 0
 159 00b8 7B68     		ldr	r3, [r7, #4]
 160 00ba 9B68     		ldr	r3, [r3, #8]
 161 00bc 5B78     		ldrb	r3, [r3, #1]
 162 00be 191C     		mov	r1, r3
 163 00c0 0123     		mov	r3, #1
 164 00c2 1940     		and	r1, r3
 243:../Dave/Generated/src/SPI001/SPI001.c **** 		      (((uint32_t)0x01  <<  USIC_CH_SCTR_PDL_Pos ) & \
 244:../Dave/Generated/src/SPI001/SPI001.c **** 		            		                       USIC_CH_SCTR_PDL_Msk ) | \
 245:../Dave/Generated/src/SPI001/SPI001.c **** 		      (((uint32_t)0x01  <<  USIC_CH_SCTR_TRM_Pos ) & \
 246:../Dave/Generated/src/SPI001/SPI001.c **** 		                       		               USIC_CH_SCTR_TRM_Msk ) | \
 247:../Dave/Generated/src/SPI001/SPI001.c ****           (((Handle->Config->FrameLen-(uint32_t)0x01) << USIC_CH_SCTR_FLE_Pos)\
 165              		.loc 1 247 0
 166 00c4 7B68     		ldr	r3, [r7, #4]
 167 00c6 9B68     		ldr	r3, [r3, #8]
 168 00c8 DB7A     		ldrb	r3, [r3, #11]
 169 00ca 013B     		sub	r3, r3, #1
 170 00cc 1804     		lsl	r0, r3, #16
 248:../Dave/Generated/src/SPI001/SPI001.c ****                                                  & USIC_CH_SCTR_FLE_Msk ) | \
 171              		.loc 1 248 0
 172 00ce FC23     		mov	r3, #252
 173 00d0 9B03     		lsl	r3, r3, #14
 174 00d2 0340     		and	r3, r0
 246:../Dave/Generated/src/SPI001/SPI001.c **** 		                       		               USIC_CH_SCTR_TRM_Msk ) | \
 175              		.loc 1 246 0
 176 00d4 1943     		orr	r1, r3
 249:../Dave/Generated/src/SPI001/SPI001.c ****           (((Handle->Config->WordLen-(uint32_t)0x01) << USIC_CH_SCTR_WLE_Pos) \
 177              		.loc 1 249 0
 178 00d6 7B68     		ldr	r3, [r7, #4]
 179 00d8 9B68     		ldr	r3, [r3, #8]
 180 00da 9B7A     		ldrb	r3, [r3, #10]
 181 00dc 013B     		sub	r3, r3, #1
 182 00de 1806     		lsl	r0, r3, #24
 250:../Dave/Generated/src/SPI001/SPI001.c ****                                                 &  USIC_CH_SCTR_WLE_Msk));
 183              		.loc 1 250 0
 184 00e0 F023     		mov	r3, #240
 185 00e2 1B05     		lsl	r3, r3, #20
 186 00e4 0340     		and	r3, r0
 248:../Dave/Generated/src/SPI001/SPI001.c ****                                                  & USIC_CH_SCTR_FLE_Msk ) | \
 187              		.loc 1 248 0
 188 00e6 0B43     		orr	r3, r1
 241:../Dave/Generated/src/SPI001/SPI001.c ****   USICRegs->SCTR |= \
 189              		.loc 1 241 0
 190 00e8 1343     		orr	r3, r2
 191 00ea 8122     		mov	r2, #129
 192 00ec 5200     		lsl	r2, r2, #1
 193 00ee 1A43     		orr	r2, r3
 194 00f0 7B69     		ldr	r3, [r7, #20]
 195 00f2 5A63     		str	r2, [r3, #52]
 251:../Dave/Generated/src/SPI001/SPI001.c ****   switch(Handle->Config->Mode)
 196              		.loc 1 251 0
 197 00f4 7B68     		ldr	r3, [r7, #4]
 198 00f6 9B68     		ldr	r3, [r3, #8]
 199 00f8 1B78     		ldrb	r3, [r3]
 200 00fa 012B     		cmp	r3, #1
 201 00fc 0FD0     		beq	.L4
 202 00fe 02DC     		bgt	.L7
 203 0100 002B     		cmp	r3, #0
 204 0102 05D0     		beq	.L3
 205 0104 9DE0     		b	.L2
 206              	.L7:
 207 0106 022B     		cmp	r3, #2
 208 0108 29D0     		beq	.L5
 209 010a 032B     		cmp	r3, #3
 210 010c 5AD0     		beq	.L6
 211 010e 98E0     		b	.L2
 212              	.L3:
 252:../Dave/Generated/src/SPI001/SPI001.c ****   {
 253:../Dave/Generated/src/SPI001/SPI001.c ****     case SPI001_STANDARD_FULLDUPLEX:
 254:../Dave/Generated/src/SPI001/SPI001.c ****       USICRegs->DX0CR |= ((((uint32_t)0x01 << USIC_CH_DX0CR_INSW_Pos) & \
 213              		.loc 1 254 0
 214 0110 7B69     		ldr	r3, [r7, #20]
 215 0112 DB69     		ldr	r3, [r3, #28]
 216 0114 1022     		mov	r2, #16
 217 0116 1A43     		orr	r2, r3
 218 0118 7B69     		ldr	r3, [r7, #20]
 219 011a DA61     		str	r2, [r3, #28]
 255:../Dave/Generated/src/SPI001/SPI001.c ****     	                                            USIC_CH_DX0CR_INSW_Msk));
 256:../Dave/Generated/src/SPI001/SPI001.c ****       break;
 220              		.loc 1 256 0
 221 011c 91E0     		b	.L2
 222              	.L4:
 257:../Dave/Generated/src/SPI001/SPI001.c ****     case SPI001_STANDARD_HALFDUPLEX:
 258:../Dave/Generated/src/SPI001/SPI001.c **** 
 259:../Dave/Generated/src/SPI001/SPI001.c ****       /* Enable hardware port control */
 260:../Dave/Generated/src/SPI001/SPI001.c ****       USICRegs->CCR |= ((((uint32_t)0x01 << USIC_CH_CCR_HPCEN_Pos) & \
 223              		.loc 1 260 0
 224 011e 7B69     		ldr	r3, [r7, #20]
 225 0120 1B6C     		ldr	r3, [r3, #64]
 226 0122 4022     		mov	r2, #64
 227 0124 1A43     		orr	r2, r3
 228 0126 7B69     		ldr	r3, [r7, #20]
 229 0128 1A64     		str	r2, [r3, #64]
 261:../Dave/Generated/src/SPI001/SPI001.c ****                                                        USIC_CH_CCR_HPCEN_Msk));
 262:../Dave/Generated/src/SPI001/SPI001.c ****       USICRegs->TCSR |= (((uint32_t)0x01 << USIC_CH_TCSR_HPCMD_Pos) & \
 230              		.loc 1 262 0
 231 012a 7B69     		ldr	r3, [r7, #20]
 232 012c 9B6B     		ldr	r3, [r3, #56]
 233 012e 1022     		mov	r2, #16
 234 0130 1A43     		orr	r2, r3
 235 0132 7B69     		ldr	r3, [r7, #20]
 236 0134 9A63     		str	r2, [r3, #56]
 263:../Dave/Generated/src/SPI001/SPI001.c ****                                                       USIC_CH_TCSR_HPCMD_Msk);
 264:../Dave/Generated/src/SPI001/SPI001.c ****       /* Enable loop back mode in input stages */
 265:../Dave/Generated/src/SPI001/SPI001.c ****       USICRegs->DX0CR |= ((((uint32_t)0x01 << USIC_CH_DX0CR_INSW_Pos) & \
 237              		.loc 1 265 0
 238 0136 7B69     		ldr	r3, [r7, #20]
 239 0138 DB69     		ldr	r3, [r3, #28]
 240 013a 1622     		mov	r2, #22
 241 013c 1A43     		orr	r2, r3
 242 013e 7B69     		ldr	r3, [r7, #20]
 243 0140 DA61     		str	r2, [r3, #28]
 266:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX0CR_INSW_Msk) | \
 267:../Dave/Generated/src/SPI001/SPI001.c ****                           ((((uint32_t)0x06 << USIC_CH_DX0CR_DSEL_Pos) & \
 268:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX0CR_DSEL_Msk)));                             
 269:../Dave/Generated/src/SPI001/SPI001.c ****       MTSR_PortRegs->HWSEL  |= ((uint32_t)2 << (MTSRPin * (uint32_t)2));                           
 244              		.loc 1 269 0
 245 0142 3B69     		ldr	r3, [r7, #16]
 246 0144 5A6F     		ldr	r2, [r3, #116]
 247 0146 3B1C     		mov	r3, r7
 248 0148 0B33     		add	r3, r3, #11
 249 014a 1B78     		ldrb	r3, [r3]
 250 014c 5B00     		lsl	r3, r3, #1
 251 014e 0221     		mov	r1, #2
 252 0150 0C1C     		mov	r4, r1
 253 0152 9C40     		lsl	r4, r4, r3
 254 0154 231C     		mov	r3, r4
 255 0156 1A43     		orr	r2, r3
 256 0158 3B69     		ldr	r3, [r7, #16]
 257 015a 5A67     		str	r2, [r3, #116]
 270:../Dave/Generated/src/SPI001/SPI001.c ****       break;      
 258              		.loc 1 270 0
 259 015c 71E0     		b	.L2
 260              	.L5:
 271:../Dave/Generated/src/SPI001/SPI001.c ****     case SPI001_DUAL:
 272:../Dave/Generated/src/SPI001/SPI001.c ****       /* Enable hardware port control */
 273:../Dave/Generated/src/SPI001/SPI001.c ****       USICRegs->CCR |= (((uint32_t)((uint32_t)0x02 << USIC_CH_CCR_HPCEN_Pos) &\
 261              		.loc 1 273 0
 262 015e 7B69     		ldr	r3, [r7, #20]
 263 0160 1B6C     		ldr	r3, [r3, #64]
 264 0162 8022     		mov	r2, #128
 265 0164 1A43     		orr	r2, r3
 266 0166 7B69     		ldr	r3, [r7, #20]
 267 0168 1A64     		str	r2, [r3, #64]
 274:../Dave/Generated/src/SPI001/SPI001.c ****                                                        USIC_CH_CCR_HPCEN_Msk));
 275:../Dave/Generated/src/SPI001/SPI001.c ****       USICRegs->TCSR |= ((uint32_t)((uint32_t)0x01 << USIC_CH_TCSR_HPCMD_Pos) \
 268              		.loc 1 275 0
 269 016a 7B69     		ldr	r3, [r7, #20]
 270 016c 9B6B     		ldr	r3, [r3, #56]
 271 016e 1022     		mov	r2, #16
 272 0170 1A43     		orr	r2, r3
 273 0172 7B69     		ldr	r3, [r7, #20]
 274 0174 9A63     		str	r2, [r3, #56]
 276:../Dave/Generated/src/SPI001/SPI001.c ****                                                    & (USIC_CH_TCSR_HPCMD_Msk));
 277:../Dave/Generated/src/SPI001/SPI001.c ****        /* Enable loop back mode in input stages */
 278:../Dave/Generated/src/SPI001/SPI001.c ****       USICRegs->DX0CR |= ((((uint32_t)0x01 << USIC_CH_DX0CR_INSW_Pos) & \
 275              		.loc 1 278 0
 276 0176 7B69     		ldr	r3, [r7, #20]
 277 0178 DB69     		ldr	r3, [r3, #28]
 278 017a 1622     		mov	r2, #22
 279 017c 1A43     		orr	r2, r3
 280 017e 7B69     		ldr	r3, [r7, #20]
 281 0180 DA61     		str	r2, [r3, #28]
 279:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX0CR_INSW_Msk) | \
 280:../Dave/Generated/src/SPI001/SPI001.c ****                           (((uint32_t)0x06 << USIC_CH_DX0CR_DSEL_Pos) & \
 281:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX0CR_DSEL_Msk)); 
 282:../Dave/Generated/src/SPI001/SPI001.c ****       USICRegs->DX3CR |= ((((uint32_t)0x01 << USIC_CH_DX3CR_INSW_Pos) & \
 282              		.loc 1 282 0
 283 0182 7B69     		ldr	r3, [r7, #20]
 284 0184 9B6A     		ldr	r3, [r3, #40]
 285 0186 1622     		mov	r2, #22
 286 0188 1A43     		orr	r2, r3
 287 018a 7B69     		ldr	r3, [r7, #20]
 288 018c 9A62     		str	r2, [r3, #40]
 283:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX3CR_INSW_Msk) | \
 284:../Dave/Generated/src/SPI001/SPI001.c ****                           (((uint32_t)0x06 << USIC_CH_DX3CR_DSEL_Pos) & \
 285:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX3CR_DSEL_Msk));                              
 286:../Dave/Generated/src/SPI001/SPI001.c ****       MTSR_PortRegs->HWSEL |= ((uint32_t)2 << (MTSRPin * (uint32_t)2));
 289              		.loc 1 286 0
 290 018e 3B69     		ldr	r3, [r7, #16]
 291 0190 5A6F     		ldr	r2, [r3, #116]
 292 0192 3B1C     		mov	r3, r7
 293 0194 0B33     		add	r3, r3, #11
 294 0196 1B78     		ldrb	r3, [r3]
 295 0198 5B00     		lsl	r3, r3, #1
 296 019a 0221     		mov	r1, #2
 297 019c 081C     		mov	r0, r1
 298 019e 9840     		lsl	r0, r0, r3
 299 01a0 031C     		mov	r3, r0
 300 01a2 1A43     		orr	r2, r3
 301 01a4 3B69     		ldr	r3, [r7, #16]
 302 01a6 5A67     		str	r2, [r3, #116]
 287:../Dave/Generated/src/SPI001/SPI001.c ****       MRST_PortRegs->HWSEL |= ((uint32_t)2 << (MRSTPin * (uint32_t)2));  
 303              		.loc 1 287 0
 304 01a8 FB68     		ldr	r3, [r7, #12]
 305 01aa 5A6F     		ldr	r2, [r3, #116]
 306 01ac 3B1C     		mov	r3, r7
 307 01ae 0A33     		add	r3, r3, #10
 308 01b0 1B78     		ldrb	r3, [r3]
 309 01b2 5B00     		lsl	r3, r3, #1
 310 01b4 0221     		mov	r1, #2
 311 01b6 0C1C     		mov	r4, r1
 312 01b8 9C40     		lsl	r4, r4, r3
 313 01ba 231C     		mov	r3, r4
 314 01bc 1A43     		orr	r2, r3
 315 01be FB68     		ldr	r3, [r7, #12]
 316 01c0 5A67     		str	r2, [r3, #116]
 288:../Dave/Generated/src/SPI001/SPI001.c ****      
 289:../Dave/Generated/src/SPI001/SPI001.c ****       break;
 317              		.loc 1 289 0
 318 01c2 3EE0     		b	.L2
 319              	.L6:
 290:../Dave/Generated/src/SPI001/SPI001.c ****     case SPI001_QUAD:
 291:../Dave/Generated/src/SPI001/SPI001.c ****       /* Enable hardware port control */
 292:../Dave/Generated/src/SPI001/SPI001.c ****       USICRegs->CCR |= (((uint32_t)0x03 << USIC_CH_CCR_HPCEN_Pos) & \
 320              		.loc 1 292 0
 321 01c4 7B69     		ldr	r3, [r7, #20]
 322 01c6 1B6C     		ldr	r3, [r3, #64]
 323 01c8 C022     		mov	r2, #192
 324 01ca 1A43     		orr	r2, r3
 325 01cc 7B69     		ldr	r3, [r7, #20]
 326 01ce 1A64     		str	r2, [r3, #64]
 293:../Dave/Generated/src/SPI001/SPI001.c ****                                                         USIC_CH_CCR_HPCEN_Msk);
 294:../Dave/Generated/src/SPI001/SPI001.c ****       USICRegs->TCSR |= (((uint32_t)0x01 << USIC_CH_TCSR_HPCMD_Pos) & \
 327              		.loc 1 294 0
 328 01d0 7B69     		ldr	r3, [r7, #20]
 329 01d2 9B6B     		ldr	r3, [r3, #56]
 330 01d4 1022     		mov	r2, #16
 331 01d6 1A43     		orr	r2, r3
 332 01d8 7B69     		ldr	r3, [r7, #20]
 333 01da 9A63     		str	r2, [r3, #56]
 295:../Dave/Generated/src/SPI001/SPI001.c ****                                                        USIC_CH_TCSR_HPCMD_Msk);
 296:../Dave/Generated/src/SPI001/SPI001.c ****        /* Enable loop back mode in input stages */
 297:../Dave/Generated/src/SPI001/SPI001.c ****       USICRegs->DX0CR |= ((((uint32_t)0x01 << USIC_CH_DX0CR_INSW_Pos) & \
 334              		.loc 1 297 0
 335 01dc 7B69     		ldr	r3, [r7, #20]
 336 01de DB69     		ldr	r3, [r3, #28]
 337 01e0 1622     		mov	r2, #22
 338 01e2 1A43     		orr	r2, r3
 339 01e4 7B69     		ldr	r3, [r7, #20]
 340 01e6 DA61     		str	r2, [r3, #28]
 298:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX0CR_INSW_Msk) | \
 299:../Dave/Generated/src/SPI001/SPI001.c ****                           (((uint32_t)0x06 << USIC_CH_DX0CR_DSEL_Pos) & \
 300:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX0CR_DSEL_Msk)); 
 301:../Dave/Generated/src/SPI001/SPI001.c ****       USICRegs->DX3CR |= ((((uint32_t)0x01 << USIC_CH_DX3CR_INSW_Pos) & \
 341              		.loc 1 301 0
 342 01e8 7B69     		ldr	r3, [r7, #20]
 343 01ea 9B6A     		ldr	r3, [r3, #40]
 344 01ec 1622     		mov	r2, #22
 345 01ee 1A43     		orr	r2, r3
 346 01f0 7B69     		ldr	r3, [r7, #20]
 347 01f2 9A62     		str	r2, [r3, #40]
 302:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX3CR_INSW_Msk) | \
 303:../Dave/Generated/src/SPI001/SPI001.c ****                           (((uint32_t)0x06 << USIC_CH_DX3CR_DSEL_Pos) & \
 304:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX3CR_DSEL_Msk));  
 305:../Dave/Generated/src/SPI001/SPI001.c ****       USICRegs->DX4CR |= ((((uint32_t)0x01 << USIC_CH_DX4CR_INSW_Pos) & \
 348              		.loc 1 305 0
 349 01f4 7B69     		ldr	r3, [r7, #20]
 350 01f6 DB6A     		ldr	r3, [r3, #44]
 351 01f8 1622     		mov	r2, #22
 352 01fa 1A43     		orr	r2, r3
 353 01fc 7B69     		ldr	r3, [r7, #20]
 354 01fe DA62     		str	r2, [r3, #44]
 306:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX4CR_INSW_Msk) | \
 307:../Dave/Generated/src/SPI001/SPI001.c ****                           (((uint32_t)0x06 << USIC_CH_DX4CR_DSEL_Pos) & \
 308:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX4CR_DSEL_Msk));  
 309:../Dave/Generated/src/SPI001/SPI001.c ****       USICRegs->DX5CR |= ((((uint32_t)0x01 << USIC_CH_DX5CR_INSW_Pos) & \
 355              		.loc 1 309 0
 356 0200 7B69     		ldr	r3, [r7, #20]
 357 0202 1B6B     		ldr	r3, [r3, #48]
 358 0204 1622     		mov	r2, #22
 359 0206 1A43     		orr	r2, r3
 360 0208 7B69     		ldr	r3, [r7, #20]
 361 020a 1A63     		str	r2, [r3, #48]
 310:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX5CR_INSW_Msk) | \
 311:../Dave/Generated/src/SPI001/SPI001.c ****                           (((uint32_t)0x06 << USIC_CH_DX5CR_DSEL_Pos) & \
 312:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX5CR_DSEL_Msk));                              
 313:../Dave/Generated/src/SPI001/SPI001.c ****       MTSR_PortRegs->HWSEL |= ((uint32_t)2 << (MTSRPin * (uint32_t)2));
 362              		.loc 1 313 0
 363 020c 3B69     		ldr	r3, [r7, #16]
 364 020e 5A6F     		ldr	r2, [r3, #116]
 365 0210 3B1C     		mov	r3, r7
 366 0212 0B33     		add	r3, r3, #11
 367 0214 1B78     		ldrb	r3, [r3]
 368 0216 5B00     		lsl	r3, r3, #1
 369 0218 0221     		mov	r1, #2
 370 021a 081C     		mov	r0, r1
 371 021c 9840     		lsl	r0, r0, r3
 372 021e 031C     		mov	r3, r0
 373 0220 1A43     		orr	r2, r3
 374 0222 3B69     		ldr	r3, [r7, #16]
 375 0224 5A67     		str	r2, [r3, #116]
 314:../Dave/Generated/src/SPI001/SPI001.c ****       MRST_PortRegs->HWSEL |= ((uint32_t)2 << (MRSTPin * (uint32_t)2));   
 376              		.loc 1 314 0
 377 0226 FB68     		ldr	r3, [r7, #12]
 378 0228 5A6F     		ldr	r2, [r3, #116]
 379 022a 3B1C     		mov	r3, r7
 380 022c 0A33     		add	r3, r3, #10
 381 022e 1B78     		ldrb	r3, [r3]
 382 0230 5B00     		lsl	r3, r3, #1
 383 0232 0221     		mov	r1, #2
 384 0234 0C1C     		mov	r4, r1
 385 0236 9C40     		lsl	r4, r4, r3
 386 0238 231C     		mov	r3, r4
 387 023a 1A43     		orr	r2, r3
 388 023c FB68     		ldr	r3, [r7, #12]
 389 023e 5A67     		str	r2, [r3, #116]
 315:../Dave/Generated/src/SPI001/SPI001.c **** 
 316:../Dave/Generated/src/SPI001/SPI001.c ****       break;
 390              		.loc 1 316 0
 391 0240 C046     		mov	r8, r8
 392              	.L2:
 317:../Dave/Generated/src/SPI001/SPI001.c ****   }
 318:../Dave/Generated/src/SPI001/SPI001.c ****   /* Configuration of USIC Transmit Control/Status Register */ 
 319:../Dave/Generated/src/SPI001/SPI001.c ****   /* TBUF Data Enable (TDEN) = 1 */
 320:../Dave/Generated/src/SPI001/SPI001.c ****   /* TBUF Data Single Shot Mode (TDSSM) = 1 */
 321:../Dave/Generated/src/SPI001/SPI001.c **** 	USICRegs->TCSR |= ((((uint32_t)0x01  << USIC_CH_TCSR_TDEN_Pos) & \
 393              		.loc 1 321 0
 394 0242 7B69     		ldr	r3, [r7, #20]
 395 0244 9B6B     		ldr	r3, [r3, #56]
 396 0246 A022     		mov	r2, #160
 397 0248 D200     		lsl	r2, r2, #3
 398 024a 1A43     		orr	r2, r3
 399 024c 7B69     		ldr	r3, [r7, #20]
 400 024e 9A63     		str	r2, [r3, #56]
 322:../Dave/Generated/src/SPI001/SPI001.c ****   USIC_CH_TCSR_TDEN_Msk ) | \
 323:../Dave/Generated/src/SPI001/SPI001.c ****     (((uint32_t)0x01  << USIC_CH_TCSR_TDSSM_Pos) & USIC_CH_TCSR_TDSSM_Msk));
 324:../Dave/Generated/src/SPI001/SPI001.c **** 
 325:../Dave/Generated/src/SPI001/SPI001.c ****   /* Configuration of Protocol Control Register */ 
 326:../Dave/Generated/src/SPI001/SPI001.c **** 	/* PCTQ1 value is zero */
 327:../Dave/Generated/src/SPI001/SPI001.c ****   /* Parity Error Interrupt generation is disabled*/
 328:../Dave/Generated/src/SPI001/SPI001.c ****   USICRegs->PCR_SSCMode |= 
 401              		.loc 1 328 0
 402 0250 7B69     		ldr	r3, [r7, #20]
 403 0252 DA6B     		ldr	r2, [r3, #60]
 329:../Dave/Generated/src/SPI001/SPI001.c ****       ((((uint32_t)0x01 & USIC_CH_PCR_SSCMode_MSLSEN_Msk)) | \
 330:../Dave/Generated/src/SPI001/SPI001.c ****       (((uint32_t)0x01 << USIC_CH_PCR_SSCMode_SELCTR_Pos) & \
 331:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_PCR_SSCMode_SELCTR_Msk) | \
 332:../Dave/Generated/src/SPI001/SPI001.c ****       (((uint32_t)0x01 << USIC_CH_PCR_SSCMode_SELINV_Pos) & \
 333:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_PCR_SSCMode_SELINV_Msk) | \
 334:../Dave/Generated/src/SPI001/SPI001.c ****       (((uint32_t)0x02 << USIC_CH_PCR_SSCMode_CTQSEL1_Pos) & \
 335:../Dave/Generated/src/SPI001/SPI001.c ****                                            USIC_CH_PCR_SSCMode_CTQSEL1_Msk) | \
 336:../Dave/Generated/src/SPI001/SPI001.c ****       (((uint32_t)Handle->Config->NextFrameDelay << \
 404              		.loc 1 336 0
 405 0254 7B68     		ldr	r3, [r7, #4]
 406 0256 9B68     		ldr	r3, [r3, #8]
 407 0258 5B7A     		ldrb	r3, [r3, #9]
 408 025a 1902     		lsl	r1, r3, #8
 337:../Dave/Generated/src/SPI001/SPI001.c ****             USIC_CH_PCR_SSCMode_DCTQ1_Pos) & USIC_CH_PCR_SSCMode_DCTQ1_Msk) | \
 409              		.loc 1 337 0
 410 025c F823     		mov	r3, #248
 411 025e 5B01     		lsl	r3, r3, #5
 412 0260 1940     		and	r1, r3
 338:../Dave/Generated/src/SPI001/SPI001.c ****       (((uint32_t)Handle->MSLSIntrEn << USIC_CH_PCR_SSCMode_MSLSIEN_Pos) & \
 413              		.loc 1 338 0
 414 0262 7B68     		ldr	r3, [r7, #4]
 415 0264 5B7E     		ldrb	r3, [r3, #25]
 416 0266 9803     		lsl	r0, r3, #14
 417 0268 8023     		mov	r3, #128
 418 026a DB01     		lsl	r3, r3, #7
 419 026c 0340     		and	r3, r0
 337:../Dave/Generated/src/SPI001/SPI001.c ****             USIC_CH_PCR_SSCMode_DCTQ1_Pos) & USIC_CH_PCR_SSCMode_DCTQ1_Msk) | \
 420              		.loc 1 337 0
 421 026e 1943     		orr	r1, r3
 339:../Dave/Generated/src/SPI001/SPI001.c ****                                            USIC_CH_PCR_SSCMode_MSLSIEN_Msk) | \
 340:../Dave/Generated/src/SPI001/SPI001.c ****       ((((uint32_t)0x01 << Handle->ChipSelTable[Handle->Config->CESelected]) \
 422              		.loc 1 340 0
 423 0270 7B68     		ldr	r3, [r7, #4]
 424 0272 9B68     		ldr	r3, [r3, #8]
 425 0274 1B7B     		ldrb	r3, [r3, #12]
 426 0276 181C     		mov	r0, r3
 427 0278 7C68     		ldr	r4, [r7, #4]
 428 027a 0823     		mov	r3, #8
 429 027c 2018     		add	r0, r4, r0
 430 027e C318     		add	r3, r0, r3
 431 0280 1B79     		ldrb	r3, [r3, #4]
 432 0282 0120     		mov	r0, #1
 433 0284 041C     		mov	r4, r0
 434 0286 9C40     		lsl	r4, r4, r3
 435 0288 231C     		mov	r3, r4
 341:../Dave/Generated/src/SPI001/SPI001.c ****            << USIC_CH_PCR_SSCMode_SELO_Pos) & USIC_CH_PCR_SSCMode_SELO_Msk) | \
 436              		.loc 1 341 0
 437 028a 1804     		lsl	r0, r3, #16
 438 028c FF23     		mov	r3, #255
 439 028e 1B04     		lsl	r3, r3, #16
 440 0290 0340     		and	r3, r0
 339:../Dave/Generated/src/SPI001/SPI001.c ****                                            USIC_CH_PCR_SSCMode_MSLSIEN_Msk) | \
 441              		.loc 1 339 0
 442 0292 1943     		orr	r1, r3
 342:../Dave/Generated/src/SPI001/SPI001.c ****       (((uint32_t)Handle->FrmEndMode << USIC_CH_PCR_SSCMode_FEM_Pos) \
 443              		.loc 1 342 0
 444 0294 7B68     		ldr	r3, [r7, #4]
 445 0296 1B79     		ldrb	r3, [r3, #4]
 446 0298 D800     		lsl	r0, r3, #3
 343:../Dave/Generated/src/SPI001/SPI001.c ****                                              & USIC_CH_PCR_SSCMode_FEM_Msk));
 447              		.loc 1 343 0
 448 029a 0823     		mov	r3, #8
 449 029c 0340     		and	r3, r0
 341:../Dave/Generated/src/SPI001/SPI001.c ****            << USIC_CH_PCR_SSCMode_SELO_Pos) & USIC_CH_PCR_SSCMode_SELO_Msk) | \
 450              		.loc 1 341 0
 451 029e 0B43     		orr	r3, r1
 328:../Dave/Generated/src/SPI001/SPI001.c ****   USICRegs->PCR_SSCMode |= 
 452              		.loc 1 328 0
 453 02a0 1343     		orr	r3, r2
 454 02a2 2722     		mov	r2, #39
 455 02a4 1A43     		orr	r2, r3
 456 02a6 7B69     		ldr	r3, [r7, #20]
 457 02a8 DA63     		str	r2, [r3, #60]
 344:../Dave/Generated/src/SPI001/SPI001.c ****   /* Configuration of Transmitter Buffer Control Register */ 
 345:../Dave/Generated/src/SPI001/SPI001.c ****   USICRegs->TBCTR |= ((((uint32_t)Handle->TxLimit  << \
 458              		.loc 1 345 0
 459 02aa 7A69     		ldr	r2, [r7, #20]
 460 02ac 8423     		mov	r3, #132
 461 02ae 5B00     		lsl	r3, r3, #1
 462 02b0 D258     		ldr	r2, [r2, r3]
 463 02b2 7B68     		ldr	r3, [r7, #4]
 464 02b4 5B7D     		ldrb	r3, [r3, #21]
 465 02b6 1902     		lsl	r1, r3, #8
 346:../Dave/Generated/src/SPI001/SPI001.c ****                     USIC_CH_TBCTR_LIMIT_Pos ) & USIC_CH_TBCTR_LIMIT_Msk));
 466              		.loc 1 346 0
 467 02b8 FC23     		mov	r3, #252
 468 02ba 9B01     		lsl	r3, r3, #6
 469 02bc 0B40     		and	r3, r1
 345:../Dave/Generated/src/SPI001/SPI001.c ****   USICRegs->TBCTR |= ((((uint32_t)Handle->TxLimit  << \
 470              		.loc 1 345 0
 471 02be 111C     		mov	r1, r2
 472 02c0 1943     		orr	r1, r3
 473 02c2 7A69     		ldr	r2, [r7, #20]
 474 02c4 8423     		mov	r3, #132
 475 02c6 5B00     		lsl	r3, r3, #1
 476 02c8 D150     		str	r1, [r2, r3]
 347:../Dave/Generated/src/SPI001/SPI001.c ****     
 348:../Dave/Generated/src/SPI001/SPI001.c ****   /* Configuration of Receiver Buffer Control Register */ 
 349:../Dave/Generated/src/SPI001/SPI001.c ****   USICRegs->RBCTR |= ((((uint32_t)Handle->RxLimit  << \
 477              		.loc 1 349 0
 478 02ca 7A69     		ldr	r2, [r7, #20]
 479 02cc 8623     		mov	r3, #134
 480 02ce 5B00     		lsl	r3, r3, #1
 481 02d0 D258     		ldr	r2, [r2, r3]
 482 02d2 7B68     		ldr	r3, [r7, #4]
 483 02d4 9B7D     		ldrb	r3, [r3, #22]
 484 02d6 1902     		lsl	r1, r3, #8
 350:../Dave/Generated/src/SPI001/SPI001.c ****                 USIC_CH_RBCTR_LIMIT_Pos) & USIC_CH_RBCTR_LIMIT_Msk) | \
 485              		.loc 1 350 0
 486 02d8 FC23     		mov	r3, #252
 487 02da 9B01     		lsl	r3, r3, #6
 488 02dc 0B40     		and	r3, r1
 349:../Dave/Generated/src/SPI001/SPI001.c ****   USICRegs->RBCTR |= ((((uint32_t)Handle->RxLimit  << \
 489              		.loc 1 349 0
 490 02de 1343     		orr	r3, r2
 491 02e0 8022     		mov	r2, #128
 492 02e2 5205     		lsl	r2, r2, #21
 493 02e4 111C     		mov	r1, r2
 494 02e6 1943     		orr	r1, r3
 495 02e8 7A69     		ldr	r2, [r7, #20]
 496 02ea 8623     		mov	r3, #134
 497 02ec 5B00     		lsl	r3, r3, #1
 498 02ee D150     		str	r1, [r2, r3]
 351:../Dave/Generated/src/SPI001/SPI001.c ****                 (((uint32_t)0x01   << USIC_CH_RBCTR_LOF_Pos) & \
 352:../Dave/Generated/src/SPI001/SPI001.c ****                     USIC_CH_RBCTR_LOF_Msk));
 353:../Dave/Generated/src/SPI001/SPI001.c ****    
 354:../Dave/Generated/src/SPI001/SPI001.c ****   /* Configuration of Channel Control Register */ 
 355:../Dave/Generated/src/SPI001/SPI001.c ****   /* parity generation is disabled*/
 356:../Dave/Generated/src/SPI001/SPI001.c ****   USICRegs->CCR |= ( ((uint32_t)(USIC_SPI_MODE  & USIC_CH_CCR_MODE_Msk)));
 499              		.loc 1 356 0
 500 02f0 7B69     		ldr	r3, [r7, #20]
 501 02f2 1B6C     		ldr	r3, [r3, #64]
 502 02f4 0122     		mov	r2, #1
 503 02f6 1A43     		orr	r2, r3
 504 02f8 7B69     		ldr	r3, [r7, #20]
 505 02fa 1A64     		str	r2, [r3, #64]
 357:../Dave/Generated/src/SPI001/SPI001.c **** 
 358:../Dave/Generated/src/SPI001/SPI001.c **** }
 506              		.loc 1 358 0
 507 02fc BD46     		mov	sp, r7
 508 02fe 07B0     		add	sp, sp, #28
 509              		@ sp needed for prologue
 510 0300 90BD     		pop	{r4, r7, pc}
 511              	.L9:
 512 0302 C046     		.align	2
 513              	.L8:
 514 0304 0000FF03 		.word	67043328
 515              		.cfi_endproc
 516              	.LFE33:
 518              		.global	__aeabi_ui2f
 519              		.global	__aeabi_fdiv
 520              		.global	__aeabi_fcmple
 521              		.global	__aeabi_fsub
 522              		.global	__aeabi_fcmpgt
 523              		.global	__aeabi_f2uiz
 524              		.global	__aeabi_fmul
 525              		.global	__aeabi_fadd
 526              		.section	.text.SPI001_lConfigureBaudRate,"ax",%progbits
 527              		.align	2
 528              		.global	SPI001_lConfigureBaudRate
 529              		.code	16
 530              		.thumb_func
 532              	SPI001_lConfigureBaudRate:
 533              	.LFB34:
 359:../Dave/Generated/src/SPI001/SPI001.c **** 
 360:../Dave/Generated/src/SPI001/SPI001.c **** 
 361:../Dave/Generated/src/SPI001/SPI001.c **** /* Give optimized PDIV and STEP value for the given baud rate */ 
 362:../Dave/Generated/src/SPI001/SPI001.c **** void SPI001_lConfigureBaudRate(uint32_t BaudRate,uint32_t* Pdiv,uint32_t* Step)
 363:../Dave/Generated/src/SPI001/SPI001.c **** {
 534              		.loc 1 363 0
 535              		.cfi_startproc
 536 0000 90B5     		push	{r4, r7, lr}
 537              	.LCFI3:
 538              		.cfi_def_cfa_offset 12
 539              		.cfi_offset 4, -12
 540              		.cfi_offset 7, -8
 541              		.cfi_offset 14, -4
 542 0002 89B0     		sub	sp, sp, #36
 543              	.LCFI4:
 544              		.cfi_def_cfa_offset 48
 545 0004 00AF     		add	r7, sp, #0
 546              	.LCFI5:
 547              		.cfi_def_cfa_register 7
 548 0006 F860     		str	r0, [r7, #12]
 549 0008 B960     		str	r1, [r7, #8]
 550 000a 7A60     		str	r2, [r7, #4]
 364:../Dave/Generated/src/SPI001/SPI001.c **** 
 365:../Dave/Generated/src/SPI001/SPI001.c **** 	float ratio, TempBaud,TempPdiv, TempStep;
 366:../Dave/Generated/src/SPI001/SPI001.c **** 	TempBaud = (float)BaudRate;
 551              		.loc 1 366 0
 552 000c F868     		ldr	r0, [r7, #12]
 553 000e FFF7FEFF 		bl	__aeabi_ui2f
 554 0012 031C     		add	r3, r0, #0
 555 0014 7B61     		str	r3, [r7, #20]
 367:../Dave/Generated/src/SPI001/SPI001.c **** 	ratio = (float)((((SPI001_CLOCK * (float)1000000)/\
 556              		.loc 1 367 0
 557 0016 3148     		ldr	r0, .L21
 558 0018 7969     		ldr	r1, [r7, #20]
 559 001a FFF7FEFF 		bl	__aeabi_fdiv
 560 001e 031C     		add	r3, r0, #0
 561 0020 3B61     		str	r3, [r7, #16]
 368:../Dave/Generated/src/SPI001/SPI001.c **** 	                 (float)(SPI001_DCTQ_VALUE * SPI001_MAX_STEPVALUE)) * \
 369:../Dave/Generated/src/SPI001/SPI001.c **** 	                 (float)SPI001_IM_STEPVALUE)/(float)TempBaud);
 370:../Dave/Generated/src/SPI001/SPI001.c **** 	/* Calculating optimum PDIV value */
 371:../Dave/Generated/src/SPI001/SPI001.c **** 	if( ratio <= (float)1)
 562              		.loc 1 371 0
 563 0022 3869     		ldr	r0, [r7, #16]
 564 0024 FE21     		mov	r1, #254
 565 0026 8905     		lsl	r1, r1, #22
 566 0028 FFF7FEFF 		bl	__aeabi_fcmple
 567 002c 031C     		mov	r3, r0
 568 002e 002B     		cmp	r3, #0
 569 0030 02D0     		beq	.L20
 570              	.L17:
 372:../Dave/Generated/src/SPI001/SPI001.c ****     {
 373:../Dave/Generated/src/SPI001/SPI001.c **** 		TempPdiv = (float)0;
 571              		.loc 1 373 0
 572 0032 0023     		mov	r3, #0
 573 0034 FB61     		str	r3, [r7, #28]
 574 0036 0FE0     		b	.L13
 575              	.L20:
 374:../Dave/Generated/src/SPI001/SPI001.c ****     }
 375:../Dave/Generated/src/SPI001/SPI001.c ****     else
 376:../Dave/Generated/src/SPI001/SPI001.c ****     {
 377:../Dave/Generated/src/SPI001/SPI001.c ****     	TempPdiv =  ratio -(float)1;
 576              		.loc 1 377 0
 577 0038 3869     		ldr	r0, [r7, #16]
 578 003a FE21     		mov	r1, #254
 579 003c 8905     		lsl	r1, r1, #22
 580 003e FFF7FEFF 		bl	__aeabi_fsub
 581 0042 031C     		add	r3, r0, #0
 582 0044 FB61     		str	r3, [r7, #28]
 378:../Dave/Generated/src/SPI001/SPI001.c ****       if( TempPdiv > (float)SPI001_MAX_VALUE)
 583              		.loc 1 378 0
 584 0046 F869     		ldr	r0, [r7, #28]
 585 0048 2549     		ldr	r1, .L21+4
 586 004a FFF7FEFF 		bl	__aeabi_fcmpgt
 587 004e 031C     		mov	r3, r0
 588 0050 002B     		cmp	r3, #0
 589 0052 01D0     		beq	.L13
 590              	.L18:
 379:../Dave/Generated/src/SPI001/SPI001.c ****       {
 380:../Dave/Generated/src/SPI001/SPI001.c ****     	  TempPdiv = (float)SPI001_MAX_VALUE;
 591              		.loc 1 380 0
 592 0054 224B     		ldr	r3, .L21+4
 593 0056 FB61     		str	r3, [r7, #28]
 594              	.L13:
 381:../Dave/Generated/src/SPI001/SPI001.c ****       }
 382:../Dave/Generated/src/SPI001/SPI001.c ****     }
 383:../Dave/Generated/src/SPI001/SPI001.c **** 	*Pdiv = (uint32_t)TempPdiv;
 595              		.loc 1 383 0
 596 0058 F869     		ldr	r0, [r7, #28]
 597 005a FFF7FEFF 		bl	__aeabi_f2uiz
 598 005e 021C     		mov	r2, r0
 599 0060 BB68     		ldr	r3, [r7, #8]
 600 0062 1A60     		str	r2, [r3]
 384:../Dave/Generated/src/SPI001/SPI001.c ****     /* Calculating STEP value */
 385:../Dave/Generated/src/SPI001/SPI001.c **** 	TempStep = (float)(((((TempBaud * (float)SPI001_MAX_STEPVALUE)/ \
 601              		.loc 1 385 0
 602 0064 7869     		ldr	r0, [r7, #20]
 603 0066 8921     		mov	r1, #137
 604 0068 C905     		lsl	r1, r1, #23
 605 006a FFF7FEFF 		bl	__aeabi_fmul
 606 006e 031C     		add	r3, r0, #0
 607 0070 181C     		add	r0, r3, #0
 608 0072 1C49     		ldr	r1, .L21+8
 609 0074 FFF7FEFF 		bl	__aeabi_fdiv
 610 0078 031C     		add	r3, r0, #0
 386:../Dave/Generated/src/SPI001/SPI001.c **** 	                    (float)1000000) * (float)SPI001_DCTQ_VALUE ) * \
 611              		.loc 1 386 0
 612 007a 181C     		add	r0, r3, #0
 613 007c 191C     		add	r1, r3, #0
 614 007e FFF7FEFF 		bl	__aeabi_fadd
 615 0082 031C     		add	r3, r0, #0
 616 0084 1C1C     		add	r4, r3, #0
 387:../Dave/Generated/src/SPI001/SPI001.c ****                       ((float)1+ (float)(*Pdiv)))/(SPI001_CLOCK));
 617              		.loc 1 387 0
 618 0086 BB68     		ldr	r3, [r7, #8]
 619 0088 1B68     		ldr	r3, [r3]
 620 008a 181C     		mov	r0, r3
 621 008c FFF7FEFF 		bl	__aeabi_ui2f
 622 0090 031C     		add	r3, r0, #0
 623 0092 181C     		add	r0, r3, #0
 624 0094 FE21     		mov	r1, #254
 625 0096 8905     		lsl	r1, r1, #22
 626 0098 FFF7FEFF 		bl	__aeabi_fadd
 627 009c 031C     		add	r3, r0, #0
 386:../Dave/Generated/src/SPI001/SPI001.c **** 	                    (float)1000000) * (float)SPI001_DCTQ_VALUE ) * \
 628              		.loc 1 386 0
 629 009e 201C     		add	r0, r4, #0
 630 00a0 191C     		add	r1, r3, #0
 631 00a2 FFF7FEFF 		bl	__aeabi_fmul
 632 00a6 031C     		add	r3, r0, #0
 385:../Dave/Generated/src/SPI001/SPI001.c **** 	TempStep = (float)(((((TempBaud * (float)SPI001_MAX_STEPVALUE)/ \
 633              		.loc 1 385 0
 634 00a8 181C     		add	r0, r3, #0
 635 00aa 8421     		mov	r1, #132
 636 00ac C905     		lsl	r1, r1, #23
 637 00ae FFF7FEFF 		bl	__aeabi_fdiv
 638 00b2 031C     		add	r3, r0, #0
 639 00b4 BB61     		str	r3, [r7, #24]
 388:../Dave/Generated/src/SPI001/SPI001.c **** 
 389:../Dave/Generated/src/SPI001/SPI001.c ****     if(TempStep > (float)SPI001_MAX_VALUE)
 640              		.loc 1 389 0
 641 00b6 B869     		ldr	r0, [r7, #24]
 642 00b8 0949     		ldr	r1, .L21+4
 643 00ba FFF7FEFF 		bl	__aeabi_fcmpgt
 644 00be 031C     		mov	r3, r0
 645 00c0 002B     		cmp	r3, #0
 646 00c2 01D0     		beq	.L15
 647              	.L19:
 390:../Dave/Generated/src/SPI001/SPI001.c ****     {
 391:../Dave/Generated/src/SPI001/SPI001.c ****    	  TempStep = (float)SPI001_MAX_VALUE;
 648              		.loc 1 391 0
 649 00c4 064B     		ldr	r3, .L21+4
 650 00c6 BB61     		str	r3, [r7, #24]
 651              	.L15:
 392:../Dave/Generated/src/SPI001/SPI001.c ****     }
 393:../Dave/Generated/src/SPI001/SPI001.c ****     *Step = (uint32_t)TempStep;
 652              		.loc 1 393 0
 653 00c8 B869     		ldr	r0, [r7, #24]
 654 00ca FFF7FEFF 		bl	__aeabi_f2uiz
 655 00ce 021C     		mov	r2, r0
 656 00d0 7B68     		ldr	r3, [r7, #4]
 657 00d2 1A60     		str	r2, [r3]
 394:../Dave/Generated/src/SPI001/SPI001.c **** }
 658              		.loc 1 394 0
 659 00d4 BD46     		mov	sp, r7
 660 00d6 09B0     		add	sp, sp, #36
 661              		@ sp needed for prologue
 662 00d8 90BD     		pop	{r4, r7, pc}
 663              	.L22:
 664 00da C046     		.align	2
 665              	.L21:
 666 00dc 286BEE4A 		.word	1257138984
 667 00e0 00C07F44 		.word	1149222912
 668 00e4 00247449 		.word	1232348160
 669              		.cfi_endproc
 670              	.LFE34:
 672              		.section	.text.SPI001_lClearPortRegs,"ax",%progbits
 673              		.align	2
 674              		.global	SPI001_lClearPortRegs
 675              		.code	16
 676              		.thumb_func
 678              	SPI001_lClearPortRegs:
 679              	.LFB35:
 395:../Dave/Generated/src/SPI001/SPI001.c **** 
 396:../Dave/Generated/src/SPI001/SPI001.c **** /* Clears the IOCR.PCR value of the Port Register  */
 397:../Dave/Generated/src/SPI001/SPI001.c **** void SPI001_lClearPortRegs(const SPI001_HandleType* Handle)
 398:../Dave/Generated/src/SPI001/SPI001.c **** {
 680              		.loc 1 398 0
 681              		.cfi_startproc
 682 0000 80B5     		push	{r7, lr}
 683              	.LCFI6:
 684              		.cfi_def_cfa_offset 8
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 14, -4
 687 0002 86B0     		sub	sp, sp, #24
 688              	.LCFI7:
 689              		.cfi_def_cfa_offset 32
 690 0004 00AF     		add	r7, sp, #0
 691              	.LCFI8:
 692              		.cfi_def_cfa_register 7
 693 0006 7860     		str	r0, [r7, #4]
 399:../Dave/Generated/src/SPI001/SPI001.c **** 	uint8_t MTSRPin = Handle->PinHandle->Pin_Num[0];
 694              		.loc 1 399 0
 695 0008 7B68     		ldr	r3, [r7, #4]
 696 000a DA69     		ldr	r2, [r3, #28]
 697 000c 3B1C     		mov	r3, r7
 698 000e 1733     		add	r3, r3, #23
 699 0010 1279     		ldrb	r2, [r2, #4]
 700 0012 1A70     		strb	r2, [r3]
 400:../Dave/Generated/src/SPI001/SPI001.c **** 	SPI001_PORTS_TypeDef* MTSR_PortRegs = Handle->PinHandle->PinPortRegs[0];
 701              		.loc 1 400 0
 702 0014 7B68     		ldr	r3, [r7, #4]
 703 0016 DB69     		ldr	r3, [r3, #28]
 704 0018 9B68     		ldr	r3, [r3, #8]
 705 001a 3B61     		str	r3, [r7, #16]
 401:../Dave/Generated/src/SPI001/SPI001.c ****     uint8_t Msk_IOCR = 0x07U;
 706              		.loc 1 401 0
 707 001c 3B1C     		mov	r3, r7
 708 001e 0F33     		add	r3, r3, #15
 709 0020 0722     		mov	r2, #7
 710 0022 1A70     		strb	r2, [r3]
 402:../Dave/Generated/src/SPI001/SPI001.c **** 
 403:../Dave/Generated/src/SPI001/SPI001.c **** 	if(MTSRPin < 0x04U)
 711              		.loc 1 403 0
 712 0024 3B1C     		mov	r3, r7
 713 0026 1733     		add	r3, r3, #23
 714 0028 1B78     		ldrb	r3, [r3]
 715 002a 032B     		cmp	r3, #3
 716 002c 11D8     		bhi	.L24
 404:../Dave/Generated/src/SPI001/SPI001.c ****     {
 405:../Dave/Generated/src/SPI001/SPI001.c **** 	  MTSR_PortRegs->IOCR0 &= ~((uint32_t)Msk_IOCR << (3U + (MTSRPin * 8U)));
 717              		.loc 1 405 0
 718 002e 3B69     		ldr	r3, [r7, #16]
 719 0030 1B69     		ldr	r3, [r3, #16]
 720 0032 3A1C     		mov	r2, r7
 721 0034 0F32     		add	r2, r2, #15
 722 0036 1178     		ldrb	r1, [r2]
 723 0038 3A1C     		mov	r2, r7
 724 003a 1732     		add	r2, r2, #23
 725 003c 1278     		ldrb	r2, [r2]
 726 003e D200     		lsl	r2, r2, #3
 727 0040 0332     		add	r2, r2, #3
 728 0042 081C     		mov	r0, r1
 729 0044 9040     		lsl	r0, r0, r2
 730 0046 021C     		mov	r2, r0
 731 0048 D243     		mvn	r2, r2
 732 004a 1A40     		and	r2, r3
 733 004c 3B69     		ldr	r3, [r7, #16]
 734 004e 1A61     		str	r2, [r3, #16]
 735 0050 67E0     		b	.L23
 736              	.L24:
 406:../Dave/Generated/src/SPI001/SPI001.c ****  	}
 407:../Dave/Generated/src/SPI001/SPI001.c ****  	else if ((MTSRPin > 0x03U) && (MTSRPin < 8U))
 737              		.loc 1 407 0
 738 0052 3B1C     		mov	r3, r7
 739 0054 1733     		add	r3, r3, #23
 740 0056 1B78     		ldrb	r3, [r3]
 741 0058 032B     		cmp	r3, #3
 742 005a 1DD9     		bls	.L26
 743              		.loc 1 407 0 is_stmt 0 discriminator 1
 744 005c 3B1C     		mov	r3, r7
 745 005e 1733     		add	r3, r3, #23
 746 0060 1B78     		ldrb	r3, [r3]
 747 0062 072B     		cmp	r3, #7
 748 0064 18D8     		bhi	.L26
 408:../Dave/Generated/src/SPI001/SPI001.c ****  	{
 409:../Dave/Generated/src/SPI001/SPI001.c ****  	  MTSRPin = MTSRPin - 4U;
 749              		.loc 1 409 0 is_stmt 1
 750 0066 3B1C     		mov	r3, r7
 751 0068 1733     		add	r3, r3, #23
 752 006a 3A1C     		mov	r2, r7
 753 006c 1732     		add	r2, r2, #23
 754 006e 1278     		ldrb	r2, [r2]
 755 0070 043A     		sub	r2, r2, #4
 756 0072 1A70     		strb	r2, [r3]
 410:../Dave/Generated/src/SPI001/SPI001.c **** 	  MTSR_PortRegs->IOCR4 &= ~((uint32_t)Msk_IOCR << (3U + (MTSRPin * 8U)));
 757              		.loc 1 410 0
 758 0074 3B69     		ldr	r3, [r7, #16]
 759 0076 5B69     		ldr	r3, [r3, #20]
 760 0078 3A1C     		mov	r2, r7
 761 007a 0F32     		add	r2, r2, #15
 762 007c 1178     		ldrb	r1, [r2]
 763 007e 3A1C     		mov	r2, r7
 764 0080 1732     		add	r2, r2, #23
 765 0082 1278     		ldrb	r2, [r2]
 766 0084 D200     		lsl	r2, r2, #3
 767 0086 0332     		add	r2, r2, #3
 768 0088 081C     		mov	r0, r1
 769 008a 9040     		lsl	r0, r0, r2
 770 008c 021C     		mov	r2, r0
 771 008e D243     		mvn	r2, r2
 772 0090 1A40     		and	r2, r3
 773 0092 3B69     		ldr	r3, [r7, #16]
 774 0094 5A61     		str	r2, [r3, #20]
 775 0096 44E0     		b	.L23
 776              	.L26:
 411:../Dave/Generated/src/SPI001/SPI001.c ****  	} 
 412:../Dave/Generated/src/SPI001/SPI001.c ****  	else if ((MTSRPin > 7U) && (MTSRPin < 12U)) 
 777              		.loc 1 412 0
 778 0098 3B1C     		mov	r3, r7
 779 009a 1733     		add	r3, r3, #23
 780 009c 1B78     		ldrb	r3, [r3]
 781 009e 072B     		cmp	r3, #7
 782 00a0 1DD9     		bls	.L27
 783              		.loc 1 412 0 is_stmt 0 discriminator 1
 784 00a2 3B1C     		mov	r3, r7
 785 00a4 1733     		add	r3, r3, #23
 786 00a6 1B78     		ldrb	r3, [r3]
 787 00a8 0B2B     		cmp	r3, #11
 788 00aa 18D8     		bhi	.L27
 413:../Dave/Generated/src/SPI001/SPI001.c ****  	{
 414:../Dave/Generated/src/SPI001/SPI001.c ****  	  MTSRPin = MTSRPin - 8U;
 789              		.loc 1 414 0 is_stmt 1
 790 00ac 3B1C     		mov	r3, r7
 791 00ae 1733     		add	r3, r3, #23
 792 00b0 3A1C     		mov	r2, r7
 793 00b2 1732     		add	r2, r2, #23
 794 00b4 1278     		ldrb	r2, [r2]
 795 00b6 083A     		sub	r2, r2, #8
 796 00b8 1A70     		strb	r2, [r3]
 415:../Dave/Generated/src/SPI001/SPI001.c **** 	  MTSR_PortRegs->IOCR8 &= ~((uint32_t)Msk_IOCR << (3U + (MTSRPin * 8U)));
 797              		.loc 1 415 0
 798 00ba 3B69     		ldr	r3, [r7, #16]
 799 00bc 9B69     		ldr	r3, [r3, #24]
 800 00be 3A1C     		mov	r2, r7
 801 00c0 0F32     		add	r2, r2, #15
 802 00c2 1178     		ldrb	r1, [r2]
 803 00c4 3A1C     		mov	r2, r7
 804 00c6 1732     		add	r2, r2, #23
 805 00c8 1278     		ldrb	r2, [r2]
 806 00ca D200     		lsl	r2, r2, #3
 807 00cc 0332     		add	r2, r2, #3
 808 00ce 081C     		mov	r0, r1
 809 00d0 9040     		lsl	r0, r0, r2
 810 00d2 021C     		mov	r2, r0
 811 00d4 D243     		mvn	r2, r2
 812 00d6 1A40     		and	r2, r3
 813 00d8 3B69     		ldr	r3, [r7, #16]
 814 00da 9A61     		str	r2, [r3, #24]
 815 00dc 21E0     		b	.L23
 816              	.L27:
 416:../Dave/Generated/src/SPI001/SPI001.c ****  	} 
 417:../Dave/Generated/src/SPI001/SPI001.c ****  	else if ((MTSRPin > 11U) && (MTSRPin < 16U)) 
 817              		.loc 1 417 0
 818 00de 3B1C     		mov	r3, r7
 819 00e0 1733     		add	r3, r3, #23
 820 00e2 1B78     		ldrb	r3, [r3]
 821 00e4 0B2B     		cmp	r3, #11
 822 00e6 1CD9     		bls	.L23
 823              		.loc 1 417 0 is_stmt 0 discriminator 1
 824 00e8 3B1C     		mov	r3, r7
 825 00ea 1733     		add	r3, r3, #23
 826 00ec 1B78     		ldrb	r3, [r3]
 827 00ee 0F2B     		cmp	r3, #15
 828 00f0 17D8     		bhi	.L23
 418:../Dave/Generated/src/SPI001/SPI001.c ****  	{
 419:../Dave/Generated/src/SPI001/SPI001.c ****  	  MTSRPin = MTSRPin - 12U;
 829              		.loc 1 419 0 is_stmt 1
 830 00f2 3B1C     		mov	r3, r7
 831 00f4 1733     		add	r3, r3, #23
 832 00f6 3A1C     		mov	r2, r7
 833 00f8 1732     		add	r2, r2, #23
 834 00fa 1278     		ldrb	r2, [r2]
 835 00fc 0C3A     		sub	r2, r2, #12
 836 00fe 1A70     		strb	r2, [r3]
 420:../Dave/Generated/src/SPI001/SPI001.c **** 	  MTSR_PortRegs->IOCR12 &= ~((uint32_t)Msk_IOCR << (3U + (MTSRPin * 8U)));
 837              		.loc 1 420 0
 838 0100 3B69     		ldr	r3, [r7, #16]
 839 0102 DB69     		ldr	r3, [r3, #28]
 840 0104 3A1C     		mov	r2, r7
 841 0106 0F32     		add	r2, r2, #15
 842 0108 1178     		ldrb	r1, [r2]
 843 010a 3A1C     		mov	r2, r7
 844 010c 1732     		add	r2, r2, #23
 845 010e 1278     		ldrb	r2, [r2]
 846 0110 D200     		lsl	r2, r2, #3
 847 0112 0332     		add	r2, r2, #3
 848 0114 081C     		mov	r0, r1
 849 0116 9040     		lsl	r0, r0, r2
 850 0118 021C     		mov	r2, r0
 851 011a D243     		mvn	r2, r2
 852 011c 1A40     		and	r2, r3
 853 011e 3B69     		ldr	r3, [r7, #16]
 854 0120 DA61     		str	r2, [r3, #28]
 855              	.L23:
 421:../Dave/Generated/src/SPI001/SPI001.c **** 	}
 422:../Dave/Generated/src/SPI001/SPI001.c ****  	else
 423:../Dave/Generated/src/SPI001/SPI001.c ****  	{
 424:../Dave/Generated/src/SPI001/SPI001.c ****  	  /* Do Nothing */
 425:../Dave/Generated/src/SPI001/SPI001.c ****  	}
 426:../Dave/Generated/src/SPI001/SPI001.c **** }
 856              		.loc 1 426 0
 857 0122 BD46     		mov	sp, r7
 858 0124 06B0     		add	sp, sp, #24
 859              		@ sp needed for prologue
 860 0126 80BD     		pop	{r7, pc}
 861              		.cfi_endproc
 862              	.LFE35:
 864              		.section	.text.SPI001_lMTSR2_Modfn,"ax",%progbits
 865              		.align	2
 866              		.global	SPI001_lMTSR2_Modfn
 867              		.code	16
 868              		.thumb_func
 870              	SPI001_lMTSR2_Modfn:
 871              	.LFB36:
 427:../Dave/Generated/src/SPI001/SPI001.c **** 
 428:../Dave/Generated/src/SPI001/SPI001.c **** /* Modify the MTSR2HW_PortRegs for full duplex operation */
 429:../Dave/Generated/src/SPI001/SPI001.c **** void SPI001_lMTSR2_Modfn(const SPI001_HandleType* Handle)
 430:../Dave/Generated/src/SPI001/SPI001.c **** {
 872              		.loc 1 430 0
 873              		.cfi_startproc
 874 0000 80B5     		push	{r7, lr}
 875              	.LCFI9:
 876              		.cfi_def_cfa_offset 8
 877              		.cfi_offset 7, -8
 878              		.cfi_offset 14, -4
 879 0002 86B0     		sub	sp, sp, #24
 880              	.LCFI10:
 881              		.cfi_def_cfa_offset 32
 882 0004 00AF     		add	r7, sp, #0
 883              	.LCFI11:
 884              		.cfi_def_cfa_register 7
 885 0006 7860     		str	r0, [r7, #4]
 431:../Dave/Generated/src/SPI001/SPI001.c **** 	uint8_t MTSR2_HWPin = Handle->PinHandle->Pin_Num[2];
 886              		.loc 1 431 0
 887 0008 7B68     		ldr	r3, [r7, #4]
 888 000a DA69     		ldr	r2, [r3, #28]
 889 000c 3B1C     		mov	r3, r7
 890 000e 1733     		add	r3, r3, #23
 891 0010 9279     		ldrb	r2, [r2, #6]
 892 0012 1A70     		strb	r2, [r3]
 432:../Dave/Generated/src/SPI001/SPI001.c **** 	SPI001_PORTS_TypeDef* MTSR2HW_PortRegs = Handle->PinHandle->PinPortRegs[2];
 893              		.loc 1 432 0
 894 0014 7B68     		ldr	r3, [r7, #4]
 895 0016 DB69     		ldr	r3, [r3, #28]
 896 0018 1B69     		ldr	r3, [r3, #16]
 897 001a 3B61     		str	r3, [r7, #16]
 433:../Dave/Generated/src/SPI001/SPI001.c **** 	uint8_t Msk_OE = 0x18U;
 898              		.loc 1 433 0
 899 001c 3B1C     		mov	r3, r7
 900 001e 0F33     		add	r3, r3, #15
 901 0020 1822     		mov	r2, #24
 902 0022 1A70     		strb	r2, [r3]
 434:../Dave/Generated/src/SPI001/SPI001.c **** 
 435:../Dave/Generated/src/SPI001/SPI001.c ****   if(MTSR2_HWPin < 4U) 
 903              		.loc 1 435 0
 904 0024 3B1C     		mov	r3, r7
 905 0026 1733     		add	r3, r3, #23
 906 0028 1B78     		ldrb	r3, [r3]
 907 002a 032B     		cmp	r3, #3
 908 002c 11D8     		bhi	.L29
 436:../Dave/Generated/src/SPI001/SPI001.c ****   {
 437:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR2HW_PortRegs->IOCR0 &= ~((uint32_t)Msk_OE << (3U+(MTSR2_HWPin*8U)));
 909              		.loc 1 437 0
 910 002e 3B69     		ldr	r3, [r7, #16]
 911 0030 1B69     		ldr	r3, [r3, #16]
 912 0032 3A1C     		mov	r2, r7
 913 0034 0F32     		add	r2, r2, #15
 914 0036 1178     		ldrb	r1, [r2]
 915 0038 3A1C     		mov	r2, r7
 916 003a 1732     		add	r2, r2, #23
 917 003c 1278     		ldrb	r2, [r2]
 918 003e D200     		lsl	r2, r2, #3
 919 0040 0332     		add	r2, r2, #3
 920 0042 081C     		mov	r0, r1
 921 0044 9040     		lsl	r0, r0, r2
 922 0046 021C     		mov	r2, r0
 923 0048 D243     		mvn	r2, r2
 924 004a 1A40     		and	r2, r3
 925 004c 3B69     		ldr	r3, [r7, #16]
 926 004e 1A61     		str	r2, [r3, #16]
 927 0050 67E0     		b	.L28
 928              	.L29:
 438:../Dave/Generated/src/SPI001/SPI001.c ****   }
 439:../Dave/Generated/src/SPI001/SPI001.c ****   else if ((MTSR2_HWPin > 3U) && (MTSR2_HWPin < 8U)) 
 929              		.loc 1 439 0
 930 0052 3B1C     		mov	r3, r7
 931 0054 1733     		add	r3, r3, #23
 932 0056 1B78     		ldrb	r3, [r3]
 933 0058 032B     		cmp	r3, #3
 934 005a 1DD9     		bls	.L31
 935              		.loc 1 439 0 is_stmt 0 discriminator 1
 936 005c 3B1C     		mov	r3, r7
 937 005e 1733     		add	r3, r3, #23
 938 0060 1B78     		ldrb	r3, [r3]
 939 0062 072B     		cmp	r3, #7
 940 0064 18D8     		bhi	.L31
 440:../Dave/Generated/src/SPI001/SPI001.c ****   {
 441:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR2_HWPin = MTSR2_HWPin - 4U;
 941              		.loc 1 441 0 is_stmt 1
 942 0066 3B1C     		mov	r3, r7
 943 0068 1733     		add	r3, r3, #23
 944 006a 3A1C     		mov	r2, r7
 945 006c 1732     		add	r2, r2, #23
 946 006e 1278     		ldrb	r2, [r2]
 947 0070 043A     		sub	r2, r2, #4
 948 0072 1A70     		strb	r2, [r3]
 442:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR2HW_PortRegs->IOCR4 &= ~((uint32_t)Msk_OE << (3U+(MTSR2_HWPin*8U)));
 949              		.loc 1 442 0
 950 0074 3B69     		ldr	r3, [r7, #16]
 951 0076 5B69     		ldr	r3, [r3, #20]
 952 0078 3A1C     		mov	r2, r7
 953 007a 0F32     		add	r2, r2, #15
 954 007c 1178     		ldrb	r1, [r2]
 955 007e 3A1C     		mov	r2, r7
 956 0080 1732     		add	r2, r2, #23
 957 0082 1278     		ldrb	r2, [r2]
 958 0084 D200     		lsl	r2, r2, #3
 959 0086 0332     		add	r2, r2, #3
 960 0088 081C     		mov	r0, r1
 961 008a 9040     		lsl	r0, r0, r2
 962 008c 021C     		mov	r2, r0
 963 008e D243     		mvn	r2, r2
 964 0090 1A40     		and	r2, r3
 965 0092 3B69     		ldr	r3, [r7, #16]
 966 0094 5A61     		str	r2, [r3, #20]
 967 0096 44E0     		b	.L28
 968              	.L31:
 443:../Dave/Generated/src/SPI001/SPI001.c ****   } 
 444:../Dave/Generated/src/SPI001/SPI001.c ****   else if ((MTSR2_HWPin > 7U) && (MTSR2_HWPin < 12U)) 
 969              		.loc 1 444 0
 970 0098 3B1C     		mov	r3, r7
 971 009a 1733     		add	r3, r3, #23
 972 009c 1B78     		ldrb	r3, [r3]
 973 009e 072B     		cmp	r3, #7
 974 00a0 1DD9     		bls	.L32
 975              		.loc 1 444 0 is_stmt 0 discriminator 1
 976 00a2 3B1C     		mov	r3, r7
 977 00a4 1733     		add	r3, r3, #23
 978 00a6 1B78     		ldrb	r3, [r3]
 979 00a8 0B2B     		cmp	r3, #11
 980 00aa 18D8     		bhi	.L32
 445:../Dave/Generated/src/SPI001/SPI001.c ****   {
 446:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR2_HWPin = MTSR2_HWPin - 8U;
 981              		.loc 1 446 0 is_stmt 1
 982 00ac 3B1C     		mov	r3, r7
 983 00ae 1733     		add	r3, r3, #23
 984 00b0 3A1C     		mov	r2, r7
 985 00b2 1732     		add	r2, r2, #23
 986 00b4 1278     		ldrb	r2, [r2]
 987 00b6 083A     		sub	r2, r2, #8
 988 00b8 1A70     		strb	r2, [r3]
 447:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR2HW_PortRegs->IOCR8 &= ~((uint32_t)Msk_OE << (3U+(MTSR2_HWPin*8U)));
 989              		.loc 1 447 0
 990 00ba 3B69     		ldr	r3, [r7, #16]
 991 00bc 9B69     		ldr	r3, [r3, #24]
 992 00be 3A1C     		mov	r2, r7
 993 00c0 0F32     		add	r2, r2, #15
 994 00c2 1178     		ldrb	r1, [r2]
 995 00c4 3A1C     		mov	r2, r7
 996 00c6 1732     		add	r2, r2, #23
 997 00c8 1278     		ldrb	r2, [r2]
 998 00ca D200     		lsl	r2, r2, #3
 999 00cc 0332     		add	r2, r2, #3
 1000 00ce 081C     		mov	r0, r1
 1001 00d0 9040     		lsl	r0, r0, r2
 1002 00d2 021C     		mov	r2, r0
 1003 00d4 D243     		mvn	r2, r2
 1004 00d6 1A40     		and	r2, r3
 1005 00d8 3B69     		ldr	r3, [r7, #16]
 1006 00da 9A61     		str	r2, [r3, #24]
 1007 00dc 21E0     		b	.L28
 1008              	.L32:
 448:../Dave/Generated/src/SPI001/SPI001.c ****   } 
 449:../Dave/Generated/src/SPI001/SPI001.c ****   else if ((MTSR2_HWPin > 11U) && (MTSR2_HWPin < 16U)) 
 1009              		.loc 1 449 0
 1010 00de 3B1C     		mov	r3, r7
 1011 00e0 1733     		add	r3, r3, #23
 1012 00e2 1B78     		ldrb	r3, [r3]
 1013 00e4 0B2B     		cmp	r3, #11
 1014 00e6 1CD9     		bls	.L28
 1015              		.loc 1 449 0 is_stmt 0 discriminator 1
 1016 00e8 3B1C     		mov	r3, r7
 1017 00ea 1733     		add	r3, r3, #23
 1018 00ec 1B78     		ldrb	r3, [r3]
 1019 00ee 0F2B     		cmp	r3, #15
 1020 00f0 17D8     		bhi	.L28
 450:../Dave/Generated/src/SPI001/SPI001.c ****   {
 451:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR2_HWPin = MTSR2_HWPin - 12U;
 1021              		.loc 1 451 0 is_stmt 1
 1022 00f2 3B1C     		mov	r3, r7
 1023 00f4 1733     		add	r3, r3, #23
 1024 00f6 3A1C     		mov	r2, r7
 1025 00f8 1732     		add	r2, r2, #23
 1026 00fa 1278     		ldrb	r2, [r2]
 1027 00fc 0C3A     		sub	r2, r2, #12
 1028 00fe 1A70     		strb	r2, [r3]
 452:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR2HW_PortRegs->IOCR12 &= ~((uint32_t)Msk_OE << (3U+(MTSR2_HWPin*8U)));
 1029              		.loc 1 452 0
 1030 0100 3B69     		ldr	r3, [r7, #16]
 1031 0102 DB69     		ldr	r3, [r3, #28]
 1032 0104 3A1C     		mov	r2, r7
 1033 0106 0F32     		add	r2, r2, #15
 1034 0108 1178     		ldrb	r1, [r2]
 1035 010a 3A1C     		mov	r2, r7
 1036 010c 1732     		add	r2, r2, #23
 1037 010e 1278     		ldrb	r2, [r2]
 1038 0110 D200     		lsl	r2, r2, #3
 1039 0112 0332     		add	r2, r2, #3
 1040 0114 081C     		mov	r0, r1
 1041 0116 9040     		lsl	r0, r0, r2
 1042 0118 021C     		mov	r2, r0
 1043 011a D243     		mvn	r2, r2
 1044 011c 1A40     		and	r2, r3
 1045 011e 3B69     		ldr	r3, [r7, #16]
 1046 0120 DA61     		str	r2, [r3, #28]
 1047              	.L28:
 453:../Dave/Generated/src/SPI001/SPI001.c ****   }
 454:../Dave/Generated/src/SPI001/SPI001.c ****   else 
 455:../Dave/Generated/src/SPI001/SPI001.c ****   {
 456:../Dave/Generated/src/SPI001/SPI001.c ****     /* Do Nothing */	
 457:../Dave/Generated/src/SPI001/SPI001.c ****   }
 458:../Dave/Generated/src/SPI001/SPI001.c **** }
 1048              		.loc 1 458 0
 1049 0122 BD46     		mov	sp, r7
 1050 0124 06B0     		add	sp, sp, #24
 1051              		@ sp needed for prologue
 1052 0126 80BD     		pop	{r7, pc}
 1053              		.cfi_endproc
 1054              	.LFE36:
 1056              		.section	.text.SPI001_lMTSR3_Modfn,"ax",%progbits
 1057              		.align	2
 1058              		.global	SPI001_lMTSR3_Modfn
 1059              		.code	16
 1060              		.thumb_func
 1062              	SPI001_lMTSR3_Modfn:
 1063              	.LFB37:
 459:../Dave/Generated/src/SPI001/SPI001.c **** 
 460:../Dave/Generated/src/SPI001/SPI001.c **** /* Modify the MTSR3HW_PortRegs for full duplex operation */
 461:../Dave/Generated/src/SPI001/SPI001.c **** void SPI001_lMTSR3_Modfn(const SPI001_HandleType* Handle)
 462:../Dave/Generated/src/SPI001/SPI001.c **** {
 1064              		.loc 1 462 0
 1065              		.cfi_startproc
 1066 0000 80B5     		push	{r7, lr}
 1067              	.LCFI12:
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 7, -8
 1070              		.cfi_offset 14, -4
 1071 0002 86B0     		sub	sp, sp, #24
 1072              	.LCFI13:
 1073              		.cfi_def_cfa_offset 32
 1074 0004 00AF     		add	r7, sp, #0
 1075              	.LCFI14:
 1076              		.cfi_def_cfa_register 7
 1077 0006 7860     		str	r0, [r7, #4]
 463:../Dave/Generated/src/SPI001/SPI001.c **** 	uint8_t MTSR3_HWPin = Handle->PinHandle->Pin_Num[3];
 1078              		.loc 1 463 0
 1079 0008 7B68     		ldr	r3, [r7, #4]
 1080 000a DA69     		ldr	r2, [r3, #28]
 1081 000c 3B1C     		mov	r3, r7
 1082 000e 1733     		add	r3, r3, #23
 1083 0010 D279     		ldrb	r2, [r2, #7]
 1084 0012 1A70     		strb	r2, [r3]
 464:../Dave/Generated/src/SPI001/SPI001.c **** 	SPI001_PORTS_TypeDef* MTSR3HW_PortRegs = Handle->PinHandle->PinPortRegs[3];
 1085              		.loc 1 464 0
 1086 0014 7B68     		ldr	r3, [r7, #4]
 1087 0016 DB69     		ldr	r3, [r3, #28]
 1088 0018 5B69     		ldr	r3, [r3, #20]
 1089 001a 3B61     		str	r3, [r7, #16]
 465:../Dave/Generated/src/SPI001/SPI001.c **** 	uint8_t Msk_OE = 0x18U;
 1090              		.loc 1 465 0
 1091 001c 3B1C     		mov	r3, r7
 1092 001e 0F33     		add	r3, r3, #15
 1093 0020 1822     		mov	r2, #24
 1094 0022 1A70     		strb	r2, [r3]
 466:../Dave/Generated/src/SPI001/SPI001.c **** 
 467:../Dave/Generated/src/SPI001/SPI001.c ****   if(MTSR3_HWPin < 4U) 
 1095              		.loc 1 467 0
 1096 0024 3B1C     		mov	r3, r7
 1097 0026 1733     		add	r3, r3, #23
 1098 0028 1B78     		ldrb	r3, [r3]
 1099 002a 032B     		cmp	r3, #3
 1100 002c 11D8     		bhi	.L34
 468:../Dave/Generated/src/SPI001/SPI001.c ****   {
 469:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR3HW_PortRegs->IOCR0 &= ~((uint32_t)Msk_OE << (3U+(MTSR3_HWPin*8U)));
 1101              		.loc 1 469 0
 1102 002e 3B69     		ldr	r3, [r7, #16]
 1103 0030 1B69     		ldr	r3, [r3, #16]
 1104 0032 3A1C     		mov	r2, r7
 1105 0034 0F32     		add	r2, r2, #15
 1106 0036 1178     		ldrb	r1, [r2]
 1107 0038 3A1C     		mov	r2, r7
 1108 003a 1732     		add	r2, r2, #23
 1109 003c 1278     		ldrb	r2, [r2]
 1110 003e D200     		lsl	r2, r2, #3
 1111 0040 0332     		add	r2, r2, #3
 1112 0042 081C     		mov	r0, r1
 1113 0044 9040     		lsl	r0, r0, r2
 1114 0046 021C     		mov	r2, r0
 1115 0048 D243     		mvn	r2, r2
 1116 004a 1A40     		and	r2, r3
 1117 004c 3B69     		ldr	r3, [r7, #16]
 1118 004e 1A61     		str	r2, [r3, #16]
 1119 0050 67E0     		b	.L33
 1120              	.L34:
 470:../Dave/Generated/src/SPI001/SPI001.c ****   }
 471:../Dave/Generated/src/SPI001/SPI001.c ****   else if ((MTSR3_HWPin > 3U) && (MTSR3_HWPin < 8U)) 
 1121              		.loc 1 471 0
 1122 0052 3B1C     		mov	r3, r7
 1123 0054 1733     		add	r3, r3, #23
 1124 0056 1B78     		ldrb	r3, [r3]
 1125 0058 032B     		cmp	r3, #3
 1126 005a 1DD9     		bls	.L36
 1127              		.loc 1 471 0 is_stmt 0 discriminator 1
 1128 005c 3B1C     		mov	r3, r7
 1129 005e 1733     		add	r3, r3, #23
 1130 0060 1B78     		ldrb	r3, [r3]
 1131 0062 072B     		cmp	r3, #7
 1132 0064 18D8     		bhi	.L36
 472:../Dave/Generated/src/SPI001/SPI001.c ****   {
 473:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR3_HWPin = MTSR3_HWPin - 4U;
 1133              		.loc 1 473 0 is_stmt 1
 1134 0066 3B1C     		mov	r3, r7
 1135 0068 1733     		add	r3, r3, #23
 1136 006a 3A1C     		mov	r2, r7
 1137 006c 1732     		add	r2, r2, #23
 1138 006e 1278     		ldrb	r2, [r2]
 1139 0070 043A     		sub	r2, r2, #4
 1140 0072 1A70     		strb	r2, [r3]
 474:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR3HW_PortRegs->IOCR4 &= ~((uint32_t)Msk_OE << (3U+(MTSR3_HWPin*8U)));
 1141              		.loc 1 474 0
 1142 0074 3B69     		ldr	r3, [r7, #16]
 1143 0076 5B69     		ldr	r3, [r3, #20]
 1144 0078 3A1C     		mov	r2, r7
 1145 007a 0F32     		add	r2, r2, #15
 1146 007c 1178     		ldrb	r1, [r2]
 1147 007e 3A1C     		mov	r2, r7
 1148 0080 1732     		add	r2, r2, #23
 1149 0082 1278     		ldrb	r2, [r2]
 1150 0084 D200     		lsl	r2, r2, #3
 1151 0086 0332     		add	r2, r2, #3
 1152 0088 081C     		mov	r0, r1
 1153 008a 9040     		lsl	r0, r0, r2
 1154 008c 021C     		mov	r2, r0
 1155 008e D243     		mvn	r2, r2
 1156 0090 1A40     		and	r2, r3
 1157 0092 3B69     		ldr	r3, [r7, #16]
 1158 0094 5A61     		str	r2, [r3, #20]
 1159 0096 44E0     		b	.L33
 1160              	.L36:
 475:../Dave/Generated/src/SPI001/SPI001.c ****   } 
 476:../Dave/Generated/src/SPI001/SPI001.c ****   else if ((MTSR3_HWPin > 7U) && (MTSR3_HWPin < 12U))
 1161              		.loc 1 476 0
 1162 0098 3B1C     		mov	r3, r7
 1163 009a 1733     		add	r3, r3, #23
 1164 009c 1B78     		ldrb	r3, [r3]
 1165 009e 072B     		cmp	r3, #7
 1166 00a0 1DD9     		bls	.L37
 1167              		.loc 1 476 0 is_stmt 0 discriminator 1
 1168 00a2 3B1C     		mov	r3, r7
 1169 00a4 1733     		add	r3, r3, #23
 1170 00a6 1B78     		ldrb	r3, [r3]
 1171 00a8 0B2B     		cmp	r3, #11
 1172 00aa 18D8     		bhi	.L37
 477:../Dave/Generated/src/SPI001/SPI001.c ****   {
 478:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR3_HWPin = MTSR3_HWPin - 8U;
 1173              		.loc 1 478 0 is_stmt 1
 1174 00ac 3B1C     		mov	r3, r7
 1175 00ae 1733     		add	r3, r3, #23
 1176 00b0 3A1C     		mov	r2, r7
 1177 00b2 1732     		add	r2, r2, #23
 1178 00b4 1278     		ldrb	r2, [r2]
 1179 00b6 083A     		sub	r2, r2, #8
 1180 00b8 1A70     		strb	r2, [r3]
 479:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR3HW_PortRegs->IOCR8 &= ~((uint32_t)Msk_OE << (3U+(MTSR3_HWPin*8U)));
 1181              		.loc 1 479 0
 1182 00ba 3B69     		ldr	r3, [r7, #16]
 1183 00bc 9B69     		ldr	r3, [r3, #24]
 1184 00be 3A1C     		mov	r2, r7
 1185 00c0 0F32     		add	r2, r2, #15
 1186 00c2 1178     		ldrb	r1, [r2]
 1187 00c4 3A1C     		mov	r2, r7
 1188 00c6 1732     		add	r2, r2, #23
 1189 00c8 1278     		ldrb	r2, [r2]
 1190 00ca D200     		lsl	r2, r2, #3
 1191 00cc 0332     		add	r2, r2, #3
 1192 00ce 081C     		mov	r0, r1
 1193 00d0 9040     		lsl	r0, r0, r2
 1194 00d2 021C     		mov	r2, r0
 1195 00d4 D243     		mvn	r2, r2
 1196 00d6 1A40     		and	r2, r3
 1197 00d8 3B69     		ldr	r3, [r7, #16]
 1198 00da 9A61     		str	r2, [r3, #24]
 1199 00dc 21E0     		b	.L33
 1200              	.L37:
 480:../Dave/Generated/src/SPI001/SPI001.c ****   } 
 481:../Dave/Generated/src/SPI001/SPI001.c ****   else if ((MTSR3_HWPin > 11U) && (MTSR3_HWPin < 16U)) 
 1201              		.loc 1 481 0
 1202 00de 3B1C     		mov	r3, r7
 1203 00e0 1733     		add	r3, r3, #23
 1204 00e2 1B78     		ldrb	r3, [r3]
 1205 00e4 0B2B     		cmp	r3, #11
 1206 00e6 1CD9     		bls	.L33
 1207              		.loc 1 481 0 is_stmt 0 discriminator 1
 1208 00e8 3B1C     		mov	r3, r7
 1209 00ea 1733     		add	r3, r3, #23
 1210 00ec 1B78     		ldrb	r3, [r3]
 1211 00ee 0F2B     		cmp	r3, #15
 1212 00f0 17D8     		bhi	.L33
 482:../Dave/Generated/src/SPI001/SPI001.c ****   {
 483:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR3_HWPin = MTSR3_HWPin - 12U;
 1213              		.loc 1 483 0 is_stmt 1
 1214 00f2 3B1C     		mov	r3, r7
 1215 00f4 1733     		add	r3, r3, #23
 1216 00f6 3A1C     		mov	r2, r7
 1217 00f8 1732     		add	r2, r2, #23
 1218 00fa 1278     		ldrb	r2, [r2]
 1219 00fc 0C3A     		sub	r2, r2, #12
 1220 00fe 1A70     		strb	r2, [r3]
 484:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR3HW_PortRegs->IOCR12 &= ~((uint32_t)Msk_OE << (3U+(MTSR3_HWPin*8U)));
 1221              		.loc 1 484 0
 1222 0100 3B69     		ldr	r3, [r7, #16]
 1223 0102 DB69     		ldr	r3, [r3, #28]
 1224 0104 3A1C     		mov	r2, r7
 1225 0106 0F32     		add	r2, r2, #15
 1226 0108 1178     		ldrb	r1, [r2]
 1227 010a 3A1C     		mov	r2, r7
 1228 010c 1732     		add	r2, r2, #23
 1229 010e 1278     		ldrb	r2, [r2]
 1230 0110 D200     		lsl	r2, r2, #3
 1231 0112 0332     		add	r2, r2, #3
 1232 0114 081C     		mov	r0, r1
 1233 0116 9040     		lsl	r0, r0, r2
 1234 0118 021C     		mov	r2, r0
 1235 011a D243     		mvn	r2, r2
 1236 011c 1A40     		and	r2, r3
 1237 011e 3B69     		ldr	r3, [r7, #16]
 1238 0120 DA61     		str	r2, [r3, #28]
 1239              	.L33:
 485:../Dave/Generated/src/SPI001/SPI001.c ****   }
 486:../Dave/Generated/src/SPI001/SPI001.c ****   else 
 487:../Dave/Generated/src/SPI001/SPI001.c ****   {
 488:../Dave/Generated/src/SPI001/SPI001.c ****     /* Do Nothing */
 489:../Dave/Generated/src/SPI001/SPI001.c ****   }
 490:../Dave/Generated/src/SPI001/SPI001.c **** }
 1240              		.loc 1 490 0
 1241 0122 BD46     		mov	sp, r7
 1242 0124 06B0     		add	sp, sp, #24
 1243              		@ sp needed for prologue
 1244 0126 80BD     		pop	{r7, pc}
 1245              		.cfi_endproc
 1246              	.LFE37:
 1248              		.section	.text.SPI001_lPinModfn_Fullduplex,"ax",%progbits
 1249              		.align	2
 1250              		.global	SPI001_lPinModfn_Fullduplex
 1251              		.code	16
 1252              		.thumb_func
 1254              	SPI001_lPinModfn_Fullduplex:
 1255              	.LFB38:
 491:../Dave/Generated/src/SPI001/SPI001.c **** 
 492:../Dave/Generated/src/SPI001/SPI001.c **** /* Modify the MTSR/MRST Pin PortRegs for full duplex operation */
 493:../Dave/Generated/src/SPI001/SPI001.c **** void SPI001_lPinModfn_Fullduplex(const SPI001_HandleType* Handle)
 494:../Dave/Generated/src/SPI001/SPI001.c **** {
 1256              		.loc 1 494 0
 1257              		.cfi_startproc
 1258 0000 80B5     		push	{r7, lr}
 1259              	.LCFI15:
 1260              		.cfi_def_cfa_offset 8
 1261              		.cfi_offset 7, -8
 1262              		.cfi_offset 14, -4
 1263 0002 88B0     		sub	sp, sp, #32
 1264              	.LCFI16:
 1265              		.cfi_def_cfa_offset 40
 1266 0004 00AF     		add	r7, sp, #0
 1267              	.LCFI17:
 1268              		.cfi_def_cfa_register 7
 1269 0006 7860     		str	r0, [r7, #4]
 495:../Dave/Generated/src/SPI001/SPI001.c **** 	USIC_CH_TypeDef* USICRegs = Handle->USICRegs;
 1270              		.loc 1 495 0
 1271 0008 7B68     		ldr	r3, [r7, #4]
 1272 000a 1B68     		ldr	r3, [r3]
 1273 000c FB61     		str	r3, [r7, #28]
 496:../Dave/Generated/src/SPI001/SPI001.c **** 	SPI001_PORTS_TypeDef* MTSR_PortRegs = Handle->PinHandle->PinPortRegs[0];
 1274              		.loc 1 496 0
 1275 000e 7B68     		ldr	r3, [r7, #4]
 1276 0010 DB69     		ldr	r3, [r3, #28]
 1277 0012 9B68     		ldr	r3, [r3, #8]
 1278 0014 BB61     		str	r3, [r7, #24]
 497:../Dave/Generated/src/SPI001/SPI001.c **** 	SPI001_PORTS_TypeDef* MRST_PortRegs = Handle->PinHandle->PinPortRegs[1];
 1279              		.loc 1 497 0
 1280 0016 7B68     		ldr	r3, [r7, #4]
 1281 0018 DB69     		ldr	r3, [r3, #28]
 1282 001a DB68     		ldr	r3, [r3, #12]
 1283 001c 7B61     		str	r3, [r7, #20]
 498:../Dave/Generated/src/SPI001/SPI001.c **** 	uint8_t MRSTPin_DSEL = Handle->PinHandle->MRST_DSEL;
 1284              		.loc 1 498 0
 1285 001e 7B68     		ldr	r3, [r7, #4]
 1286 0020 DA69     		ldr	r2, [r3, #28]
 1287 0022 3B1C     		mov	r3, r7
 1288 0024 1333     		add	r3, r3, #19
 1289 0026 127E     		ldrb	r2, [r2, #24]
 1290 0028 1A70     		strb	r2, [r3]
 499:../Dave/Generated/src/SPI001/SPI001.c **** 	uint8_t MTSRPin_IOCR = Handle->PinHandle->MTSR_IOCR;
 1291              		.loc 1 499 0
 1292 002a 7B68     		ldr	r3, [r7, #4]
 1293 002c DA69     		ldr	r2, [r3, #28]
 1294 002e 3B1C     		mov	r3, r7
 1295 0030 1233     		add	r3, r3, #18
 1296 0032 527E     		ldrb	r2, [r2, #25]
 1297 0034 1A70     		strb	r2, [r3]
 500:../Dave/Generated/src/SPI001/SPI001.c **** 	uint8_t MTSRPin = Handle->PinHandle->Pin_Num[0];
 1298              		.loc 1 500 0
 1299 0036 7B68     		ldr	r3, [r7, #4]
 1300 0038 DA69     		ldr	r2, [r3, #28]
 1301 003a 3B1C     		mov	r3, r7
 1302 003c 1133     		add	r3, r3, #17
 1303 003e 1279     		ldrb	r2, [r2, #4]
 1304 0040 1A70     		strb	r2, [r3]
 501:../Dave/Generated/src/SPI001/SPI001.c **** 	uint8_t MRSTPin = Handle->PinHandle->Pin_Num[1];
 1305              		.loc 1 501 0
 1306 0042 7B68     		ldr	r3, [r7, #4]
 1307 0044 DA69     		ldr	r2, [r3, #28]
 1308 0046 3B1C     		mov	r3, r7
 1309 0048 1033     		add	r3, r3, #16
 1310 004a 5279     		ldrb	r2, [r2, #5]
 1311 004c 1A70     		strb	r2, [r3]
 502:../Dave/Generated/src/SPI001/SPI001.c **** 	uint8_t MTSR2_HWPin = Handle->PinHandle->Pin_Num[2];
 1312              		.loc 1 502 0
 1313 004e 7B68     		ldr	r3, [r7, #4]
 1314 0050 DA69     		ldr	r2, [r3, #28]
 1315 0052 3B1C     		mov	r3, r7
 1316 0054 0F33     		add	r3, r3, #15
 1317 0056 9279     		ldrb	r2, [r2, #6]
 1318 0058 1A70     		strb	r2, [r3]
 503:../Dave/Generated/src/SPI001/SPI001.c **** 	uint8_t MTSR2_HWPort = Handle->PinHandle->Port_Num[2];
 1319              		.loc 1 503 0
 1320 005a 7B68     		ldr	r3, [r7, #4]
 1321 005c DA69     		ldr	r2, [r3, #28]
 1322 005e 3B1C     		mov	r3, r7
 1323 0060 0E33     		add	r3, r3, #14
 1324 0062 9278     		ldrb	r2, [r2, #2]
 1325 0064 1A70     		strb	r2, [r3]
 504:../Dave/Generated/src/SPI001/SPI001.c **** 	uint8_t Pin0 = 0x00U;
 1326              		.loc 1 504 0
 1327 0066 3B1C     		mov	r3, r7
 1328 0068 0D33     		add	r3, r3, #13
 1329 006a 0022     		mov	r2, #0
 1330 006c 1A70     		strb	r2, [r3]
 505:../Dave/Generated/src/SPI001/SPI001.c **** 	uint8_t Msk_HWSEL = 0x03U;
 1331              		.loc 1 505 0
 1332 006e 3B1C     		mov	r3, r7
 1333 0070 0C33     		add	r3, r3, #12
 1334 0072 0322     		mov	r2, #3
 1335 0074 1A70     		strb	r2, [r3]
 506:../Dave/Generated/src/SPI001/SPI001.c **** 
 507:../Dave/Generated/src/SPI001/SPI001.c **** 	Pin0 = MTSRPin;
 1336              		.loc 1 507 0
 1337 0076 3B1C     		mov	r3, r7
 1338 0078 0D33     		add	r3, r3, #13
 1339 007a 3A1C     		mov	r2, r7
 1340 007c 1132     		add	r2, r2, #17
 1341 007e 1278     		ldrb	r2, [r2]
 1342 0080 1A70     		strb	r2, [r3]
 508:../Dave/Generated/src/SPI001/SPI001.c ****   if(!((MTSR2_HWPin == 0x00U) && (MTSR2_HWPort == 0x00U)))
 1343              		.loc 1 508 0
 1344 0082 3B1C     		mov	r3, r7
 1345 0084 0F33     		add	r3, r3, #15
 1346 0086 1B78     		ldrb	r3, [r3]
 1347 0088 002B     		cmp	r3, #0
 1348 008a 04D1     		bne	.L39
 1349              		.loc 1 508 0 is_stmt 0 discriminator 1
 1350 008c 3B1C     		mov	r3, r7
 1351 008e 0E33     		add	r3, r3, #14
 1352 0090 1B78     		ldrb	r3, [r3]
 1353 0092 002B     		cmp	r3, #0
 1354 0094 07D0     		beq	.L40
 1355              	.L39:
 509:../Dave/Generated/src/SPI001/SPI001.c **** 	{
 510:../Dave/Generated/src/SPI001/SPI001.c ****     	SPI001_lMTSR2_Modfn(Handle);
 1356              		.loc 1 510 0 is_stmt 1
 1357 0096 7B68     		ldr	r3, [r7, #4]
 1358 0098 181C     		mov	r0, r3
 1359 009a FFF7FEFF 		bl	SPI001_lMTSR2_Modfn
 511:../Dave/Generated/src/SPI001/SPI001.c ****     	SPI001_lMTSR3_Modfn(Handle);
 1360              		.loc 1 511 0
 1361 009e 7B68     		ldr	r3, [r7, #4]
 1362 00a0 181C     		mov	r0, r3
 1363 00a2 FFF7FEFF 		bl	SPI001_lMTSR3_Modfn
 1364              	.L40:
 512:../Dave/Generated/src/SPI001/SPI001.c **** 	}
 513:../Dave/Generated/src/SPI001/SPI001.c ****   else
 514:../Dave/Generated/src/SPI001/SPI001.c ****   {
 515:../Dave/Generated/src/SPI001/SPI001.c ****     /* Do Nothing */
 516:../Dave/Generated/src/SPI001/SPI001.c ****   }
 517:../Dave/Generated/src/SPI001/SPI001.c ****   MTSR_PortRegs->HWSEL &= ~((uint32_t)Msk_HWSEL << (MTSRPin * 2U));
 1365              		.loc 1 517 0
 1366 00a6 BB69     		ldr	r3, [r7, #24]
 1367 00a8 5B6F     		ldr	r3, [r3, #116]
 1368 00aa 3A1C     		mov	r2, r7
 1369 00ac 0C32     		add	r2, r2, #12
 1370 00ae 1178     		ldrb	r1, [r2]
 1371 00b0 3A1C     		mov	r2, r7
 1372 00b2 1132     		add	r2, r2, #17
 1373 00b4 1278     		ldrb	r2, [r2]
 1374 00b6 5200     		lsl	r2, r2, #1
 1375 00b8 081C     		mov	r0, r1
 1376 00ba 9040     		lsl	r0, r0, r2
 1377 00bc 021C     		mov	r2, r0
 1378 00be D243     		mvn	r2, r2
 1379 00c0 1A40     		and	r2, r3
 1380 00c2 BB69     		ldr	r3, [r7, #24]
 1381 00c4 5A67     		str	r2, [r3, #116]
 518:../Dave/Generated/src/SPI001/SPI001.c ****   MRST_PortRegs->HWSEL &= ~((uint32_t)Msk_HWSEL << (MRSTPin * 2U));
 1382              		.loc 1 518 0
 1383 00c6 7B69     		ldr	r3, [r7, #20]
 1384 00c8 5B6F     		ldr	r3, [r3, #116]
 1385 00ca 3A1C     		mov	r2, r7
 1386 00cc 0C32     		add	r2, r2, #12
 1387 00ce 1178     		ldrb	r1, [r2]
 1388 00d0 3A1C     		mov	r2, r7
 1389 00d2 1032     		add	r2, r2, #16
 1390 00d4 1278     		ldrb	r2, [r2]
 1391 00d6 5200     		lsl	r2, r2, #1
 1392 00d8 081C     		mov	r0, r1
 1393 00da 9040     		lsl	r0, r0, r2
 1394 00dc 021C     		mov	r2, r0
 1395 00de D243     		mvn	r2, r2
 1396 00e0 1A40     		and	r2, r3
 1397 00e2 7B69     		ldr	r3, [r7, #20]
 1398 00e4 5A67     		str	r2, [r3, #116]
 519:../Dave/Generated/src/SPI001/SPI001.c ****   WR_REG(USICRegs->DX0CR, (uint32_t)USIC_CH_DX0CR_DSEL_Msk, \
 1399              		.loc 1 519 0
 1400 00e6 3B1C     		mov	r3, r7
 1401 00e8 1333     		add	r3, r3, #19
 1402 00ea 1A78     		ldrb	r2, [r3]
 1403 00ec 0723     		mov	r3, #7
 1404 00ee 1A40     		and	r2, r3
 1405 00f0 FB69     		ldr	r3, [r7, #28]
 1406 00f2 DB69     		ldr	r3, [r3, #28]
 1407 00f4 0721     		mov	r1, #7
 1408 00f6 8B43     		bic	r3, r1
 1409 00f8 1A43     		orr	r2, r3
 1410 00fa FB69     		ldr	r3, [r7, #28]
 1411 00fc DA61     		str	r2, [r3, #28]
 520:../Dave/Generated/src/SPI001/SPI001.c ****                          USIC_CH_DX0CR_DSEL_Pos,(uint32_t)MRSTPin_DSEL);
 521:../Dave/Generated/src/SPI001/SPI001.c ****   if(Pin0 < 4U) 
 1412              		.loc 1 521 0
 1413 00fe 3B1C     		mov	r3, r7
 1414 0100 0D33     		add	r3, r3, #13
 1415 0102 1B78     		ldrb	r3, [r3]
 1416 0104 032B     		cmp	r3, #3
 1417 0106 10D8     		bhi	.L41
 522:../Dave/Generated/src/SPI001/SPI001.c ****   {
 523:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR_PortRegs->IOCR0 |= ((uint32_t)MTSRPin_IOCR << (3U + (Pin0 * 8U)));
 1418              		.loc 1 523 0
 1419 0108 BB69     		ldr	r3, [r7, #24]
 1420 010a 1A69     		ldr	r2, [r3, #16]
 1421 010c 3B1C     		mov	r3, r7
 1422 010e 1233     		add	r3, r3, #18
 1423 0110 1978     		ldrb	r1, [r3]
 1424 0112 3B1C     		mov	r3, r7
 1425 0114 0D33     		add	r3, r3, #13
 1426 0116 1B78     		ldrb	r3, [r3]
 1427 0118 DB00     		lsl	r3, r3, #3
 1428 011a 0333     		add	r3, r3, #3
 1429 011c 081C     		mov	r0, r1
 1430 011e 9840     		lsl	r0, r0, r3
 1431 0120 031C     		mov	r3, r0
 1432 0122 1A43     		orr	r2, r3
 1433 0124 BB69     		ldr	r3, [r7, #24]
 1434 0126 1A61     		str	r2, [r3, #16]
 1435 0128 64E0     		b	.L38
 1436              	.L41:
 524:../Dave/Generated/src/SPI001/SPI001.c ****   }
 525:../Dave/Generated/src/SPI001/SPI001.c ****   else if ((Pin0 > 3U) && (Pin0 < 8U)) 
 1437              		.loc 1 525 0
 1438 012a 3B1C     		mov	r3, r7
 1439 012c 0D33     		add	r3, r3, #13
 1440 012e 1B78     		ldrb	r3, [r3]
 1441 0130 032B     		cmp	r3, #3
 1442 0132 1CD9     		bls	.L43
 1443              		.loc 1 525 0 is_stmt 0 discriminator 1
 1444 0134 3B1C     		mov	r3, r7
 1445 0136 0D33     		add	r3, r3, #13
 1446 0138 1B78     		ldrb	r3, [r3]
 1447 013a 072B     		cmp	r3, #7
 1448 013c 17D8     		bhi	.L43
 526:../Dave/Generated/src/SPI001/SPI001.c ****   {
 527:../Dave/Generated/src/SPI001/SPI001.c ****     Pin0 = Pin0 - 4U;
 1449              		.loc 1 527 0 is_stmt 1
 1450 013e 3B1C     		mov	r3, r7
 1451 0140 0D33     		add	r3, r3, #13
 1452 0142 3A1C     		mov	r2, r7
 1453 0144 0D32     		add	r2, r2, #13
 1454 0146 1278     		ldrb	r2, [r2]
 1455 0148 043A     		sub	r2, r2, #4
 1456 014a 1A70     		strb	r2, [r3]
 528:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR_PortRegs->IOCR4 |= ((uint32_t)MTSRPin_IOCR << (3U + (Pin0 * 8U)));
 1457              		.loc 1 528 0
 1458 014c BB69     		ldr	r3, [r7, #24]
 1459 014e 5A69     		ldr	r2, [r3, #20]
 1460 0150 3B1C     		mov	r3, r7
 1461 0152 1233     		add	r3, r3, #18
 1462 0154 1978     		ldrb	r1, [r3]
 1463 0156 3B1C     		mov	r3, r7
 1464 0158 0D33     		add	r3, r3, #13
 1465 015a 1B78     		ldrb	r3, [r3]
 1466 015c DB00     		lsl	r3, r3, #3
 1467 015e 0333     		add	r3, r3, #3
 1468 0160 081C     		mov	r0, r1
 1469 0162 9840     		lsl	r0, r0, r3
 1470 0164 031C     		mov	r3, r0
 1471 0166 1A43     		orr	r2, r3
 1472 0168 BB69     		ldr	r3, [r7, #24]
 1473 016a 5A61     		str	r2, [r3, #20]
 1474 016c 42E0     		b	.L38
 1475              	.L43:
 529:../Dave/Generated/src/SPI001/SPI001.c ****   } 
 530:../Dave/Generated/src/SPI001/SPI001.c ****   else if ((Pin0 > 7U) && (Pin0 < 12U)) 
 1476              		.loc 1 530 0
 1477 016e 3B1C     		mov	r3, r7
 1478 0170 0D33     		add	r3, r3, #13
 1479 0172 1B78     		ldrb	r3, [r3]
 1480 0174 072B     		cmp	r3, #7
 1481 0176 1CD9     		bls	.L44
 1482              		.loc 1 530 0 is_stmt 0 discriminator 1
 1483 0178 3B1C     		mov	r3, r7
 1484 017a 0D33     		add	r3, r3, #13
 1485 017c 1B78     		ldrb	r3, [r3]
 1486 017e 0B2B     		cmp	r3, #11
 1487 0180 17D8     		bhi	.L44
 531:../Dave/Generated/src/SPI001/SPI001.c ****   {
 532:../Dave/Generated/src/SPI001/SPI001.c ****     Pin0 = Pin0 - 8U;
 1488              		.loc 1 532 0 is_stmt 1
 1489 0182 3B1C     		mov	r3, r7
 1490 0184 0D33     		add	r3, r3, #13
 1491 0186 3A1C     		mov	r2, r7
 1492 0188 0D32     		add	r2, r2, #13
 1493 018a 1278     		ldrb	r2, [r2]
 1494 018c 083A     		sub	r2, r2, #8
 1495 018e 1A70     		strb	r2, [r3]
 533:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR_PortRegs->IOCR8 |= ((uint32_t)MTSRPin_IOCR << (3U + (Pin0 * 8U)));
 1496              		.loc 1 533 0
 1497 0190 BB69     		ldr	r3, [r7, #24]
 1498 0192 9A69     		ldr	r2, [r3, #24]
 1499 0194 3B1C     		mov	r3, r7
 1500 0196 1233     		add	r3, r3, #18
 1501 0198 1978     		ldrb	r1, [r3]
 1502 019a 3B1C     		mov	r3, r7
 1503 019c 0D33     		add	r3, r3, #13
 1504 019e 1B78     		ldrb	r3, [r3]
 1505 01a0 DB00     		lsl	r3, r3, #3
 1506 01a2 0333     		add	r3, r3, #3
 1507 01a4 081C     		mov	r0, r1
 1508 01a6 9840     		lsl	r0, r0, r3
 1509 01a8 031C     		mov	r3, r0
 1510 01aa 1A43     		orr	r2, r3
 1511 01ac BB69     		ldr	r3, [r7, #24]
 1512 01ae 9A61     		str	r2, [r3, #24]
 1513 01b0 20E0     		b	.L38
 1514              	.L44:
 534:../Dave/Generated/src/SPI001/SPI001.c ****   } 
 535:../Dave/Generated/src/SPI001/SPI001.c ****   else if ((Pin0 > 11U) && (Pin0 < 16U)) 
 1515              		.loc 1 535 0
 1516 01b2 3B1C     		mov	r3, r7
 1517 01b4 0D33     		add	r3, r3, #13
 1518 01b6 1B78     		ldrb	r3, [r3]
 1519 01b8 0B2B     		cmp	r3, #11
 1520 01ba 1BD9     		bls	.L38
 1521              		.loc 1 535 0 is_stmt 0 discriminator 1
 1522 01bc 3B1C     		mov	r3, r7
 1523 01be 0D33     		add	r3, r3, #13
 1524 01c0 1B78     		ldrb	r3, [r3]
 1525 01c2 0F2B     		cmp	r3, #15
 1526 01c4 16D8     		bhi	.L38
 536:../Dave/Generated/src/SPI001/SPI001.c ****   {
 537:../Dave/Generated/src/SPI001/SPI001.c ****     Pin0 = Pin0 - 12U;
 1527              		.loc 1 537 0 is_stmt 1
 1528 01c6 3B1C     		mov	r3, r7
 1529 01c8 0D33     		add	r3, r3, #13
 1530 01ca 3A1C     		mov	r2, r7
 1531 01cc 0D32     		add	r2, r2, #13
 1532 01ce 1278     		ldrb	r2, [r2]
 1533 01d0 0C3A     		sub	r2, r2, #12
 1534 01d2 1A70     		strb	r2, [r3]
 538:../Dave/Generated/src/SPI001/SPI001.c ****     MTSR_PortRegs->IOCR12 |= ((uint32_t)MTSRPin_IOCR << (3U + (Pin0 * 8U)));
 1535              		.loc 1 538 0
 1536 01d4 BB69     		ldr	r3, [r7, #24]
 1537 01d6 DA69     		ldr	r2, [r3, #28]
 1538 01d8 3B1C     		mov	r3, r7
 1539 01da 1233     		add	r3, r3, #18
 1540 01dc 1978     		ldrb	r1, [r3]
 1541 01de 3B1C     		mov	r3, r7
 1542 01e0 0D33     		add	r3, r3, #13
 1543 01e2 1B78     		ldrb	r3, [r3]
 1544 01e4 DB00     		lsl	r3, r3, #3
 1545 01e6 0333     		add	r3, r3, #3
 1546 01e8 081C     		mov	r0, r1
 1547 01ea 9840     		lsl	r0, r0, r3
 1548 01ec 031C     		mov	r3, r0
 1549 01ee 1A43     		orr	r2, r3
 1550 01f0 BB69     		ldr	r3, [r7, #24]
 1551 01f2 DA61     		str	r2, [r3, #28]
 1552              	.L38:
 539:../Dave/Generated/src/SPI001/SPI001.c ****   }
 540:../Dave/Generated/src/SPI001/SPI001.c ****   else 
 541:../Dave/Generated/src/SPI001/SPI001.c ****   {
 542:../Dave/Generated/src/SPI001/SPI001.c ****   	/* Do Nothing */
 543:../Dave/Generated/src/SPI001/SPI001.c ****   }
 544:../Dave/Generated/src/SPI001/SPI001.c **** }
 1553              		.loc 1 544 0
 1554 01f4 BD46     		mov	sp, r7
 1555 01f6 08B0     		add	sp, sp, #32
 1556              		@ sp needed for prologue
 1557 01f8 80BD     		pop	{r7, pc}
 1558              		.cfi_endproc
 1559              	.LFE38:
 1561 01fa C046     		.section	.text.SPI001_Init,"ax",%progbits
 1562              		.align	2
 1563              		.global	SPI001_Init
 1564              		.code	16
 1565              		.thumb_func
 1567              	SPI001_Init:
 1568              	.LFB39:
 545:../Dave/Generated/src/SPI001/SPI001.c **** /******************************************************************************
 546:../Dave/Generated/src/SPI001/SPI001.c **** **                      Public Function Definitions                          **
 547:../Dave/Generated/src/SPI001/SPI001.c **** ******************************************************************************/
 548:../Dave/Generated/src/SPI001/SPI001.c **** /* Function to initialize SPI app instances configured through UI */
 549:../Dave/Generated/src/SPI001/SPI001.c **** void SPI001_Init(void)
 550:../Dave/Generated/src/SPI001/SPI001.c **** {
 1569              		.loc 1 550 0
 1570              		.cfi_startproc
 1571 0000 80B5     		push	{r7, lr}
 1572              	.LCFI18:
 1573              		.cfi_def_cfa_offset 8
 1574              		.cfi_offset 7, -8
 1575              		.cfi_offset 14, -4
 1576 0002 00AF     		add	r7, sp, #0
 1577              	.LCFI19:
 1578              		.cfi_def_cfa_register 7
 551:../Dave/Generated/src/SPI001/SPI001.c ****   /* Disable the USIC0 clock gating */
 552:../Dave/Generated/src/SPI001/SPI001.c ****   /* 
 553:../Dave/Generated/src/SPI001/SPI001.c ****    * The disabling of the clock gating is applicable only for
 554:../Dave/Generated/src/SPI001/SPI001.c ****    * XMC4400, XMC4200 and XMC1000 devices.
 555:../Dave/Generated/src/SPI001/SPI001.c ****    */
 556:../Dave/Generated/src/SPI001/SPI001.c ****   SCU_GENERAL->PASSWD = 0x000000C0UL;
 1579              		.loc 1 556 0
 1580 0004 124B     		ldr	r3, .L47
 1581 0006 C022     		mov	r2, #192
 1582 0008 5A62     		str	r2, [r3, #36]
 557:../Dave/Generated/src/SPI001/SPI001.c ****   WR_REG(SCU_CLK->CLKCR, SCU_CLK_CLKCR_CNTADJ_Msk, \
 1583              		.loc 1 557 0
 1584 000a 124B     		ldr	r3, .L47+4
 1585 000c 114A     		ldr	r2, .L47+4
 1586 000e 1268     		ldr	r2, [r2]
 1587 0010 1149     		ldr	r1, .L47+8
 1588 0012 0A43     		orr	r2, r1
 1589 0014 1A60     		str	r2, [r3]
 558:../Dave/Generated/src/SPI001/SPI001.c ****                                     SCU_CLK_CLKCR_CNTADJ_Pos,CLK002_DELAYCNT);
 559:../Dave/Generated/src/SPI001/SPI001.c ****   SET_BIT(SCU_CLK->CGATCLR0, SCU_CLK_CGATCLR0_USIC0_Pos);
 1590              		.loc 1 559 0
 1591 0016 0F4B     		ldr	r3, .L47+4
 1592 0018 0E4A     		ldr	r2, .L47+4
 1593 001a 1269     		ldr	r2, [r2, #16]
 1594 001c 0821     		mov	r1, #8
 1595 001e 0A43     		orr	r2, r1
 1596 0020 1A61     		str	r2, [r3, #16]
 560:../Dave/Generated/src/SPI001/SPI001.c ****   while ((SCU_CLK->CLKCR)&(SCU_CLK_CLKCR_VDDC2LOW_Msk))
 1597              		.loc 1 560 0
 1598 0022 C046     		mov	r8, r8
 1599              	.L46:
 1600              		.loc 1 560 0 is_stmt 0 discriminator 1
 1601 0024 0B4B     		ldr	r3, .L47+4
 1602 0026 1A68     		ldr	r2, [r3]
 1603 0028 8023     		mov	r3, #128
 1604 002a DB05     		lsl	r3, r3, #23
 1605 002c 1340     		and	r3, r2
 1606 002e F9D1     		bne	.L46
 561:../Dave/Generated/src/SPI001/SPI001.c ****   {
 562:../Dave/Generated/src/SPI001/SPI001.c ****    ;
 563:../Dave/Generated/src/SPI001/SPI001.c ****   }
 564:../Dave/Generated/src/SPI001/SPI001.c ****   SCU_GENERAL->PASSWD = 0x000000C3UL;       
 1607              		.loc 1 564 0 is_stmt 1
 1608 0030 074B     		ldr	r3, .L47
 1609 0032 C322     		mov	r2, #195
 1610 0034 5A62     		str	r2, [r3, #36]
 565:../Dave/Generated/src/SPI001/SPI001.c ****   SPI001_lInit(&SPI001_Handle0, SPI001_Baud_Parameter_Values0);    
 1611              		.loc 1 565 0
 1612 0036 094A     		ldr	r2, .L47+12
 1613 0038 094B     		ldr	r3, .L47+16
 1614 003a 101C     		mov	r0, r2
 1615 003c 191C     		mov	r1, r3
 1616 003e FFF7FEFF 		bl	SPI001_lInit
 566:../Dave/Generated/src/SPI001/SPI001.c ****   /* Configuration of MTSR Pin 2.1 based on User configuration */    
 567:../Dave/Generated/src/SPI001/SPI001.c ****     /* Configuration of MRST Pin 0.15 based on User configuration */
 568:../Dave/Generated/src/SPI001/SPI001.c ****   PORT0->IOCR12 |= ((uint32_t)0 << 27);
 1617              		.loc 1 568 0
 1618 0042 084B     		ldr	r3, .L47+20
 1619 0044 074A     		ldr	r2, .L47+20
 1620 0046 D269     		ldr	r2, [r2, #28]
 1621 0048 DA61     		str	r2, [r3, #28]
 569:../Dave/Generated/src/SPI001/SPI001.c **** 	     	  
 570:../Dave/Generated/src/SPI001/SPI001.c ****   /* MTSR HW pin not mapped */        
 571:../Dave/Generated/src/SPI001/SPI001.c ****    /* Configuration of Clock Out Pin 2.0 based on User configuration */         
 572:../Dave/Generated/src/SPI001/SPI001.c ****   /* Configuration of ChipSelectA Pin 0.12 based on User configuration */                
 573:../Dave/Generated/src/SPI001/SPI001.c **** }
 1622              		.loc 1 573 0
 1623 004a BD46     		mov	sp, r7
 1624              		@ sp needed for prologue
 1625 004c 80BD     		pop	{r7, pc}
 1626              	.L48:
 1627 004e C046     		.align	2
 1628              	.L47:
 1629 0050 00000140 		.word	1073807360
 1630 0054 00030140 		.word	1073808128
 1631 0058 0000F03F 		.word	1072693248
 1632 005c 00000000 		.word	SPI001_Handle0
 1633 0060 00000000 		.word	SPI001_Baud_Parameter_Values0
 1634 0064 00000440 		.word	1074003968
 1635              		.cfi_endproc
 1636              	.LFE39:
 1638              		.section	.text.SPI001_DeInit,"ax",%progbits
 1639              		.align	2
 1640              		.global	SPI001_DeInit
 1641              		.code	16
 1642              		.thumb_func
 1644              	SPI001_DeInit:
 1645              	.LFB40:
 574:../Dave/Generated/src/SPI001/SPI001.c **** 
 575:../Dave/Generated/src/SPI001/SPI001.c ****  /* Function provide to reset the App to default values. */
 576:../Dave/Generated/src/SPI001/SPI001.c ****  
 577:../Dave/Generated/src/SPI001/SPI001.c **** void  SPI001_DeInit (const SPI001_HandleType* Handle)
 578:../Dave/Generated/src/SPI001/SPI001.c **** {
 1646              		.loc 1 578 0
 1647              		.cfi_startproc
 1648 0000 80B5     		push	{r7, lr}
 1649              	.LCFI20:
 1650              		.cfi_def_cfa_offset 8
 1651              		.cfi_offset 7, -8
 1652              		.cfi_offset 14, -4
 1653 0002 82B0     		sub	sp, sp, #8
 1654              	.LCFI21:
 1655              		.cfi_def_cfa_offset 16
 1656 0004 00AF     		add	r7, sp, #0
 1657              	.LCFI22:
 1658              		.cfi_def_cfa_register 7
 1659 0006 7860     		str	r0, [r7, #4]
 579:../Dave/Generated/src/SPI001/SPI001.c ****   /* <<<DD_SPI_API_2>>>*/
 580:../Dave/Generated/src/SPI001/SPI001.c **** 
 581:../Dave/Generated/src/SPI001/SPI001.c ****   /* Place holder function */      
 582:../Dave/Generated/src/SPI001/SPI001.c **** 
 583:../Dave/Generated/src/SPI001/SPI001.c **** }
 1660              		.loc 1 583 0
 1661 0008 BD46     		mov	sp, r7
 1662 000a 02B0     		add	sp, sp, #8
 1663              		@ sp needed for prologue
 1664 000c 80BD     		pop	{r7, pc}
 1665              		.cfi_endproc
 1666              	.LFE40:
 1668 000e C046     		.section	.text.SPI001_Configure,"ax",%progbits
 1669              		.align	2
 1670              		.global	SPI001_Configure
 1671              		.code	16
 1672              		.thumb_func
 1674              	SPI001_Configure:
 1675              	.LFB41:
 584:../Dave/Generated/src/SPI001/SPI001.c **** 
 585:../Dave/Generated/src/SPI001/SPI001.c **** /* Function which allows to reconfigure .*/
 586:../Dave/Generated/src/SPI001/SPI001.c **** status_t SPI001_Configure
 587:../Dave/Generated/src/SPI001/SPI001.c **** ( 
 588:../Dave/Generated/src/SPI001/SPI001.c ****  const SPI001_HandleType* Handle, 
 589:../Dave/Generated/src/SPI001/SPI001.c ****  const SPI001_ConfigType* Config
 590:../Dave/Generated/src/SPI001/SPI001.c **** )
 591:../Dave/Generated/src/SPI001/SPI001.c **** {
 1676              		.loc 1 591 0
 1677              		.cfi_startproc
 1678 0000 90B5     		push	{r4, r7, lr}
 1679              	.LCFI23:
 1680              		.cfi_def_cfa_offset 12
 1681              		.cfi_offset 4, -12
 1682              		.cfi_offset 7, -8
 1683              		.cfi_offset 14, -4
 1684 0002 8BB0     		sub	sp, sp, #44
 1685              	.LCFI24:
 1686              		.cfi_def_cfa_offset 56
 1687 0004 00AF     		add	r7, sp, #0
 1688              	.LCFI25:
 1689              		.cfi_def_cfa_register 7
 1690 0006 7860     		str	r0, [r7, #4]
 1691 0008 3960     		str	r1, [r7]
 592:../Dave/Generated/src/SPI001/SPI001.c **** 	
 593:../Dave/Generated/src/SPI001/SPI001.c **** 	uint32_t Brg_PDiv = 0x00U;
 1692              		.loc 1 593 0
 1693 000a 0023     		mov	r3, #0
 1694 000c 3B61     		str	r3, [r7, #16]
 594:../Dave/Generated/src/SPI001/SPI001.c **** 	uint32_t Fdr_Step = 0x00U;
 1695              		.loc 1 594 0
 1696 000e 0023     		mov	r3, #0
 1697 0010 FB60     		str	r3, [r7, #12]
 595:../Dave/Generated/src/SPI001/SPI001.c **** 	USIC_CH_TypeDef* USICRegs = Handle->USICRegs;
 1698              		.loc 1 595 0
 1699 0012 7B68     		ldr	r3, [r7, #4]
 1700 0014 1B68     		ldr	r3, [r3]
 1701 0016 3B62     		str	r3, [r7, #32]
 596:../Dave/Generated/src/SPI001/SPI001.c **** 	SPI001_PORTS_TypeDef* MTSR_PortRegs = Handle->PinHandle->PinPortRegs[0];
 1702              		.loc 1 596 0
 1703 0018 7B68     		ldr	r3, [r7, #4]
 1704 001a DB69     		ldr	r3, [r3, #28]
 1705 001c 9B68     		ldr	r3, [r3, #8]
 1706 001e FB61     		str	r3, [r7, #28]
 597:../Dave/Generated/src/SPI001/SPI001.c **** 	SPI001_PORTS_TypeDef* MRST_PortRegs = Handle->PinHandle->PinPortRegs[1];
 1707              		.loc 1 597 0
 1708 0020 7B68     		ldr	r3, [r7, #4]
 1709 0022 DB69     		ldr	r3, [r3, #28]
 1710 0024 DB68     		ldr	r3, [r3, #12]
 1711 0026 BB61     		str	r3, [r7, #24]
 598:../Dave/Generated/src/SPI001/SPI001.c **** 	uint8_t MTSRPin = Handle->PinHandle->Pin_Num[0];
 1712              		.loc 1 598 0
 1713 0028 7B68     		ldr	r3, [r7, #4]
 1714 002a DA69     		ldr	r2, [r3, #28]
 1715 002c 3B1C     		mov	r3, r7
 1716 002e 1733     		add	r3, r3, #23
 1717 0030 1279     		ldrb	r2, [r2, #4]
 1718 0032 1A70     		strb	r2, [r3]
 599:../Dave/Generated/src/SPI001/SPI001.c **** 	uint8_t MRSTPin = Handle->PinHandle->Pin_Num[1];
 1719              		.loc 1 599 0
 1720 0034 7B68     		ldr	r3, [r7, #4]
 1721 0036 DA69     		ldr	r2, [r3, #28]
 1722 0038 3B1C     		mov	r3, r7
 1723 003a 1633     		add	r3, r3, #22
 1724 003c 5279     		ldrb	r2, [r2, #5]
 1725 003e 1A70     		strb	r2, [r3]
 600:../Dave/Generated/src/SPI001/SPI001.c **** 	status_t Status = (status_t)SPI001_ERROR;
 1726              		.loc 1 600 0
 1727 0040 0423     		mov	r3, #4
 1728 0042 7B62     		str	r3, [r7, #36]
 601:../Dave/Generated/src/SPI001/SPI001.c ****   do
 602:../Dave/Generated/src/SPI001/SPI001.c ****   {
 603:../Dave/Generated/src/SPI001/SPI001.c ****    if((Config->Mode > SPI001_QUAD) || (Config->HBMode > SPI001_MSB) || \
 1729              		.loc 1 603 0
 1730 0044 3B68     		ldr	r3, [r7]
 1731 0046 1B78     		ldrb	r3, [r3]
 1732 0048 032B     		cmp	r3, #3
 1733 004a 1FD8     		bhi	.L51
 1734              		.loc 1 603 0 is_stmt 0 discriminator 1
 1735 004c 3B68     		ldr	r3, [r7]
 1736 004e 5B78     		ldrb	r3, [r3, #1]
 1737 0050 012B     		cmp	r3, #1
 1738 0052 1BD8     		bhi	.L51
 604:../Dave/Generated/src/SPI001/SPI001.c ****       (Config->ClkPol > (SPI001_ClkPolType)SPI001_CLK_POL1) || \
 1739              		.loc 1 604 0 is_stmt 1 discriminator 1
 1740 0054 3B68     		ldr	r3, [r7]
 1741 0056 9B78     		ldrb	r3, [r3, #2]
 603:../Dave/Generated/src/SPI001/SPI001.c ****    if((Config->Mode > SPI001_QUAD) || (Config->HBMode > SPI001_MSB) || \
 1742              		.loc 1 603 0 discriminator 1
 1743 0058 012B     		cmp	r3, #1
 1744 005a 17D8     		bhi	.L51
 605:../Dave/Generated/src/SPI001/SPI001.c ****       (Config->ClkPh > (SPI001_ClkPhType)SPI001_CLK_PHASE1) || \
 1745              		.loc 1 605 0
 1746 005c 3B68     		ldr	r3, [r7]
 1747 005e DB78     		ldrb	r3, [r3, #3]
 604:../Dave/Generated/src/SPI001/SPI001.c ****       (Config->ClkPol > (SPI001_ClkPolType)SPI001_CLK_POL1) || \
 1748              		.loc 1 604 0
 1749 0060 012B     		cmp	r3, #1
 1750 0062 13D8     		bhi	.L51
 606:../Dave/Generated/src/SPI001/SPI001.c ****       (Config->LeadTrailDelay > (SPI001_DelayType)SPI001_THREE_SCLK_PERIOD) ||\
 1751              		.loc 1 606 0
 1752 0064 3B68     		ldr	r3, [r7]
 1753 0066 1B7A     		ldrb	r3, [r3, #8]
 605:../Dave/Generated/src/SPI001/SPI001.c ****       (Config->ClkPh > (SPI001_ClkPhType)SPI001_CLK_PHASE1) || \
 1754              		.loc 1 605 0
 1755 0068 022B     		cmp	r3, #2
 1756 006a 0FD8     		bhi	.L51
 607:../Dave/Generated/src/SPI001/SPI001.c ****       (Config->NextFrameDelay > (SPI001_DelayType)SPI001_THREE_SCLK_PERIOD) ||\
 1757              		.loc 1 607 0
 1758 006c 3B68     		ldr	r3, [r7]
 1759 006e 5B7A     		ldrb	r3, [r3, #9]
 606:../Dave/Generated/src/SPI001/SPI001.c ****       (Config->LeadTrailDelay > (SPI001_DelayType)SPI001_THREE_SCLK_PERIOD) ||\
 1760              		.loc 1 606 0
 1761 0070 022B     		cmp	r3, #2
 1762 0072 0BD8     		bhi	.L51
 608:../Dave/Generated/src/SPI001/SPI001.c ****       (Config->WordLen > (uint8_t)16) ||(Config->FrameLen >(uint8_t)64) || \
 1763              		.loc 1 608 0
 1764 0074 3B68     		ldr	r3, [r7]
 1765 0076 9B7A     		ldrb	r3, [r3, #10]
 607:../Dave/Generated/src/SPI001/SPI001.c ****       (Config->NextFrameDelay > (SPI001_DelayType)SPI001_THREE_SCLK_PERIOD) ||\
 1766              		.loc 1 607 0
 1767 0078 102B     		cmp	r3, #16
 1768 007a 07D8     		bhi	.L51
 1769              		.loc 1 608 0
 1770 007c 3B68     		ldr	r3, [r7]
 1771 007e DB7A     		ldrb	r3, [r3, #11]
 1772 0080 402B     		cmp	r3, #64
 1773 0082 03D8     		bhi	.L51
 609:../Dave/Generated/src/SPI001/SPI001.c ****       (Handle->NoOfCS > (uint32_t)7))                            
 1774              		.loc 1 609 0 discriminator 1
 1775 0084 7B68     		ldr	r3, [r7, #4]
 1776 0086 1B7D     		ldrb	r3, [r3, #20]
 608:../Dave/Generated/src/SPI001/SPI001.c ****       (Config->WordLen > (uint8_t)16) ||(Config->FrameLen >(uint8_t)64) || \
 1777              		.loc 1 608 0 discriminator 1
 1778 0088 072B     		cmp	r3, #7
 1779 008a 02D9     		bls	.L52
 1780              	.L51:
 610:../Dave/Generated/src/SPI001/SPI001.c ****    {                                                                   
 611:../Dave/Generated/src/SPI001/SPI001.c ****       Status = (status_t) SPI001_INVALID_PARAM;                          
 1781              		.loc 1 611 0
 1782 008c 0323     		mov	r3, #3
 1783 008e 7B62     		str	r3, [r7, #36]
 612:../Dave/Generated/src/SPI001/SPI001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Status), &Status);                    
 613:../Dave/Generated/src/SPI001/SPI001.c ****       break;
 1784              		.loc 1 613 0
 1785 0090 E7E1     		b	.L53
 1786              	.L52:
 614:../Dave/Generated/src/SPI001/SPI001.c ****    }                                                                   
 615:../Dave/Generated/src/SPI001/SPI001.c ****                                                                          
 616:../Dave/Generated/src/SPI001/SPI001.c ****    /* <<<DD_SPI_API_3>>>*/                                             
 617:../Dave/Generated/src/SPI001/SPI001.c **** 
 618:../Dave/Generated/src/SPI001/SPI001.c ****    /* Disable SPI mode before configuring all USIC registers to avoid unintended edges */ 
 619:../Dave/Generated/src/SPI001/SPI001.c ****    USICRegs->CCR &= ~( ((uint32_t)(USIC_SPI_MODE  & USIC_CH_CCR_MODE_Msk)));
 1787              		.loc 1 619 0
 1788 0092 3B6A     		ldr	r3, [r7, #32]
 1789 0094 1B6C     		ldr	r3, [r3, #64]
 1790 0096 0122     		mov	r2, #1
 1791 0098 181C     		mov	r0, r3
 1792 009a 9043     		bic	r0, r2
 1793 009c 021C     		mov	r2, r0
 1794 009e 3B6A     		ldr	r3, [r7, #32]
 1795 00a0 1A64     		str	r2, [r3, #64]
 620:../Dave/Generated/src/SPI001/SPI001.c ****    
 621:../Dave/Generated/src/SPI001/SPI001.c ****    /* Get the optimum PDIV and STEP value for the given baudrate */    
 622:../Dave/Generated/src/SPI001/SPI001.c ****    SPI001_lConfigureBaudRate(Config->BaudRate,&Brg_PDiv,&Fdr_Step);    
 1796              		.loc 1 622 0
 1797 00a2 3B68     		ldr	r3, [r7]
 1798 00a4 5968     		ldr	r1, [r3, #4]
 1799 00a6 3A1C     		mov	r2, r7
 1800 00a8 1032     		add	r2, r2, #16
 1801 00aa 3B1C     		mov	r3, r7
 1802 00ac 0C33     		add	r3, r3, #12
 1803 00ae 081C     		mov	r0, r1
 1804 00b0 111C     		mov	r1, r2
 1805 00b2 1A1C     		mov	r2, r3
 1806 00b4 FFF7FEFF 		bl	SPI001_lConfigureBaudRate
 623:../Dave/Generated/src/SPI001/SPI001.c ****                                                                         
 624:../Dave/Generated/src/SPI001/SPI001.c ****    /* Configuration of USIC Channel Fractional Divider */                                          
 625:../Dave/Generated/src/SPI001/SPI001.c ****    /* Step value */                                                    
 626:../Dave/Generated/src/SPI001/SPI001.c ****    USICRegs->FDR |= (Fdr_Step & USIC_CH_FDR_STEP_Msk);                
 1807              		.loc 1 626 0
 1808 00b8 3B6A     		ldr	r3, [r7, #32]
 1809 00ba 1A69     		ldr	r2, [r3, #16]
 1810 00bc FB68     		ldr	r3, [r7, #12]
 1811 00be 9B05     		lsl	r3, r3, #22
 1812 00c0 9B0D     		lsr	r3, r3, #22
 1813 00c2 1A43     		orr	r2, r3
 1814 00c4 3B6A     		ldr	r3, [r7, #32]
 1815 00c6 1A61     		str	r2, [r3, #16]
 627:../Dave/Generated/src/SPI001/SPI001.c **** 
 628:../Dave/Generated/src/SPI001/SPI001.c ****    /* PCTQ value is zero */                                                                        
 629:../Dave/Generated/src/SPI001/SPI001.c ****    USICRegs->BRG = ((((uint32_t)Config->LeadTrailDelay << \
 1816              		.loc 1 629 0
 1817 00c8 3B68     		ldr	r3, [r7]
 1818 00ca 1B7A     		ldrb	r3, [r3, #8]
 1819 00cc 9A02     		lsl	r2, r3, #10
 630:../Dave/Generated/src/SPI001/SPI001.c ****                        USIC_CH_BRG_DCTQ_Pos) & USIC_CH_BRG_DCTQ_Msk) | \
 1820              		.loc 1 630 0
 1821 00ce F823     		mov	r3, #248
 1822 00d0 DB01     		lsl	r3, r3, #7
 1823 00d2 1A40     		and	r2, r3
 631:../Dave/Generated/src/SPI001/SPI001.c ****                       (((uint32_t)Brg_PDiv  << USIC_CH_BRG_PDIV_Pos) &  \
 1824              		.loc 1 631 0
 1825 00d4 3B69     		ldr	r3, [r7, #16]
 1826 00d6 1904     		lsl	r1, r3, #16
 1827 00d8 E44B     		ldr	r3, .L62
 1828 00da 0B40     		and	r3, r1
 630:../Dave/Generated/src/SPI001/SPI001.c ****                        USIC_CH_BRG_DCTQ_Pos) & USIC_CH_BRG_DCTQ_Msk) | \
 1829              		.loc 1 630 0
 1830 00dc 1A43     		orr	r2, r3
 632:../Dave/Generated/src/SPI001/SPI001.c ****                                                 USIC_CH_BRG_PDIV_Msk) | \
 633:../Dave/Generated/src/SPI001/SPI001.c ****                       (((uint32_t)0x02  << USIC_CH_BRG_CTQSEL_Pos) &  \
 634:../Dave/Generated/src/SPI001/SPI001.c ****                                           USIC_CH_BRG_CTQSEL_Msk) | \
 635:../Dave/Generated/src/SPI001/SPI001.c ****                       (((uint32_t)(((uint32_t)Config->ClkPol) |  \
 1831              		.loc 1 635 0
 1832 00de 3B68     		ldr	r3, [r7]
 1833 00e0 9B78     		ldrb	r3, [r3, #2]
 1834 00e2 191C     		mov	r1, r3
 636:../Dave/Generated/src/SPI001/SPI001.c ****                        ((uint32_t)Config->ClkPh << (uint32_t)0x01)) << \
 1835              		.loc 1 636 0
 1836 00e4 3B68     		ldr	r3, [r7]
 1837 00e6 DB78     		ldrb	r3, [r3, #3]
 1838 00e8 5B00     		lsl	r3, r3, #1
 635:../Dave/Generated/src/SPI001/SPI001.c ****                       (((uint32_t)(((uint32_t)Config->ClkPol) |  \
 1839              		.loc 1 635 0
 1840 00ea 0B43     		orr	r3, r1
 637:../Dave/Generated/src/SPI001/SPI001.c ****                        USIC_CH_BRG_SCLKCFG_Pos) & USIC_CH_BRG_SCLKCFG_Msk));   
 1841              		.loc 1 637 0
 1842 00ec 9B07     		lsl	r3, r3, #30
 634:../Dave/Generated/src/SPI001/SPI001.c ****                                           USIC_CH_BRG_CTQSEL_Msk) | \
 1843              		.loc 1 634 0
 1844 00ee 1343     		orr	r3, r2
 1845 00f0 8022     		mov	r2, #128
 1846 00f2 1A43     		orr	r2, r3
 629:../Dave/Generated/src/SPI001/SPI001.c ****    USICRegs->BRG = ((((uint32_t)Config->LeadTrailDelay << \
 1847              		.loc 1 629 0
 1848 00f4 3B6A     		ldr	r3, [r7, #32]
 1849 00f6 5A61     		str	r2, [r3, #20]
 638:../Dave/Generated/src/SPI001/SPI001.c ****                                                                          
 639:../Dave/Generated/src/SPI001/SPI001.c ****    /* Configuration of USIC Shift Control */                             
 640:../Dave/Generated/src/SPI001/SPI001.c ****    USICRegs->SCTR &= \
 1850              		.loc 1 640 0
 1851 00f8 3B6A     		ldr	r3, [r7, #32]
 1852 00fa 5A6B     		ldr	r2, [r3, #52]
 1853 00fc DC4B     		ldr	r3, .L62+4
 1854 00fe 1A40     		and	r2, r3
 1855 0100 3B6A     		ldr	r3, [r7, #32]
 1856 0102 5A63     		str	r2, [r3, #52]
 641:../Dave/Generated/src/SPI001/SPI001.c ****                   (~(uint32_t)(USIC_CH_SCTR_SDIR_Msk | USIC_CH_SCTR_FLE_Msk | \
 642:../Dave/Generated/src/SPI001/SPI001.c ****                      USIC_CH_SCTR_WLE_Msk | USIC_CH_SCTR_HPCDIR_Msk | \
 643:../Dave/Generated/src/SPI001/SPI001.c ****                      USIC_CH_SCTR_DSM_Msk));                          
 644:../Dave/Generated/src/SPI001/SPI001.c ****    USICRegs->SCTR |= \
 1857              		.loc 1 644 0
 1858 0104 3B6A     		ldr	r3, [r7, #32]
 1859 0106 5A6B     		ldr	r2, [r3, #52]
 645:../Dave/Generated/src/SPI001/SPI001.c ****                       ((((uint32_t)Config->HBMode & USIC_CH_SCTR_SDIR_Msk)) | \
 1860              		.loc 1 645 0
 1861 0108 3B68     		ldr	r3, [r7]
 1862 010a 5B78     		ldrb	r3, [r3, #1]
 1863 010c 191C     		mov	r1, r3
 1864 010e 0123     		mov	r3, #1
 1865 0110 1940     		and	r1, r3
 646:../Dave/Generated/src/SPI001/SPI001.c ****                       (((uint32_t)((uint32_t)Config->FrameLen - (uint32_t) 1)\
 1866              		.loc 1 646 0
 1867 0112 3B68     		ldr	r3, [r7]
 1868 0114 DB7A     		ldrb	r3, [r3, #11]
 1869 0116 013B     		sub	r3, r3, #1
 647:../Dave/Generated/src/SPI001/SPI001.c ****                          << USIC_CH_SCTR_FLE_Pos) & USIC_CH_SCTR_FLE_Msk ) | \
 1870              		.loc 1 647 0
 1871 0118 1804     		lsl	r0, r3, #16
 1872 011a FC23     		mov	r3, #252
 1873 011c 9B03     		lsl	r3, r3, #14
 1874 011e 0340     		and	r3, r0
 645:../Dave/Generated/src/SPI001/SPI001.c ****                       ((((uint32_t)Config->HBMode & USIC_CH_SCTR_SDIR_Msk)) | \
 1875              		.loc 1 645 0
 1876 0120 1943     		orr	r1, r3
 648:../Dave/Generated/src/SPI001/SPI001.c ****                         (((uint32_t)((uint32_t)Config->WordLen - (uint32_t)1)\
 1877              		.loc 1 648 0
 1878 0122 3B68     		ldr	r3, [r7]
 1879 0124 9B7A     		ldrb	r3, [r3, #10]
 1880 0126 013B     		sub	r3, r3, #1
 649:../Dave/Generated/src/SPI001/SPI001.c ****                           << USIC_CH_SCTR_WLE_Pos) & USIC_CH_SCTR_WLE_Msk)); 
 1881              		.loc 1 649 0
 1882 0128 1806     		lsl	r0, r3, #24
 1883 012a F023     		mov	r3, #240
 1884 012c 1B05     		lsl	r3, r3, #20
 1885 012e 0340     		and	r3, r0
 647:../Dave/Generated/src/SPI001/SPI001.c ****                          << USIC_CH_SCTR_FLE_Pos) & USIC_CH_SCTR_FLE_Msk ) | \
 1886              		.loc 1 647 0
 1887 0130 0B43     		orr	r3, r1
 644:../Dave/Generated/src/SPI001/SPI001.c ****    USICRegs->SCTR |= \
 1888              		.loc 1 644 0
 1889 0132 1A43     		orr	r2, r3
 1890 0134 3B6A     		ldr	r3, [r7, #32]
 1891 0136 5A63     		str	r2, [r3, #52]
 650:../Dave/Generated/src/SPI001/SPI001.c ****    switch((uint8_t)Config->Mode)                                        
 1892              		.loc 1 650 0
 1893 0138 3B68     		ldr	r3, [r7]
 1894 013a 1B78     		ldrb	r3, [r3]
 1895 013c 012B     		cmp	r3, #1
 1896 013e 37D0     		beq	.L56
 1897 0140 02DC     		bgt	.L59
 1898 0142 002B     		cmp	r3, #0
 1899 0144 07D0     		beq	.L55
 1900 0146 61E1     		b	.L54
 1901              	.L59:
 1902 0148 022B     		cmp	r3, #2
 1903 014a 00D1     		bne	.LCB1659
 1904 014c 84E0     		b	.L57	@long jump
 1905              	.LCB1659:
 1906 014e 032B     		cmp	r3, #3
 1907 0150 00D1     		bne	.LCB1661
 1908 0152 E8E0     		b	.L58	@long jump
 1909              	.LCB1661:
 1910 0154 5AE1     		b	.L54
 1911              	.L55:
 651:../Dave/Generated/src/SPI001/SPI001.c ****    {                                                                    
 652:../Dave/Generated/src/SPI001/SPI001.c ****      case SPI001_STANDARD_FULLDUPLEX:                                   
 653:../Dave/Generated/src/SPI001/SPI001.c ****        USICRegs->CCR &= (((uint32_t)~USIC_CH_CCR_HPCEN_Msk));           
 1912              		.loc 1 653 0
 1913 0156 3B6A     		ldr	r3, [r7, #32]
 1914 0158 1B6C     		ldr	r3, [r3, #64]
 1915 015a C022     		mov	r2, #192
 1916 015c 191C     		mov	r1, r3
 1917 015e 9143     		bic	r1, r2
 1918 0160 0A1C     		mov	r2, r1
 1919 0162 3B6A     		ldr	r3, [r7, #32]
 1920 0164 1A64     		str	r2, [r3, #64]
 654:../Dave/Generated/src/SPI001/SPI001.c ****        USICRegs->TCSR &= ((uint32_t)~(USIC_CH_TCSR_HPCMD_Msk));         
 1921              		.loc 1 654 0
 1922 0166 3B6A     		ldr	r3, [r7, #32]
 1923 0168 9B6B     		ldr	r3, [r3, #56]
 1924 016a 1022     		mov	r2, #16
 1925 016c 1C1C     		mov	r4, r3
 1926 016e 9443     		bic	r4, r2
 1927 0170 221C     		mov	r2, r4
 1928 0172 3B6A     		ldr	r3, [r7, #32]
 1929 0174 9A63     		str	r2, [r3, #56]
 655:../Dave/Generated/src/SPI001/SPI001.c ****        /* Clear the Input stages */                                     
 656:../Dave/Generated/src/SPI001/SPI001.c ****        USICRegs->DX3CR &= (~(uint32_t)(USIC_CH_DX3CR_INSW_Msk | \
 1930              		.loc 1 656 0
 1931 0176 3B6A     		ldr	r3, [r7, #32]
 1932 0178 9B6A     		ldr	r3, [r3, #40]
 1933 017a 1722     		mov	r2, #23
 1934 017c 181C     		mov	r0, r3
 1935 017e 9043     		bic	r0, r2
 1936 0180 021C     		mov	r2, r0
 1937 0182 3B6A     		ldr	r3, [r7, #32]
 1938 0184 9A62     		str	r2, [r3, #40]
 657:../Dave/Generated/src/SPI001/SPI001.c ****                                              USIC_CH_DX3CR_DSEL_Msk )); 
 658:../Dave/Generated/src/SPI001/SPI001.c ****        USICRegs->DX4CR &= (~(uint32_t)(USIC_CH_DX4CR_INSW_Msk | \
 1939              		.loc 1 658 0
 1940 0186 3B6A     		ldr	r3, [r7, #32]
 1941 0188 DB6A     		ldr	r3, [r3, #44]
 1942 018a 1722     		mov	r2, #23
 1943 018c 191C     		mov	r1, r3
 1944 018e 9143     		bic	r1, r2
 1945 0190 0A1C     		mov	r2, r1
 1946 0192 3B6A     		ldr	r3, [r7, #32]
 1947 0194 DA62     		str	r2, [r3, #44]
 659:../Dave/Generated/src/SPI001/SPI001.c ****                                              USIC_CH_DX4CR_DSEL_Msk )); 
 660:../Dave/Generated/src/SPI001/SPI001.c ****        USICRegs->DX5CR &= (~(uint32_t)(USIC_CH_DX5CR_INSW_Msk | \
 1948              		.loc 1 660 0
 1949 0196 3B6A     		ldr	r3, [r7, #32]
 1950 0198 1B6B     		ldr	r3, [r3, #48]
 1951 019a 1722     		mov	r2, #23
 1952 019c 1C1C     		mov	r4, r3
 1953 019e 9443     		bic	r4, r2
 1954 01a0 221C     		mov	r2, r4
 1955 01a2 3B6A     		ldr	r3, [r7, #32]
 1956 01a4 1A63     		str	r2, [r3, #48]
 661:../Dave/Generated/src/SPI001/SPI001.c ****                                               USIC_CH_DX5CR_DSEL_Msk )); 
 662:../Dave/Generated/src/SPI001/SPI001.c ****        SPI001_lPinModfn_Fullduplex(Handle);
 1957              		.loc 1 662 0
 1958 01a6 7B68     		ldr	r3, [r7, #4]
 1959 01a8 181C     		mov	r0, r3
 1960 01aa FFF7FEFF 		bl	SPI001_lPinModfn_Fullduplex
 663:../Dave/Generated/src/SPI001/SPI001.c **** 
 664:../Dave/Generated/src/SPI001/SPI001.c ****      break;                                                           
 1961              		.loc 1 664 0
 1962 01ae 2EE1     		b	.L60
 1963              	.L56:
 665:../Dave/Generated/src/SPI001/SPI001.c ****      case SPI001_STANDARD_HALFDUPLEX:                                   
 666:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->CCR &= (~(USIC_CH_CCR_HPCEN_Msk));                      
 1964              		.loc 1 666 0
 1965 01b0 3B6A     		ldr	r3, [r7, #32]
 1966 01b2 1B6C     		ldr	r3, [r3, #64]
 1967 01b4 C022     		mov	r2, #192
 1968 01b6 181C     		mov	r0, r3
 1969 01b8 9043     		bic	r0, r2
 1970 01ba 021C     		mov	r2, r0
 1971 01bc 3B6A     		ldr	r3, [r7, #32]
 1972 01be 1A64     		str	r2, [r3, #64]
 667:../Dave/Generated/src/SPI001/SPI001.c ****         /* Enable hardware port control */                               
 668:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->CCR |= ((((uint32_t)0x01 << USIC_CH_CCR_HPCEN_Pos) & \
 1973              		.loc 1 668 0
 1974 01c0 3B6A     		ldr	r3, [r7, #32]
 1975 01c2 1B6C     		ldr	r3, [r3, #64]
 1976 01c4 4022     		mov	r2, #64
 1977 01c6 1A43     		orr	r2, r3
 1978 01c8 3B6A     		ldr	r3, [r7, #32]
 1979 01ca 1A64     		str	r2, [r3, #64]
 669:../Dave/Generated/src/SPI001/SPI001.c ****                                                        USIC_CH_CCR_HPCEN_Msk));
 670:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->TCSR &= (~(USIC_CH_TCSR_HPCMD_Msk));                    
 1980              		.loc 1 670 0
 1981 01cc 3B6A     		ldr	r3, [r7, #32]
 1982 01ce 9B6B     		ldr	r3, [r3, #56]
 1983 01d0 1022     		mov	r2, #16
 1984 01d2 191C     		mov	r1, r3
 1985 01d4 9143     		bic	r1, r2
 1986 01d6 0A1C     		mov	r2, r1
 1987 01d8 3B6A     		ldr	r3, [r7, #32]
 1988 01da 9A63     		str	r2, [r3, #56]
 671:../Dave/Generated/src/SPI001/SPI001.c ****         /* Enable automatic update of SCTR.HPCDIR & SCTR.DSM bit fields */
 672:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->TCSR |= (((uint32_t)0x01 << USIC_CH_TCSR_HPCMD_Pos) & \
 1989              		.loc 1 672 0
 1990 01dc 3B6A     		ldr	r3, [r7, #32]
 1991 01de 9B6B     		ldr	r3, [r3, #56]
 1992 01e0 1022     		mov	r2, #16
 1993 01e2 1A43     		orr	r2, r3
 1994 01e4 3B6A     		ldr	r3, [r7, #32]
 1995 01e6 9A63     		str	r2, [r3, #56]
 673:../Dave/Generated/src/SPI001/SPI001.c ****                                                        USIC_CH_TCSR_HPCMD_Msk);
 674:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX0CR &= (~(uint32_t)(USIC_CH_DX0CR_INSW_Msk | \
 1996              		.loc 1 674 0
 1997 01e8 3B6A     		ldr	r3, [r7, #32]
 1998 01ea DB69     		ldr	r3, [r3, #28]
 1999 01ec 1722     		mov	r2, #23
 2000 01ee 1C1C     		mov	r4, r3
 2001 01f0 9443     		bic	r4, r2
 2002 01f2 221C     		mov	r2, r4
 2003 01f4 3B6A     		ldr	r3, [r7, #32]
 2004 01f6 DA61     		str	r2, [r3, #28]
 675:../Dave/Generated/src/SPI001/SPI001.c ****                                               USIC_CH_DX0CR_DSEL_Msk )); 
 676:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX3CR &= (~(uint32_t)(USIC_CH_DX3CR_INSW_Msk | \
 2005              		.loc 1 676 0
 2006 01f8 3B6A     		ldr	r3, [r7, #32]
 2007 01fa 9B6A     		ldr	r3, [r3, #40]
 2008 01fc 1722     		mov	r2, #23
 2009 01fe 181C     		mov	r0, r3
 2010 0200 9043     		bic	r0, r2
 2011 0202 021C     		mov	r2, r0
 2012 0204 3B6A     		ldr	r3, [r7, #32]
 2013 0206 9A62     		str	r2, [r3, #40]
 677:../Dave/Generated/src/SPI001/SPI001.c ****                                               USIC_CH_DX3CR_DSEL_Msk )); 
 678:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX4CR &= (~(uint32_t)(USIC_CH_DX4CR_INSW_Msk | \
 2014              		.loc 1 678 0
 2015 0208 3B6A     		ldr	r3, [r7, #32]
 2016 020a DB6A     		ldr	r3, [r3, #44]
 2017 020c 1722     		mov	r2, #23
 2018 020e 191C     		mov	r1, r3
 2019 0210 9143     		bic	r1, r2
 2020 0212 0A1C     		mov	r2, r1
 2021 0214 3B6A     		ldr	r3, [r7, #32]
 2022 0216 DA62     		str	r2, [r3, #44]
 679:../Dave/Generated/src/SPI001/SPI001.c ****                                               USIC_CH_DX4CR_DSEL_Msk )); 
 680:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX5CR &= (~(uint32_t)(USIC_CH_DX5CR_INSW_Msk | \
 2023              		.loc 1 680 0
 2024 0218 3B6A     		ldr	r3, [r7, #32]
 2025 021a 1B6B     		ldr	r3, [r3, #48]
 2026 021c 1722     		mov	r2, #23
 2027 021e 1C1C     		mov	r4, r3
 2028 0220 9443     		bic	r4, r2
 2029 0222 221C     		mov	r2, r4
 2030 0224 3B6A     		ldr	r3, [r7, #32]
 2031 0226 1A63     		str	r2, [r3, #48]
 681:../Dave/Generated/src/SPI001/SPI001.c ****                                               USIC_CH_DX5CR_DSEL_Msk )); 
 682:../Dave/Generated/src/SPI001/SPI001.c ****                                                                          
 683:../Dave/Generated/src/SPI001/SPI001.c ****         SPI001_lClearPortRegs(Handle);                                            
 2032              		.loc 1 683 0
 2033 0228 7B68     		ldr	r3, [r7, #4]
 2034 022a 181C     		mov	r0, r3
 2035 022c FFF7FEFF 		bl	SPI001_lClearPortRegs
 684:../Dave/Generated/src/SPI001/SPI001.c ****         MTSR_PortRegs->HWSEL |= ((uint32_t)2 << (MTSRPin * (uint32_t)2));                          
 2036              		.loc 1 684 0
 2037 0230 FB69     		ldr	r3, [r7, #28]
 2038 0232 5A6F     		ldr	r2, [r3, #116]
 2039 0234 3B1C     		mov	r3, r7
 2040 0236 1733     		add	r3, r3, #23
 2041 0238 1B78     		ldrb	r3, [r3]
 2042 023a 5B00     		lsl	r3, r3, #1
 2043 023c 0221     		mov	r1, #2
 2044 023e 081C     		mov	r0, r1
 2045 0240 9840     		lsl	r0, r0, r3
 2046 0242 031C     		mov	r3, r0
 2047 0244 1A43     		orr	r2, r3
 2048 0246 FB69     		ldr	r3, [r7, #28]
 2049 0248 5A67     		str	r2, [r3, #116]
 685:../Dave/Generated/src/SPI001/SPI001.c ****         /* Enable loop back mode */                                      
 686:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX0CR |= ((((uint32_t)0x01 << USIC_CH_DX0CR_INSW_Pos) & \
 2050              		.loc 1 686 0
 2051 024a 3B6A     		ldr	r3, [r7, #32]
 2052 024c DB69     		ldr	r3, [r3, #28]
 2053 024e 1622     		mov	r2, #22
 2054 0250 1A43     		orr	r2, r3
 2055 0252 3B6A     		ldr	r3, [r7, #32]
 2056 0254 DA61     		str	r2, [r3, #28]
 687:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX0CR_INSW_Msk) | \
 688:../Dave/Generated/src/SPI001/SPI001.c ****                           (((uint32_t)0x06 << USIC_CH_DX0CR_DSEL_Pos) & \
 689:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX0CR_DSEL_Msk));    
 690:../Dave/Generated/src/SPI001/SPI001.c ****      break;                                                           
 2057              		.loc 1 690 0
 2058 0256 DAE0     		b	.L60
 2059              	.L57:
 691:../Dave/Generated/src/SPI001/SPI001.c ****      case SPI001_DUAL:                                                  
 692:../Dave/Generated/src/SPI001/SPI001.c ****     	  USICRegs->CCR &= (((uint32_t)~USIC_CH_CCR_HPCEN_Msk));             
 2060              		.loc 1 692 0
 2061 0258 3B6A     		ldr	r3, [r7, #32]
 2062 025a 1B6C     		ldr	r3, [r3, #64]
 2063 025c C022     		mov	r2, #192
 2064 025e 191C     		mov	r1, r3
 2065 0260 9143     		bic	r1, r2
 2066 0262 0A1C     		mov	r2, r1
 2067 0264 3B6A     		ldr	r3, [r7, #32]
 2068 0266 1A64     		str	r2, [r3, #64]
 693:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->CCR |= ( (((uint32_t)0x02 << USIC_CH_CCR_HPCEN_Pos) & \
 2069              		.loc 1 693 0
 2070 0268 3B6A     		ldr	r3, [r7, #32]
 2071 026a 1B6C     		ldr	r3, [r3, #64]
 2072 026c 8022     		mov	r2, #128
 2073 026e 1A43     		orr	r2, r3
 2074 0270 3B6A     		ldr	r3, [r7, #32]
 2075 0272 1A64     		str	r2, [r3, #64]
 694:../Dave/Generated/src/SPI001/SPI001.c ****                                                        USIC_CH_CCR_HPCEN_Msk));
 695:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->TCSR &= ((uint32_t)~(USIC_CH_TCSR_HPCMD_Msk));
 2076              		.loc 1 695 0
 2077 0274 3B6A     		ldr	r3, [r7, #32]
 2078 0276 9B6B     		ldr	r3, [r3, #56]
 2079 0278 1022     		mov	r2, #16
 2080 027a 1C1C     		mov	r4, r3
 2081 027c 9443     		bic	r4, r2
 2082 027e 221C     		mov	r2, r4
 2083 0280 3B6A     		ldr	r3, [r7, #32]
 2084 0282 9A63     		str	r2, [r3, #56]
 696:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->TCSR |= (((uint32_t)0x01 << USIC_CH_TCSR_HPCMD_Pos) & \
 2085              		.loc 1 696 0
 2086 0284 3B6A     		ldr	r3, [r7, #32]
 2087 0286 9B6B     		ldr	r3, [r3, #56]
 2088 0288 1022     		mov	r2, #16
 2089 028a 1A43     		orr	r2, r3
 2090 028c 3B6A     		ldr	r3, [r7, #32]
 2091 028e 9A63     		str	r2, [r3, #56]
 697:../Dave/Generated/src/SPI001/SPI001.c ****                                                        USIC_CH_TCSR_HPCMD_Msk);
 698:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX0CR &= (~(uint32_t)(USIC_CH_DX0CR_INSW_Msk | \
 2092              		.loc 1 698 0
 2093 0290 3B6A     		ldr	r3, [r7, #32]
 2094 0292 DB69     		ldr	r3, [r3, #28]
 2095 0294 1722     		mov	r2, #23
 2096 0296 181C     		mov	r0, r3
 2097 0298 9043     		bic	r0, r2
 2098 029a 021C     		mov	r2, r0
 2099 029c 3B6A     		ldr	r3, [r7, #32]
 2100 029e DA61     		str	r2, [r3, #28]
 699:../Dave/Generated/src/SPI001/SPI001.c ****                                               USIC_CH_DX0CR_DSEL_Msk )); 
 700:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX3CR &= (~(uint32_t)(USIC_CH_DX3CR_INSW_Msk | \
 2101              		.loc 1 700 0
 2102 02a0 3B6A     		ldr	r3, [r7, #32]
 2103 02a2 9B6A     		ldr	r3, [r3, #40]
 2104 02a4 1722     		mov	r2, #23
 2105 02a6 191C     		mov	r1, r3
 2106 02a8 9143     		bic	r1, r2
 2107 02aa 0A1C     		mov	r2, r1
 2108 02ac 3B6A     		ldr	r3, [r7, #32]
 2109 02ae 9A62     		str	r2, [r3, #40]
 701:../Dave/Generated/src/SPI001/SPI001.c ****                                               USIC_CH_DX3CR_DSEL_Msk )); 
 702:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX4CR &= (~(uint32_t)(USIC_CH_DX4CR_INSW_Msk | \
 2110              		.loc 1 702 0
 2111 02b0 3B6A     		ldr	r3, [r7, #32]
 2112 02b2 DB6A     		ldr	r3, [r3, #44]
 2113 02b4 1722     		mov	r2, #23
 2114 02b6 1C1C     		mov	r4, r3
 2115 02b8 9443     		bic	r4, r2
 2116 02ba 221C     		mov	r2, r4
 2117 02bc 3B6A     		ldr	r3, [r7, #32]
 2118 02be DA62     		str	r2, [r3, #44]
 703:../Dave/Generated/src/SPI001/SPI001.c ****                                               USIC_CH_DX4CR_DSEL_Msk )); 
 704:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX5CR &= (~(uint32_t)(USIC_CH_DX5CR_INSW_Msk | \
 2119              		.loc 1 704 0
 2120 02c0 3B6A     		ldr	r3, [r7, #32]
 2121 02c2 1B6B     		ldr	r3, [r3, #48]
 2122 02c4 1722     		mov	r2, #23
 2123 02c6 181C     		mov	r0, r3
 2124 02c8 9043     		bic	r0, r2
 2125 02ca 021C     		mov	r2, r0
 2126 02cc 3B6A     		ldr	r3, [r7, #32]
 2127 02ce 1A63     		str	r2, [r3, #48]
 705:../Dave/Generated/src/SPI001/SPI001.c ****                                               USIC_CH_DX5CR_DSEL_Msk )); 
 706:../Dave/Generated/src/SPI001/SPI001.c ****         SPI001_lClearPortRegs(Handle);                                           
 2128              		.loc 1 706 0
 2129 02d0 7B68     		ldr	r3, [r7, #4]
 2130 02d2 181C     		mov	r0, r3
 2131 02d4 FFF7FEFF 		bl	SPI001_lClearPortRegs
 707:../Dave/Generated/src/SPI001/SPI001.c ****         MTSR_PortRegs->HWSEL |= ((uint32_t)2 << (MTSRPin * (uint32_t)2));
 2132              		.loc 1 707 0
 2133 02d8 FB69     		ldr	r3, [r7, #28]
 2134 02da 5A6F     		ldr	r2, [r3, #116]
 2135 02dc 3B1C     		mov	r3, r7
 2136 02de 1733     		add	r3, r3, #23
 2137 02e0 1B78     		ldrb	r3, [r3]
 2138 02e2 5B00     		lsl	r3, r3, #1
 2139 02e4 0221     		mov	r1, #2
 2140 02e6 0C1C     		mov	r4, r1
 2141 02e8 9C40     		lsl	r4, r4, r3
 2142 02ea 231C     		mov	r3, r4
 2143 02ec 1A43     		orr	r2, r3
 2144 02ee FB69     		ldr	r3, [r7, #28]
 2145 02f0 5A67     		str	r2, [r3, #116]
 708:../Dave/Generated/src/SPI001/SPI001.c ****         MRST_PortRegs->HWSEL |= ((uint32_t)2 << (MRSTPin * (uint32_t)2));                          
 2146              		.loc 1 708 0
 2147 02f2 BB69     		ldr	r3, [r7, #24]
 2148 02f4 5A6F     		ldr	r2, [r3, #116]
 2149 02f6 3B1C     		mov	r3, r7
 2150 02f8 1633     		add	r3, r3, #22
 2151 02fa 1B78     		ldrb	r3, [r3]
 2152 02fc 5B00     		lsl	r3, r3, #1
 2153 02fe 0221     		mov	r1, #2
 2154 0300 081C     		mov	r0, r1
 2155 0302 9840     		lsl	r0, r0, r3
 2156 0304 031C     		mov	r3, r0
 2157 0306 1A43     		orr	r2, r3
 2158 0308 BB69     		ldr	r3, [r7, #24]
 2159 030a 5A67     		str	r2, [r3, #116]
 709:../Dave/Generated/src/SPI001/SPI001.c ****         /* Enable loop back mode for input stages */                     
 710:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX0CR |= ((((uint32_t)0x01 << USIC_CH_DX0CR_INSW_Pos) & \
 2160              		.loc 1 710 0
 2161 030c 3B6A     		ldr	r3, [r7, #32]
 2162 030e DB69     		ldr	r3, [r3, #28]
 2163 0310 1622     		mov	r2, #22
 2164 0312 1A43     		orr	r2, r3
 2165 0314 3B6A     		ldr	r3, [r7, #32]
 2166 0316 DA61     		str	r2, [r3, #28]
 711:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX0CR_INSW_Msk) | \
 712:../Dave/Generated/src/SPI001/SPI001.c ****                           (((uint32_t)0x06 << USIC_CH_DX0CR_DSEL_Pos) & \
 713:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX0CR_DSEL_Msk));    
 714:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX3CR |= ((((uint32_t)0x01 << USIC_CH_DX3CR_INSW_Pos) & \
 2167              		.loc 1 714 0
 2168 0318 3B6A     		ldr	r3, [r7, #32]
 2169 031a 9B6A     		ldr	r3, [r3, #40]
 2170 031c 1622     		mov	r2, #22
 2171 031e 1A43     		orr	r2, r3
 2172 0320 3B6A     		ldr	r3, [r7, #32]
 2173 0322 9A62     		str	r2, [r3, #40]
 715:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX3CR_INSW_Msk) | \
 716:../Dave/Generated/src/SPI001/SPI001.c ****                           (((uint32_t)0x06 << USIC_CH_DX3CR_DSEL_Pos) & \
 717:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX3CR_DSEL_Msk));    
 718:../Dave/Generated/src/SPI001/SPI001.c ****      break;                                                           
 2174              		.loc 1 718 0
 2175 0324 73E0     		b	.L60
 2176              	.L58:
 719:../Dave/Generated/src/SPI001/SPI001.c ****      case SPI001_QUAD:                                                  
 720:../Dave/Generated/src/SPI001/SPI001.c ****     	  USICRegs->CCR &= (((uint32_t)~USIC_CH_CCR_HPCEN_Msk));             
 2177              		.loc 1 720 0
 2178 0326 3B6A     		ldr	r3, [r7, #32]
 2179 0328 1B6C     		ldr	r3, [r3, #64]
 2180 032a C022     		mov	r2, #192
 2181 032c 191C     		mov	r1, r3
 2182 032e 9143     		bic	r1, r2
 2183 0330 0A1C     		mov	r2, r1
 2184 0332 3B6A     		ldr	r3, [r7, #32]
 2185 0334 1A64     		str	r2, [r3, #64]
 721:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->CCR |= ((((uint32_t)0x03 << USIC_CH_CCR_HPCEN_Pos) & \
 2186              		.loc 1 721 0
 2187 0336 3B6A     		ldr	r3, [r7, #32]
 2188 0338 1B6C     		ldr	r3, [r3, #64]
 2189 033a C022     		mov	r2, #192
 2190 033c 1A43     		orr	r2, r3
 2191 033e 3B6A     		ldr	r3, [r7, #32]
 2192 0340 1A64     		str	r2, [r3, #64]
 722:../Dave/Generated/src/SPI001/SPI001.c ****                                                        USIC_CH_CCR_HPCEN_Msk));
 723:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->TCSR &= ((uint32_t)~(USIC_CH_TCSR_HPCMD_Msk));         
 2193              		.loc 1 723 0
 2194 0342 3B6A     		ldr	r3, [r7, #32]
 2195 0344 9B6B     		ldr	r3, [r3, #56]
 2196 0346 1022     		mov	r2, #16
 2197 0348 1C1C     		mov	r4, r3
 2198 034a 9443     		bic	r4, r2
 2199 034c 221C     		mov	r2, r4
 2200 034e 3B6A     		ldr	r3, [r7, #32]
 2201 0350 9A63     		str	r2, [r3, #56]
 724:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->TCSR |= (((uint32_t)0x01 << USIC_CH_TCSR_HPCMD_Pos) & \
 2202              		.loc 1 724 0
 2203 0352 3B6A     		ldr	r3, [r7, #32]
 2204 0354 9B6B     		ldr	r3, [r3, #56]
 2205 0356 1022     		mov	r2, #16
 2206 0358 1A43     		orr	r2, r3
 2207 035a 3B6A     		ldr	r3, [r7, #32]
 2208 035c 9A63     		str	r2, [r3, #56]
 725:../Dave/Generated/src/SPI001/SPI001.c ****                                                        USIC_CH_TCSR_HPCMD_Msk);
 726:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX0CR &= (~(uint32_t)(USIC_CH_DX0CR_INSW_Msk | \
 2209              		.loc 1 726 0
 2210 035e 3B6A     		ldr	r3, [r7, #32]
 2211 0360 DB69     		ldr	r3, [r3, #28]
 2212 0362 1722     		mov	r2, #23
 2213 0364 181C     		mov	r0, r3
 2214 0366 9043     		bic	r0, r2
 2215 0368 021C     		mov	r2, r0
 2216 036a 3B6A     		ldr	r3, [r7, #32]
 2217 036c DA61     		str	r2, [r3, #28]
 727:../Dave/Generated/src/SPI001/SPI001.c ****                                               USIC_CH_DX0CR_DSEL_Msk )); 
 728:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX3CR &= (~(uint32_t)(USIC_CH_DX3CR_INSW_Msk | \
 2218              		.loc 1 728 0
 2219 036e 3B6A     		ldr	r3, [r7, #32]
 2220 0370 9B6A     		ldr	r3, [r3, #40]
 2221 0372 1722     		mov	r2, #23
 2222 0374 191C     		mov	r1, r3
 2223 0376 9143     		bic	r1, r2
 2224 0378 0A1C     		mov	r2, r1
 2225 037a 3B6A     		ldr	r3, [r7, #32]
 2226 037c 9A62     		str	r2, [r3, #40]
 729:../Dave/Generated/src/SPI001/SPI001.c ****                                               USIC_CH_DX3CR_DSEL_Msk )); 
 730:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX4CR &= (~(uint32_t)(USIC_CH_DX4CR_INSW_Msk | \
 2227              		.loc 1 730 0
 2228 037e 3B6A     		ldr	r3, [r7, #32]
 2229 0380 DB6A     		ldr	r3, [r3, #44]
 2230 0382 1722     		mov	r2, #23
 2231 0384 1C1C     		mov	r4, r3
 2232 0386 9443     		bic	r4, r2
 2233 0388 221C     		mov	r2, r4
 2234 038a 3B6A     		ldr	r3, [r7, #32]
 2235 038c DA62     		str	r2, [r3, #44]
 731:../Dave/Generated/src/SPI001/SPI001.c ****                                               USIC_CH_DX4CR_DSEL_Msk )); 
 732:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX5CR &= (~(uint32_t)(USIC_CH_DX5CR_INSW_Msk | \
 2236              		.loc 1 732 0
 2237 038e 3B6A     		ldr	r3, [r7, #32]
 2238 0390 1B6B     		ldr	r3, [r3, #48]
 2239 0392 1722     		mov	r2, #23
 2240 0394 181C     		mov	r0, r3
 2241 0396 9043     		bic	r0, r2
 2242 0398 021C     		mov	r2, r0
 2243 039a 3B6A     		ldr	r3, [r7, #32]
 2244 039c 1A63     		str	r2, [r3, #48]
 733:../Dave/Generated/src/SPI001/SPI001.c ****                                               USIC_CH_DX5CR_DSEL_Msk )); 
 734:../Dave/Generated/src/SPI001/SPI001.c ****         SPI001_lClearPortRegs(Handle);                                           
 2245              		.loc 1 734 0
 2246 039e 7B68     		ldr	r3, [r7, #4]
 2247 03a0 181C     		mov	r0, r3
 2248 03a2 FFF7FEFF 		bl	SPI001_lClearPortRegs
 735:../Dave/Generated/src/SPI001/SPI001.c ****         MTSR_PortRegs->HWSEL |= ((uint32_t)2 << (MTSRPin * (uint32_t)2));
 2249              		.loc 1 735 0
 2250 03a6 FB69     		ldr	r3, [r7, #28]
 2251 03a8 5A6F     		ldr	r2, [r3, #116]
 2252 03aa 3B1C     		mov	r3, r7
 2253 03ac 1733     		add	r3, r3, #23
 2254 03ae 1B78     		ldrb	r3, [r3]
 2255 03b0 5B00     		lsl	r3, r3, #1
 2256 03b2 0221     		mov	r1, #2
 2257 03b4 0C1C     		mov	r4, r1
 2258 03b6 9C40     		lsl	r4, r4, r3
 2259 03b8 231C     		mov	r3, r4
 2260 03ba 1A43     		orr	r2, r3
 2261 03bc FB69     		ldr	r3, [r7, #28]
 2262 03be 5A67     		str	r2, [r3, #116]
 736:../Dave/Generated/src/SPI001/SPI001.c ****         MRST_PortRegs->HWSEL |= ((uint32_t)2 << (MRSTPin * (uint32_t)2));                          
 2263              		.loc 1 736 0
 2264 03c0 BB69     		ldr	r3, [r7, #24]
 2265 03c2 5A6F     		ldr	r2, [r3, #116]
 2266 03c4 3B1C     		mov	r3, r7
 2267 03c6 1633     		add	r3, r3, #22
 2268 03c8 1B78     		ldrb	r3, [r3]
 2269 03ca 5B00     		lsl	r3, r3, #1
 2270 03cc 0221     		mov	r1, #2
 2271 03ce 081C     		mov	r0, r1
 2272 03d0 9840     		lsl	r0, r0, r3
 2273 03d2 031C     		mov	r3, r0
 2274 03d4 1A43     		orr	r2, r3
 2275 03d6 BB69     		ldr	r3, [r7, #24]
 2276 03d8 5A67     		str	r2, [r3, #116]
 737:../Dave/Generated/src/SPI001/SPI001.c ****         /* Enable loop back mode for input stages */                     
 738:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX0CR |= ((((uint32_t)0x01 << USIC_CH_DX0CR_INSW_Pos) & \
 2277              		.loc 1 738 0
 2278 03da 3B6A     		ldr	r3, [r7, #32]
 2279 03dc DB69     		ldr	r3, [r3, #28]
 2280 03de 1622     		mov	r2, #22
 2281 03e0 1A43     		orr	r2, r3
 2282 03e2 3B6A     		ldr	r3, [r7, #32]
 2283 03e4 DA61     		str	r2, [r3, #28]
 739:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX0CR_INSW_Msk) | \
 740:../Dave/Generated/src/SPI001/SPI001.c ****                           (((uint32_t)0x06 << USIC_CH_DX0CR_DSEL_Pos) & \
 741:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX0CR_DSEL_Msk));    
 742:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX3CR |= ((((uint32_t)0x01 << USIC_CH_DX3CR_INSW_Pos) & \
 2284              		.loc 1 742 0
 2285 03e6 3B6A     		ldr	r3, [r7, #32]
 2286 03e8 9B6A     		ldr	r3, [r3, #40]
 2287 03ea 1622     		mov	r2, #22
 2288 03ec 1A43     		orr	r2, r3
 2289 03ee 3B6A     		ldr	r3, [r7, #32]
 2290 03f0 9A62     		str	r2, [r3, #40]
 743:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX3CR_INSW_Msk) | \
 744:../Dave/Generated/src/SPI001/SPI001.c ****                           (((uint32_t)0x06 << USIC_CH_DX3CR_DSEL_Pos) & \
 745:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX3CR_DSEL_Msk));    
 746:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX4CR |= ((((uint32_t)0x01 << USIC_CH_DX4CR_INSW_Pos) & \
 2291              		.loc 1 746 0
 2292 03f2 3B6A     		ldr	r3, [r7, #32]
 2293 03f4 DB6A     		ldr	r3, [r3, #44]
 2294 03f6 1622     		mov	r2, #22
 2295 03f8 1A43     		orr	r2, r3
 2296 03fa 3B6A     		ldr	r3, [r7, #32]
 2297 03fc DA62     		str	r2, [r3, #44]
 747:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX4CR_INSW_Msk) | \
 748:../Dave/Generated/src/SPI001/SPI001.c ****                           (((uint32_t)0x06 << USIC_CH_DX4CR_DSEL_Pos) & \
 749:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX4CR_DSEL_Msk));    
 750:../Dave/Generated/src/SPI001/SPI001.c ****         USICRegs->DX5CR |= ((((uint32_t)0x01 << USIC_CH_DX5CR_INSW_Pos) & \
 2298              		.loc 1 750 0
 2299 03fe 3B6A     		ldr	r3, [r7, #32]
 2300 0400 1B6B     		ldr	r3, [r3, #48]
 2301 0402 1622     		mov	r2, #22
 2302 0404 1A43     		orr	r2, r3
 2303 0406 3B6A     		ldr	r3, [r7, #32]
 2304 0408 1A63     		str	r2, [r3, #48]
 751:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX5CR_INSW_Msk) | \
 752:../Dave/Generated/src/SPI001/SPI001.c ****                           (((uint32_t)0x06 << USIC_CH_DX5CR_DSEL_Pos) & \
 753:../Dave/Generated/src/SPI001/SPI001.c ****                                             USIC_CH_DX5CR_DSEL_Msk));    
 754:../Dave/Generated/src/SPI001/SPI001.c ****      break;
 2305              		.loc 1 754 0
 2306 040a 00E0     		b	.L60
 2307              	.L54:
 755:../Dave/Generated/src/SPI001/SPI001.c ****         
 756:../Dave/Generated/src/SPI001/SPI001.c ****      default:
 757:../Dave/Generated/src/SPI001/SPI001.c ****             /* Do nothing */	
 758:../Dave/Generated/src/SPI001/SPI001.c ****      break;
 2308              		.loc 1 758 0
 2309 040c C046     		mov	r8, r8
 2310              	.L60:
 759:../Dave/Generated/src/SPI001/SPI001.c ****    }                                                                    
 760:../Dave/Generated/src/SPI001/SPI001.c ****    /* Configuration of Protocol Control Register */                     
 761:../Dave/Generated/src/SPI001/SPI001.c ****    USICRegs->PCR_SSCMode &= (~(uint32_t)(USIC_CH_PCR_SSCMode_DCTQ1_Msk | \
 2311              		.loc 1 761 0
 2312 040e 3B6A     		ldr	r3, [r7, #32]
 2313 0410 DA6B     		ldr	r2, [r3, #60]
 2314 0412 184B     		ldr	r3, .L62+8
 2315 0414 1A40     		and	r2, r3
 2316 0416 3B6A     		ldr	r3, [r7, #32]
 2317 0418 DA63     		str	r2, [r3, #60]
 762:../Dave/Generated/src/SPI001/SPI001.c ****                   USIC_CH_PCR_SSCMode_SELO_Msk));                        
 763:../Dave/Generated/src/SPI001/SPI001.c ****    USICRegs->PCR_SSCMode |= ((((uint32_t)Config->NextFrameDelay << \
 2318              		.loc 1 763 0
 2319 041a 3B6A     		ldr	r3, [r7, #32]
 2320 041c DA6B     		ldr	r2, [r3, #60]
 2321 041e 3B68     		ldr	r3, [r7]
 2322 0420 5B7A     		ldrb	r3, [r3, #9]
 2323 0422 1902     		lsl	r1, r3, #8
 764:../Dave/Generated/src/SPI001/SPI001.c ****             USIC_CH_PCR_SSCMode_DCTQ1_Pos) & USIC_CH_PCR_SSCMode_DCTQ1_Msk) | \
 2324              		.loc 1 764 0
 2325 0424 F823     		mov	r3, #248
 2326 0426 5B01     		lsl	r3, r3, #5
 2327 0428 1940     		and	r1, r3
 765:../Dave/Generated/src/SPI001/SPI001.c ****             ((((uint32_t)0x01 << Handle->ChipSelTable[Config->CESelected]) << \
 2328              		.loc 1 765 0
 2329 042a 3B68     		ldr	r3, [r7]
 2330 042c 1B7B     		ldrb	r3, [r3, #12]
 2331 042e 181C     		mov	r0, r3
 2332 0430 7C68     		ldr	r4, [r7, #4]
 2333 0432 0823     		mov	r3, #8
 2334 0434 2018     		add	r0, r4, r0
 2335 0436 C318     		add	r3, r0, r3
 2336 0438 1B79     		ldrb	r3, [r3, #4]
 2337 043a 0120     		mov	r0, #1
 2338 043c 041C     		mov	r4, r0
 2339 043e 9C40     		lsl	r4, r4, r3
 2340 0440 231C     		mov	r3, r4
 2341 0442 1804     		lsl	r0, r3, #16
 766:../Dave/Generated/src/SPI001/SPI001.c ****                USIC_CH_PCR_SSCMode_SELO_Pos) & USIC_CH_PCR_SSCMode_SELO_Msk)); 
 2342              		.loc 1 766 0
 2343 0444 FF23     		mov	r3, #255
 2344 0446 1B04     		lsl	r3, r3, #16
 2345 0448 0340     		and	r3, r0
 764:../Dave/Generated/src/SPI001/SPI001.c ****             USIC_CH_PCR_SSCMode_DCTQ1_Pos) & USIC_CH_PCR_SSCMode_DCTQ1_Msk) | \
 2346              		.loc 1 764 0
 2347 044a 0B43     		orr	r3, r1
 763:../Dave/Generated/src/SPI001/SPI001.c ****    USICRegs->PCR_SSCMode |= ((((uint32_t)Config->NextFrameDelay << \
 2348              		.loc 1 763 0
 2349 044c 1A43     		orr	r2, r3
 2350 044e 3B6A     		ldr	r3, [r7, #32]
 2351 0450 DA63     		str	r2, [r3, #60]
 767:../Dave/Generated/src/SPI001/SPI001.c ****  
 768:../Dave/Generated/src/SPI001/SPI001.c ****    /* Configuration of Channel Control Register */ 
 769:../Dave/Generated/src/SPI001/SPI001.c ****    /* parity generation is disabled*/
 770:../Dave/Generated/src/SPI001/SPI001.c ****    USICRegs->CCR |= ( ((uint32_t)(USIC_SPI_MODE  & USIC_CH_CCR_MODE_Msk)));
 2352              		.loc 1 770 0
 2353 0452 3B6A     		ldr	r3, [r7, #32]
 2354 0454 1B6C     		ldr	r3, [r3, #64]
 2355 0456 0122     		mov	r2, #1
 2356 0458 1A43     		orr	r2, r3
 2357 045a 3B6A     		ldr	r3, [r7, #32]
 2358 045c 1A64     		str	r2, [r3, #64]
 771:../Dave/Generated/src/SPI001/SPI001.c ****    Status = (status_t) DAVEApp_SUCCESS;                                                            
 2359              		.loc 1 771 0
 2360 045e 0023     		mov	r3, #0
 2361 0460 7B62     		str	r3, [r7, #36]
 2362              	.L53:
 772:../Dave/Generated/src/SPI001/SPI001.c ****   }while(0);                                                             
 773:../Dave/Generated/src/SPI001/SPI001.c ****                   
 774:../Dave/Generated/src/SPI001/SPI001.c ****   return Status;                                                         
 2363              		.loc 1 774 0
 2364 0462 7B6A     		ldr	r3, [r7, #36]
 775:../Dave/Generated/src/SPI001/SPI001.c **** }                                                                        
 2365              		.loc 1 775 0
 2366 0464 181C     		mov	r0, r3
 2367 0466 BD46     		mov	sp, r7
 2368 0468 0BB0     		add	sp, sp, #44
 2369              		@ sp needed for prologue
 2370 046a 90BD     		pop	{r4, r7, pc}
 2371              	.L63:
 2372              		.align	2
 2373              	.L62:
 2374 046c 0000FF03 		.word	67043328
 2375 0470 E2FFC0F0 		.word	-255787038
 2376 0474 FFE000FF 		.word	-16719617
 2377              		.cfi_endproc
 2378              	.LFE41:
 2380              		.section	.text.SPI001_ReadData,"ax",%progbits
 2381              		.align	2
 2382              		.global	SPI001_ReadData
 2383              		.code	16
 2384              		.thumb_func
 2386              	SPI001_ReadData:
 2387              	.LFB42:
 776:../Dave/Generated/src/SPI001/SPI001.c ****                                                                          
 777:../Dave/Generated/src/SPI001/SPI001.c ****                                                                          
 778:../Dave/Generated/src/SPI001/SPI001.c **** /* This function reads out  the content of the USIC receive FIFO Buffer. 
 779:../Dave/Generated/src/SPI001/SPI001.c ****  * Returns true in case FIFO is not empty.else  otherwise.               
 780:../Dave/Generated/src/SPI001/SPI001.c ****  *                                                                       
 781:../Dave/Generated/src/SPI001/SPI001.c ****  */                                                                      
 782:../Dave/Generated/src/SPI001/SPI001.c **** bool SPI001_ReadData(const SPI001_HandleType* Handle, uint16_t* DataPtr)
 783:../Dave/Generated/src/SPI001/SPI001.c **** {                                                                        
 2388              		.loc 1 783 0
 2389              		.cfi_startproc
 2390 0000 80B5     		push	{r7, lr}
 2391              	.LCFI26:
 2392              		.cfi_def_cfa_offset 8
 2393              		.cfi_offset 7, -8
 2394              		.cfi_offset 14, -4
 2395 0002 84B0     		sub	sp, sp, #16
 2396              	.LCFI27:
 2397              		.cfi_def_cfa_offset 24
 2398 0004 00AF     		add	r7, sp, #0
 2399              	.LCFI28:
 2400              		.cfi_def_cfa_register 7
 2401 0006 7860     		str	r0, [r7, #4]
 2402 0008 3960     		str	r1, [r7]
 784:../Dave/Generated/src/SPI001/SPI001.c ****   bool Result = (bool)FALSE;                                               
 2403              		.loc 1 784 0
 2404 000a 3B1C     		mov	r3, r7
 2405 000c 0F33     		add	r3, r3, #15
 2406 000e 0022     		mov	r2, #0
 2407 0010 1A70     		strb	r2, [r3]
 785:../Dave/Generated/src/SPI001/SPI001.c ****   USIC_CH_TypeDef* USICRegs = Handle->USICRegs;                                                  
 2408              		.loc 1 785 0
 2409 0012 7B68     		ldr	r3, [r7, #4]
 2410 0014 1B68     		ldr	r3, [r3]
 2411 0016 BB60     		str	r3, [r7, #8]
 786:../Dave/Generated/src/SPI001/SPI001.c ****   /* <<<DD_SPI_API_4>>>*/                                                
 787:../Dave/Generated/src/SPI001/SPI001.c ****   if(USIC_ubIsRxFIFOempty(USICRegs))                                     
 2412              		.loc 1 787 0
 2413 0018 BA68     		ldr	r2, [r7, #8]
 2414 001a 8A23     		mov	r3, #138
 2415 001c 5B00     		lsl	r3, r3, #1
 2416 001e D258     		ldr	r2, [r2, r3]
 2417 0020 0823     		mov	r3, #8
 2418 0022 1340     		and	r3, r2
 2419 0024 DB08     		lsr	r3, r3, #3
 2420 0026 04D0     		beq	.L65
 788:../Dave/Generated/src/SPI001/SPI001.c ****   {                                                                      
 789:../Dave/Generated/src/SPI001/SPI001.c ****     Result = (bool)FALSE;                                                      
 2421              		.loc 1 789 0
 2422 0028 3B1C     		mov	r3, r7
 2423 002a 0F33     		add	r3, r3, #15
 2424 002c 0022     		mov	r2, #0
 2425 002e 1A70     		strb	r2, [r3]
 2426 0030 0AE0     		b	.L66
 2427              	.L65:
 790:../Dave/Generated/src/SPI001/SPI001.c ****   }                                                                      
 791:../Dave/Generated/src/SPI001/SPI001.c ****   else                                                                   
 792:../Dave/Generated/src/SPI001/SPI001.c ****   {                                                                      
 793:../Dave/Generated/src/SPI001/SPI001.c ****      *DataPtr = (uint16_t)USICRegs->OUTR;                                
 2428              		.loc 1 793 0
 2429 0032 BA68     		ldr	r2, [r7, #8]
 2430 0034 8E23     		mov	r3, #142
 2431 0036 5B00     		lsl	r3, r3, #1
 2432 0038 D358     		ldr	r3, [r2, r3]
 2433 003a 9AB2     		uxth	r2, r3
 2434 003c 3B68     		ldr	r3, [r7]
 2435 003e 1A80     		strh	r2, [r3]
 794:../Dave/Generated/src/SPI001/SPI001.c ****      Result = (bool)TRUE;                                                
 2436              		.loc 1 794 0
 2437 0040 3B1C     		mov	r3, r7
 2438 0042 0F33     		add	r3, r3, #15
 2439 0044 0122     		mov	r2, #1
 2440 0046 1A70     		strb	r2, [r3]
 2441              	.L66:
 795:../Dave/Generated/src/SPI001/SPI001.c ****   }                                                                                            
 796:../Dave/Generated/src/SPI001/SPI001.c ****                                                                          
 797:../Dave/Generated/src/SPI001/SPI001.c ****   return Result;                                                         
 2442              		.loc 1 797 0
 2443 0048 3B1C     		mov	r3, r7
 2444 004a 0F33     		add	r3, r3, #15
 2445 004c 1B78     		ldrb	r3, [r3]
 798:../Dave/Generated/src/SPI001/SPI001.c **** }                                                                        
 2446              		.loc 1 798 0
 2447 004e 181C     		mov	r0, r3
 2448 0050 BD46     		mov	sp, r7
 2449 0052 04B0     		add	sp, sp, #16
 2450              		@ sp needed for prologue
 2451 0054 80BD     		pop	{r7, pc}
 2452              		.cfi_endproc
 2453              	.LFE42:
 2455 0056 C046     		.section	.text.SPI001_WriteData,"ax",%progbits
 2456              		.align	2
 2457              		.global	SPI001_WriteData
 2458              		.code	16
 2459              		.thumb_func
 2461              	SPI001_WriteData:
 2462              	.LFB43:
 799:../Dave/Generated/src/SPI001/SPI001.c ****                                                                          
 800:../Dave/Generated/src/SPI001/SPI001.c **** /* This function writes out  a word to the transmit buffer register as per 
 801:../Dave/Generated/src/SPI001/SPI001.c ****  * input transmit mode                                                         
 802:../Dave/Generated/src/SPI001/SPI001.c ****  */                                                                      
 803:../Dave/Generated/src/SPI001/SPI001.c **** bool SPI001_WriteData                                                
 804:../Dave/Generated/src/SPI001/SPI001.c **** (                                                                        
 805:../Dave/Generated/src/SPI001/SPI001.c ****   const SPI001_HandleType* Handle,                                       
 806:../Dave/Generated/src/SPI001/SPI001.c ****   const uint16_t* DataPtr,                                               
 807:../Dave/Generated/src/SPI001/SPI001.c ****   SPI001_TransmitMode TrMode                                             
 808:../Dave/Generated/src/SPI001/SPI001.c **** )                                                                        
 809:../Dave/Generated/src/SPI001/SPI001.c **** {                                                                        
 2463              		.loc 1 809 0
 2464              		.cfi_startproc
 2465 0000 80B5     		push	{r7, lr}
 2466              	.LCFI29:
 2467              		.cfi_def_cfa_offset 8
 2468              		.cfi_offset 7, -8
 2469              		.cfi_offset 14, -4
 2470 0002 88B0     		sub	sp, sp, #32
 2471              	.LCFI30:
 2472              		.cfi_def_cfa_offset 40
 2473 0004 00AF     		add	r7, sp, #0
 2474              	.LCFI31:
 2475              		.cfi_def_cfa_register 7
 2476 0006 F860     		str	r0, [r7, #12]
 2477 0008 B960     		str	r1, [r7, #8]
 2478 000a FB1D     		add	r3, r7, #7
 2479 000c 1A70     		strb	r2, [r3]
 810:../Dave/Generated/src/SPI001/SPI001.c ****   bool Result = (bool)FALSE;                                               
 2480              		.loc 1 810 0
 2481 000e 3B1C     		mov	r3, r7
 2482 0010 1F33     		add	r3, r3, #31
 2483 0012 0022     		mov	r2, #0
 2484 0014 1A70     		strb	r2, [r3]
 811:../Dave/Generated/src/SPI001/SPI001.c ****   uint32_t HpcenNew = 0x00U;                                                     
 2485              		.loc 1 811 0
 2486 0016 0023     		mov	r3, #0
 2487 0018 BB61     		str	r3, [r7, #24]
 812:../Dave/Generated/src/SPI001/SPI001.c ****   uint8_t TbufIndex = 0x00U;                                                 
 2488              		.loc 1 812 0
 2489 001a 3B1C     		mov	r3, r7
 2490 001c 1733     		add	r3, r3, #23
 2491 001e 0022     		mov	r2, #0
 2492 0020 1A70     		strb	r2, [r3]
 813:../Dave/Generated/src/SPI001/SPI001.c ****   USIC_CH_TypeDef* USICRegs = Handle->USICRegs;                                                
 2493              		.loc 1 813 0
 2494 0022 FB68     		ldr	r3, [r7, #12]
 2495 0024 1B68     		ldr	r3, [r3]
 2496 0026 3B61     		str	r3, [r7, #16]
 814:../Dave/Generated/src/SPI001/SPI001.c ****   /* <<<DD_SPI_API_5>>>*/                                                
 815:../Dave/Generated/src/SPI001/SPI001.c ****   HpcenNew = ((uint32_t)((uint32_t)TrMode & SPI001_TRMODE_Msk) >> (uint32_t)3);
 2497              		.loc 1 815 0
 2498 0028 FB1D     		add	r3, r7, #7
 2499 002a 1A78     		ldrb	r2, [r3]
 2500 002c 1823     		mov	r3, #24
 2501 002e 1340     		and	r3, r2
 2502 0030 DB08     		lsr	r3, r3, #3
 2503 0032 BB61     		str	r3, [r7, #24]
 816:../Dave/Generated/src/SPI001/SPI001.c ****                                                                    
 817:../Dave/Generated/src/SPI001/SPI001.c ****   if(USIC_IsTxFIFOfull(USICRegs))                                       
 2504              		.loc 1 817 0
 2505 0034 3A69     		ldr	r2, [r7, #16]
 2506 0036 8A23     		mov	r3, #138
 2507 0038 5B00     		lsl	r3, r3, #1
 2508 003a D258     		ldr	r2, [r2, r3]
 2509 003c 8023     		mov	r3, #128
 2510 003e 5B01     		lsl	r3, r3, #5
 2511 0040 1340     		and	r3, r2
 2512 0042 1B0B     		lsr	r3, r3, #12
 2513 0044 04D0     		beq	.L69
 818:../Dave/Generated/src/SPI001/SPI001.c ****   {                                                                    
 819:../Dave/Generated/src/SPI001/SPI001.c ****      Result = (bool)FALSE;                                                    
 2514              		.loc 1 819 0
 2515 0046 3B1C     		mov	r3, r7
 2516 0048 1F33     		add	r3, r3, #31
 2517 004a 0022     		mov	r2, #0
 2518 004c 1A70     		strb	r2, [r3]
 2519 004e 25E0     		b	.L70
 2520              	.L69:
 820:../Dave/Generated/src/SPI001/SPI001.c ****   }                                                                    
 821:../Dave/Generated/src/SPI001/SPI001.c ****   else                                                                 
 822:../Dave/Generated/src/SPI001/SPI001.c ****   { 
 823:../Dave/Generated/src/SPI001/SPI001.c **** 	 USICRegs->CCR &= (~USIC_CH_CCR_HPCEN_Msk);
 2521              		.loc 1 823 0
 2522 0050 3B69     		ldr	r3, [r7, #16]
 2523 0052 1B6C     		ldr	r3, [r3, #64]
 2524 0054 C022     		mov	r2, #192
 2525 0056 191C     		mov	r1, r3
 2526 0058 9143     		bic	r1, r2
 2527 005a 0A1C     		mov	r2, r1
 2528 005c 3B69     		ldr	r3, [r7, #16]
 2529 005e 1A64     		str	r2, [r3, #64]
 824:../Dave/Generated/src/SPI001/SPI001.c **** 	 USICRegs->CCR |= ((HpcenNew << USIC_CH_CCR_HPCEN_Pos) & \
 2530              		.loc 1 824 0
 2531 0060 3B69     		ldr	r3, [r7, #16]
 2532 0062 1A6C     		ldr	r2, [r3, #64]
 2533 0064 BB69     		ldr	r3, [r7, #24]
 2534 0066 9901     		lsl	r1, r3, #6
 2535 0068 FF23     		mov	r3, #255
 2536 006a 0B40     		and	r3, r1
 2537 006c 1A43     		orr	r2, r3
 2538 006e 3B69     		ldr	r3, [r7, #16]
 2539 0070 1A64     		str	r2, [r3, #64]
 825:../Dave/Generated/src/SPI001/SPI001.c **** 	                                                 USIC_CH_CCR_HPCEN_Msk);
 826:../Dave/Generated/src/SPI001/SPI001.c ****      TbufIndex = (uint8_t)((uint8_t)TrMode & (uint8_t)SPI001_TBUFINDEX_Msk); 
 2540              		.loc 1 826 0
 2541 0072 3B1C     		mov	r3, r7
 2542 0074 1733     		add	r3, r3, #23
 2543 0076 FA1D     		add	r2, r7, #7
 2544 0078 1178     		ldrb	r1, [r2]
 2545 007a 0722     		mov	r2, #7
 2546 007c 0A40     		and	r2, r1
 2547 007e 1A70     		strb	r2, [r3]
 827:../Dave/Generated/src/SPI001/SPI001.c ****      USICRegs->IN[TbufIndex] = *DataPtr;                                
 2548              		.loc 1 827 0
 2549 0080 3B1C     		mov	r3, r7
 2550 0082 1733     		add	r3, r3, #23
 2551 0084 1A78     		ldrb	r2, [r3]
 2552 0086 BB68     		ldr	r3, [r7, #8]
 2553 0088 1B88     		ldrh	r3, [r3]
 2554 008a 191C     		mov	r1, r3
 2555 008c 3B69     		ldr	r3, [r7, #16]
 2556 008e 6032     		add	r2, r2, #96
 2557 0090 9200     		lsl	r2, r2, #2
 2558 0092 D150     		str	r1, [r2, r3]
 828:../Dave/Generated/src/SPI001/SPI001.c ****      Result = (bool)TRUE;                                                     
 2559              		.loc 1 828 0
 2560 0094 3B1C     		mov	r3, r7
 2561 0096 1F33     		add	r3, r3, #31
 2562 0098 0122     		mov	r2, #1
 2563 009a 1A70     		strb	r2, [r3]
 2564              	.L70:
 829:../Dave/Generated/src/SPI001/SPI001.c ****   }                                                                                                
 830:../Dave/Generated/src/SPI001/SPI001.c ****                                                                                             
 831:../Dave/Generated/src/SPI001/SPI001.c ****   return Result;                                                         
 2565              		.loc 1 831 0
 2566 009c 3B1C     		mov	r3, r7
 2567 009e 1F33     		add	r3, r3, #31
 2568 00a0 1B78     		ldrb	r3, [r3]
 832:../Dave/Generated/src/SPI001/SPI001.c **** }                                                                        
 2569              		.loc 1 832 0
 2570 00a2 181C     		mov	r0, r3
 2571 00a4 BD46     		mov	sp, r7
 2572 00a6 08B0     		add	sp, sp, #32
 2573              		@ sp needed for prologue
 2574 00a8 80BD     		pop	{r7, pc}
 2575              		.cfi_endproc
 2576              	.LFE43:
 2578 00aa C046     		.section	.text.SPI001_GetFlagStatus,"ax",%progbits
 2579              		.align	2
 2580              		.global	SPI001_GetFlagStatus
 2581              		.code	16
 2582              		.thumb_func
 2584              	SPI001_GetFlagStatus:
 2585              	.LFB44:
 833:../Dave/Generated/src/SPI001/SPI001.c ****                                                                          
 834:../Dave/Generated/src/SPI001/SPI001.c ****                                                                          
 835:../Dave/Generated/src/SPI001/SPI001.c **** /* Checks the specified Flag status bit.*/                               
 836:../Dave/Generated/src/SPI001/SPI001.c **** status_t SPI001_GetFlagStatus                                            
 837:../Dave/Generated/src/SPI001/SPI001.c **** (                                                                        
 838:../Dave/Generated/src/SPI001/SPI001.c ****   const SPI001_HandleType* Handle,                                       
 839:../Dave/Generated/src/SPI001/SPI001.c ****   SPI001_FlagStatusType Flag                                             
 840:../Dave/Generated/src/SPI001/SPI001.c **** )                                                                        
 841:../Dave/Generated/src/SPI001/SPI001.c **** {                                                                        
 2586              		.loc 1 841 0
 2587              		.cfi_startproc
 2588 0000 80B5     		push	{r7, lr}
 2589              	.LCFI32:
 2590              		.cfi_def_cfa_offset 8
 2591              		.cfi_offset 7, -8
 2592              		.cfi_offset 14, -4
 2593 0002 86B0     		sub	sp, sp, #24
 2594              	.LCFI33:
 2595              		.cfi_def_cfa_offset 32
 2596 0004 00AF     		add	r7, sp, #0
 2597              	.LCFI34:
 2598              		.cfi_def_cfa_register 7
 2599 0006 7860     		str	r0, [r7, #4]
 2600 0008 0A1C     		mov	r2, r1
 2601 000a FB1C     		add	r3, r7, #3
 2602 000c 1A70     		strb	r2, [r3]
 842:../Dave/Generated/src/SPI001/SPI001.c ****   status_t Status = (status_t)SPI001_RESET;                                        
 2603              		.loc 1 842 0
 2604 000e 0123     		mov	r3, #1
 2605 0010 7B61     		str	r3, [r7, #20]
 843:../Dave/Generated/src/SPI001/SPI001.c ****   uint32_t TempValue = 0x00U;                                               
 2606              		.loc 1 843 0
 2607 0012 0023     		mov	r3, #0
 2608 0014 3B61     		str	r3, [r7, #16]
 844:../Dave/Generated/src/SPI001/SPI001.c ****   USIC_CH_TypeDef* USICRegs = Handle->USICRegs;                          
 2609              		.loc 1 844 0
 2610 0016 7B68     		ldr	r3, [r7, #4]
 2611 0018 1B68     		ldr	r3, [r3]
 2612 001a FB60     		str	r3, [r7, #12]
 845:../Dave/Generated/src/SPI001/SPI001.c ****                                                                                              
 846:../Dave/Generated/src/SPI001/SPI001.c ****   /* <<<DD_SPI_API_6>>>*/                                                
 847:../Dave/Generated/src/SPI001/SPI001.c ****   if((((uint32_t)Flag & SPI001_FLAG_REG_Msk) >> 5) == (uint32_t)1)                 
 2613              		.loc 1 847 0
 2614 001c FB1C     		add	r3, r7, #3
 2615 001e 1B78     		ldrb	r3, [r3]
 2616 0020 5B09     		lsr	r3, r3, #5
 2617 0022 DBB2     		uxtb	r3, r3
 2618 0024 012B     		cmp	r3, #1
 2619 0026 0CD1     		bne	.L73
 848:../Dave/Generated/src/SPI001/SPI001.c ****   {                                                                      
 849:../Dave/Generated/src/SPI001/SPI001.c ****     TempValue = USICRegs->PSR_SSCMode;                                   
 2620              		.loc 1 849 0
 2621 0028 FB68     		ldr	r3, [r7, #12]
 2622 002a 9B6C     		ldr	r3, [r3, #72]
 2623 002c 3B61     		str	r3, [r7, #16]
 850:../Dave/Generated/src/SPI001/SPI001.c ****     TempValue &= ((uint32_t)0x01 << ((uint32_t)Flag & SPI001_FLAG_STATUS_Msk));  
 2624              		.loc 1 850 0
 2625 002e FB1C     		add	r3, r7, #3
 2626 0030 1A78     		ldrb	r2, [r3]
 2627 0032 1F23     		mov	r3, #31
 2628 0034 1340     		and	r3, r2
 2629 0036 0122     		mov	r2, #1
 2630 0038 9A40     		lsl	r2, r2, r3
 2631 003a 3B69     		ldr	r3, [r7, #16]
 2632 003c 1340     		and	r3, r2
 2633 003e 3B61     		str	r3, [r7, #16]
 2634 0040 13E0     		b	.L74
 2635              	.L73:
 851:../Dave/Generated/src/SPI001/SPI001.c ****   }                                                                      
 852:../Dave/Generated/src/SPI001/SPI001.c ****   else if((((uint32_t)Flag & SPI001_FLAG_REG_Msk) >> 5) == (uint32_t) 2)            
 2636              		.loc 1 852 0
 2637 0042 FB1C     		add	r3, r7, #3
 2638 0044 1B78     		ldrb	r3, [r3]
 2639 0046 5B09     		lsr	r3, r3, #5
 2640 0048 DBB2     		uxtb	r3, r3
 2641 004a 022B     		cmp	r3, #2
 2642 004c 0DD1     		bne	.L74
 853:../Dave/Generated/src/SPI001/SPI001.c ****   {                                                                      
 854:../Dave/Generated/src/SPI001/SPI001.c ****     TempValue = USICRegs->TRBSR;                                         
 2643              		.loc 1 854 0
 2644 004e FA68     		ldr	r2, [r7, #12]
 2645 0050 8A23     		mov	r3, #138
 2646 0052 5B00     		lsl	r3, r3, #1
 2647 0054 D358     		ldr	r3, [r2, r3]
 2648 0056 3B61     		str	r3, [r7, #16]
 855:../Dave/Generated/src/SPI001/SPI001.c ****     TempValue &= ((uint32_t)0x01 << ((uint32_t)Flag & SPI001_FLAG_STATUS_Msk));  
 2649              		.loc 1 855 0
 2650 0058 FB1C     		add	r3, r7, #3
 2651 005a 1A78     		ldrb	r2, [r3]
 2652 005c 1F23     		mov	r3, #31
 2653 005e 1340     		and	r3, r2
 2654 0060 0122     		mov	r2, #1
 2655 0062 9A40     		lsl	r2, r2, r3
 2656 0064 3B69     		ldr	r3, [r7, #16]
 2657 0066 1340     		and	r3, r2
 2658 0068 3B61     		str	r3, [r7, #16]
 2659              	.L74:
 856:../Dave/Generated/src/SPI001/SPI001.c ****   } 
 857:../Dave/Generated/src/SPI001/SPI001.c ****   else
 858:../Dave/Generated/src/SPI001/SPI001.c ****   {
 859:../Dave/Generated/src/SPI001/SPI001.c ****   	/* Do Nothing */
 860:../Dave/Generated/src/SPI001/SPI001.c ****   }
 861:../Dave/Generated/src/SPI001/SPI001.c ****   	                                                                       
 862:../Dave/Generated/src/SPI001/SPI001.c ****   if(TempValue != (uint32_t)0x00)                                                    
 2660              		.loc 1 862 0
 2661 006a 3B69     		ldr	r3, [r7, #16]
 2662 006c 002B     		cmp	r3, #0
 2663 006e 01D0     		beq	.L75
 863:../Dave/Generated/src/SPI001/SPI001.c ****   {                                                                      
 864:../Dave/Generated/src/SPI001/SPI001.c ****     Status = (status_t)SPI001_SET;                                                 
 2664              		.loc 1 864 0
 2665 0070 0223     		mov	r3, #2
 2666 0072 7B61     		str	r3, [r7, #20]
 2667              	.L75:
 865:../Dave/Generated/src/SPI001/SPI001.c ****   }                                                                                              
 866:../Dave/Generated/src/SPI001/SPI001.c ****   return Status;                                                         
 2668              		.loc 1 866 0
 2669 0074 7B69     		ldr	r3, [r7, #20]
 867:../Dave/Generated/src/SPI001/SPI001.c **** }                                                                        
 2670              		.loc 1 867 0
 2671 0076 181C     		mov	r0, r3
 2672 0078 BD46     		mov	sp, r7
 2673 007a 06B0     		add	sp, sp, #24
 2674              		@ sp needed for prologue
 2675 007c 80BD     		pop	{r7, pc}
 2676              		.cfi_endproc
 2677              	.LFE44:
 2679 007e C046     		.section	.text.SPI001_ClearFlag,"ax",%progbits
 2680              		.align	2
 2681              		.global	SPI001_ClearFlag
 2682              		.code	16
 2683              		.thumb_func
 2685              	SPI001_ClearFlag:
 2686              	.LFB45:
 868:../Dave/Generated/src/SPI001/SPI001.c ****                                                                          
 869:../Dave/Generated/src/SPI001/SPI001.c **** /* Clears the specified flag status.*/                                   
 870:../Dave/Generated/src/SPI001/SPI001.c **** void SPI001_ClearFlag                                                    
 871:../Dave/Generated/src/SPI001/SPI001.c **** (                                                                        
 872:../Dave/Generated/src/SPI001/SPI001.c ****   const SPI001_HandleType* Handle,                                       
 873:../Dave/Generated/src/SPI001/SPI001.c ****   SPI001_FlagStatusType Flag                                             
 874:../Dave/Generated/src/SPI001/SPI001.c **** )                                                                        
 875:../Dave/Generated/src/SPI001/SPI001.c **** {                                                                        
 2687              		.loc 1 875 0
 2688              		.cfi_startproc
 2689 0000 80B5     		push	{r7, lr}
 2690              	.LCFI35:
 2691              		.cfi_def_cfa_offset 8
 2692              		.cfi_offset 7, -8
 2693              		.cfi_offset 14, -4
 2694 0002 84B0     		sub	sp, sp, #16
 2695              	.LCFI36:
 2696              		.cfi_def_cfa_offset 24
 2697 0004 00AF     		add	r7, sp, #0
 2698              	.LCFI37:
 2699              		.cfi_def_cfa_register 7
 2700 0006 7860     		str	r0, [r7, #4]
 2701 0008 0A1C     		mov	r2, r1
 2702 000a FB1C     		add	r3, r7, #3
 2703 000c 1A70     		strb	r2, [r3]
 876:../Dave/Generated/src/SPI001/SPI001.c ****   USIC_CH_TypeDef* USICRegs = Handle->USICRegs;                          
 2704              		.loc 1 876 0
 2705 000e 7B68     		ldr	r3, [r7, #4]
 2706 0010 1B68     		ldr	r3, [r3]
 2707 0012 FB60     		str	r3, [r7, #12]
 877:../Dave/Generated/src/SPI001/SPI001.c ****                                                                  
 878:../Dave/Generated/src/SPI001/SPI001.c ****   /* <<<DD_SPI_API_7>>>*/                                                
 879:../Dave/Generated/src/SPI001/SPI001.c ****   if((((uint32_t)Flag & SPI001_FLAG_REG_Msk) >> 5) == (uint32_t) 1)
 2708              		.loc 1 879 0
 2709 0014 FB1C     		add	r3, r7, #3
 2710 0016 1B78     		ldrb	r3, [r3]
 2711 0018 5B09     		lsr	r3, r3, #5
 2712 001a DBB2     		uxtb	r3, r3
 2713 001c 012B     		cmp	r3, #1
 2714 001e 0DD1     		bne	.L78
 880:../Dave/Generated/src/SPI001/SPI001.c ****   {                                                                      
 881:../Dave/Generated/src/SPI001/SPI001.c ****     USICRegs->PSCR  |= ((uint32_t)0x01 << \
 2715              		.loc 1 881 0
 2716 0020 FB68     		ldr	r3, [r7, #12]
 2717 0022 DA6C     		ldr	r2, [r3, #76]
 2718 0024 FB1C     		add	r3, r7, #3
 2719 0026 1978     		ldrb	r1, [r3]
 2720 0028 1F23     		mov	r3, #31
 2721 002a 0B40     		and	r3, r1
 2722 002c 0121     		mov	r1, #1
 2723 002e 081C     		mov	r0, r1
 2724 0030 9840     		lsl	r0, r0, r3
 2725 0032 031C     		mov	r3, r0
 2726 0034 1A43     		orr	r2, r3
 2727 0036 FB68     		ldr	r3, [r7, #12]
 2728 0038 DA64     		str	r2, [r3, #76]
 2729 003a 17E0     		b	.L77
 2730              	.L78:
 882:../Dave/Generated/src/SPI001/SPI001.c ****                         ((uint32_t)Flag & SPI001_FLAG_STATUS_Msk));
 883:../Dave/Generated/src/SPI001/SPI001.c ****   }                                                                      
 884:../Dave/Generated/src/SPI001/SPI001.c ****   else if((((uint32_t)Flag & SPI001_FLAG_REG_Msk) >> 5) == (uint32_t) 2)            
 2731              		.loc 1 884 0
 2732 003c FB1C     		add	r3, r7, #3
 2733 003e 1B78     		ldrb	r3, [r3]
 2734 0040 5B09     		lsr	r3, r3, #5
 2735 0042 DBB2     		uxtb	r3, r3
 2736 0044 022B     		cmp	r3, #2
 2737 0046 11D1     		bne	.L77
 885:../Dave/Generated/src/SPI001/SPI001.c ****   {                                                                      
 886:../Dave/Generated/src/SPI001/SPI001.c ****     USICRegs->TRBSCR |= ((uint32_t)0x01 << \
 2738              		.loc 1 886 0
 2739 0048 FA68     		ldr	r2, [r7, #12]
 2740 004a 8C23     		mov	r3, #140
 2741 004c 5B00     		lsl	r3, r3, #1
 2742 004e D258     		ldr	r2, [r2, r3]
 2743 0050 FB1C     		add	r3, r7, #3
 2744 0052 1978     		ldrb	r1, [r3]
 2745 0054 1F23     		mov	r3, #31
 2746 0056 0B40     		and	r3, r1
 2747 0058 0121     		mov	r1, #1
 2748 005a 081C     		mov	r0, r1
 2749 005c 9840     		lsl	r0, r0, r3
 2750 005e 031C     		mov	r3, r0
 2751 0060 111C     		mov	r1, r2
 2752 0062 1943     		orr	r1, r3
 2753 0064 FA68     		ldr	r2, [r7, #12]
 2754 0066 8C23     		mov	r3, #140
 2755 0068 5B00     		lsl	r3, r3, #1
 2756 006a D150     		str	r1, [r2, r3]
 2757              	.L77:
 887:../Dave/Generated/src/SPI001/SPI001.c ****                           ((uint32_t)Flag & SPI001_FLAG_STATUS_Msk));
 888:../Dave/Generated/src/SPI001/SPI001.c ****   } 
 889:../Dave/Generated/src/SPI001/SPI001.c ****   else
 890:../Dave/Generated/src/SPI001/SPI001.c ****   {
 891:../Dave/Generated/src/SPI001/SPI001.c ****   	 /* Do Nothing */
 892:../Dave/Generated/src/SPI001/SPI001.c ****   }                                                                     
 893:../Dave/Generated/src/SPI001/SPI001.c ****                                                                                                 
 894:../Dave/Generated/src/SPI001/SPI001.c **** }                                                                        
 2758              		.loc 1 894 0
 2759 006c BD46     		mov	sp, r7
 2760 006e 04B0     		add	sp, sp, #16
 2761              		@ sp needed for prologue
 2762 0070 80BD     		pop	{r7, pc}
 2763              		.cfi_endproc
 2764              	.LFE45:
 2766 0072 C046     		.text
 2767              	.Letext0:
 2768              		.file 2 "d:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 2769              		.file 3 "D:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 2770              		.file 4 "D:\\DAVE3_workspace\\ws3.1.10\\Infineon_DA_Board\\Dave\\Generated\\inc\\DAVESupport/../..
 2771              		.file 5 "D:\\DAVE3_workspace\\ws3.1.10\\Infineon_DA_Board\\Dave\\Generated\\inc\\DAVESupport/../..
 2772              		.file 6 "D:\\DAVE3_workspace\\ws3.1.10\\Infineon_DA_Board\\Dave\\Generated\\inc\\DAVESupport/../..
DEFINED SYMBOLS
                            *ABS*:00000000 SPI001.c
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:22     .rodata:00000000 SPI001_Baud_Parameter_Values0
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:19     .rodata:00000000 $d
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:26     .text.SPI001_lInit:00000000 $t
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:31     .text.SPI001_lInit:00000000 SPI001_lInit
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:514    .text.SPI001_lInit:00000304 $d
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:527    .text.SPI001_lConfigureBaudRate:00000000 $t
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:532    .text.SPI001_lConfigureBaudRate:00000000 SPI001_lConfigureBaudRate
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:666    .text.SPI001_lConfigureBaudRate:000000dc $d
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:673    .text.SPI001_lClearPortRegs:00000000 $t
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:678    .text.SPI001_lClearPortRegs:00000000 SPI001_lClearPortRegs
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:865    .text.SPI001_lMTSR2_Modfn:00000000 $t
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:870    .text.SPI001_lMTSR2_Modfn:00000000 SPI001_lMTSR2_Modfn
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:1057   .text.SPI001_lMTSR3_Modfn:00000000 $t
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:1062   .text.SPI001_lMTSR3_Modfn:00000000 SPI001_lMTSR3_Modfn
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:1249   .text.SPI001_lPinModfn_Fullduplex:00000000 $t
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:1254   .text.SPI001_lPinModfn_Fullduplex:00000000 SPI001_lPinModfn_Fullduplex
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:1562   .text.SPI001_Init:00000000 $t
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:1567   .text.SPI001_Init:00000000 SPI001_Init
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:1629   .text.SPI001_Init:00000050 $d
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:1639   .text.SPI001_DeInit:00000000 $t
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:1644   .text.SPI001_DeInit:00000000 SPI001_DeInit
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:1669   .text.SPI001_Configure:00000000 $t
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:1674   .text.SPI001_Configure:00000000 SPI001_Configure
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:2374   .text.SPI001_Configure:0000046c $d
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:2381   .text.SPI001_ReadData:00000000 $t
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:2386   .text.SPI001_ReadData:00000000 SPI001_ReadData
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:2456   .text.SPI001_WriteData:00000000 $t
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:2461   .text.SPI001_WriteData:00000000 SPI001_WriteData
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:2579   .text.SPI001_GetFlagStatus:00000000 $t
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:2584   .text.SPI001_GetFlagStatus:00000000 SPI001_GetFlagStatus
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:2680   .text.SPI001_ClearFlag:00000000 $t
C:\Users\Mikew\AppData\Local\Temp\ccfLMmIp.s:2685   .text.SPI001_ClearFlag:00000000 SPI001_ClearFlag
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.c67c26e5b5bc773b816ae3f1dbc84429
                           .group:00000000 wm4.XMC1300.h.45.4ee692c6c98aa9fc42e2abbc732052b9
                           .group:00000000 wm4.core_cm0.h.47.022e66414e77714da7c4b30b3ad99fe8
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.b7b6650bdd2316848d940915272d75b8
                           .group:00000000 wm4.core_cm0.h.135.ca70469f87e143609670bb393bfa6518
                           .group:00000000 wm4.XMC1000_RomFunctionTable.h.31.6d9a94465618f31b040dc9cea9a47ad7
                           .group:00000000 wm4.XMC1300.h.126.871a37eeeb3f6a078f5ddf5efd64103f
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.383e3edbb9cbf6e538f7c1532ef623c1
                           .group:00000000 wm4.CCU8PWMLIB.h.74.725ec81203769525cc7a424597055f47
                           .group:00000000 wm4.MOTORLIB.h.62.1aa717522e337383e1234be386036b7c
                           .group:00000000 wm4.IO004.h.53.442ea5eb47ad9eedc675253aa35f3107
                           .group:00000000 wm4.CLK002.h.56.d2936f957892acc36e594c5138aee657
                           .group:00000000 wm4.SPI001.h.66.008f87dc8e35bd406e3c30cddbc0095a
                           .group:00000000 wm4.SPI001_Conf.h.73.c5c12193b8e80575950f823e6fd0c682
                           .group:00000000 wm4.Usic.h.53.cce92e424aaf84fbc64e88bdf23f7e2f

UNDEFINED SYMBOLS
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fcmple
__aeabi_fsub
__aeabi_fcmpgt
__aeabi_f2uiz
__aeabi_fmul
__aeabi_fadd
SPI001_Handle0
